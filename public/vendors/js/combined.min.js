/*
 Copyright (C) Federico Zivolo 2019
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */(function(e,t){'object'==typeof exports&&'undefined'!=typeof module?module.exports=t():'function'==typeof define&&define.amd?define(t):e.Popper=t()})(this,function(){'use strict';function e(e){return e&&'[object Function]'==={}.toString.call(e)}function t(e,t){if(1!==e.nodeType)return[];var o=e.ownerDocument.defaultView,n=o.getComputedStyle(e,null);return t?n[t]:n}function o(e){return'HTML'===e.nodeName?e:e.parentNode||e.host}function n(e){if(!e)return document.body;switch(e.nodeName){case'HTML':case'BODY':return e.ownerDocument.body;case'#document':return e.body;}var i=t(e),r=i.overflow,p=i.overflowX,s=i.overflowY;return /(auto|scroll|overlay)/.test(r+s+p)?e:n(o(e))}function r(e){return 11===e?pe:10===e?se:pe||se}function p(e){if(!e)return document.documentElement;for(var o=r(10)?document.body:null,n=e.offsetParent||null;n===o&&e.nextElementSibling;)n=(e=e.nextElementSibling).offsetParent;var i=n&&n.nodeName;return i&&'BODY'!==i&&'HTML'!==i?-1!==['TH','TD','TABLE'].indexOf(n.nodeName)&&'static'===t(n,'position')?p(n):n:e?e.ownerDocument.documentElement:document.documentElement}function s(e){var t=e.nodeName;return'BODY'!==t&&('HTML'===t||p(e.firstElementChild)===e)}function d(e){return null===e.parentNode?e:d(e.parentNode)}function a(e,t){if(!e||!e.nodeType||!t||!t.nodeType)return document.documentElement;var o=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,n=o?e:t,i=o?t:e,r=document.createRange();r.setStart(n,0),r.setEnd(i,0);var l=r.commonAncestorContainer;if(e!==l&&t!==l||n.contains(i))return s(l)?l:p(l);var f=d(e);return f.host?a(f.host,t):a(e,d(t).host)}function l(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:'top',o='top'===t?'scrollTop':'scrollLeft',n=e.nodeName;if('BODY'===n||'HTML'===n){var i=e.ownerDocument.documentElement,r=e.ownerDocument.scrollingElement||i;return r[o]}return e[o]}function f(e,t){var o=2<arguments.length&&void 0!==arguments[2]&&arguments[2],n=l(t,'top'),i=l(t,'left'),r=o?-1:1;return e.top+=n*r,e.bottom+=n*r,e.left+=i*r,e.right+=i*r,e}function m(e,t){var o='x'===t?'Left':'Top',n='Left'==o?'Right':'Bottom';return parseFloat(e['border'+o+'Width'],10)+parseFloat(e['border'+n+'Width'],10)}function h(e,t,o,n){return ee(t['offset'+e],t['scroll'+e],o['client'+e],o['offset'+e],o['scroll'+e],r(10)?parseInt(o['offset'+e])+parseInt(n['margin'+('Height'===e?'Top':'Left')])+parseInt(n['margin'+('Height'===e?'Bottom':'Right')]):0)}function c(e){var t=e.body,o=e.documentElement,n=r(10)&&getComputedStyle(o);return{height:h('Height',t,o,n),width:h('Width',t,o,n)}}function g(e){return fe({},e,{right:e.left+e.width,bottom:e.top+e.height})}function u(e){var o={};try{if(r(10)){o=e.getBoundingClientRect();var n=l(e,'top'),i=l(e,'left');o.top+=n,o.left+=i,o.bottom+=n,o.right+=i}else o=e.getBoundingClientRect()}catch(t){}var p={left:o.left,top:o.top,width:o.right-o.left,height:o.bottom-o.top},s='HTML'===e.nodeName?c(e.ownerDocument):{},d=s.width||e.clientWidth||p.right-p.left,a=s.height||e.clientHeight||p.bottom-p.top,f=e.offsetWidth-d,h=e.offsetHeight-a;if(f||h){var u=t(e);f-=m(u,'x'),h-=m(u,'y'),p.width-=f,p.height-=h}return g(p)}function b(e,o){var i=2<arguments.length&&void 0!==arguments[2]&&arguments[2],p=r(10),s='HTML'===o.nodeName,d=u(e),a=u(o),l=n(e),m=t(o),h=parseFloat(m.borderTopWidth,10),c=parseFloat(m.borderLeftWidth,10);i&&s&&(a.top=ee(a.top,0),a.left=ee(a.left,0));var b=g({top:d.top-a.top-h,left:d.left-a.left-c,width:d.width,height:d.height});if(b.marginTop=0,b.marginLeft=0,!p&&s){var w=parseFloat(m.marginTop,10),y=parseFloat(m.marginLeft,10);b.top-=h-w,b.bottom-=h-w,b.left-=c-y,b.right-=c-y,b.marginTop=w,b.marginLeft=y}return(p&&!i?o.contains(l):o===l&&'BODY'!==l.nodeName)&&(b=f(b,o)),b}function w(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],o=e.ownerDocument.documentElement,n=b(e,o),i=ee(o.clientWidth,window.innerWidth||0),r=ee(o.clientHeight,window.innerHeight||0),p=t?0:l(o),s=t?0:l(o,'left'),d={top:p-n.top+n.marginTop,left:s-n.left+n.marginLeft,width:i,height:r};return g(d)}function y(e){var n=e.nodeName;if('BODY'===n||'HTML'===n)return!1;if('fixed'===t(e,'position'))return!0;var i=o(e);return!!i&&y(i)}function E(e){if(!e||!e.parentElement||r())return document.documentElement;for(var o=e.parentElement;o&&'none'===t(o,'transform');)o=o.parentElement;return o||document.documentElement}function v(e,t,i,r){var p=4<arguments.length&&void 0!==arguments[4]&&arguments[4],s={top:0,left:0},d=p?E(e):a(e,t);if('viewport'===r)s=w(d,p);else{var l;'scrollParent'===r?(l=n(o(t)),'BODY'===l.nodeName&&(l=e.ownerDocument.documentElement)):'window'===r?l=e.ownerDocument.documentElement:l=r;var f=b(l,d,p);if('HTML'===l.nodeName&&!y(d)){var m=c(e.ownerDocument),h=m.height,g=m.width;s.top+=f.top-f.marginTop,s.bottom=h+f.top,s.left+=f.left-f.marginLeft,s.right=g+f.left}else s=f}i=i||0;var u='number'==typeof i;return s.left+=u?i:i.left||0,s.top+=u?i:i.top||0,s.right-=u?i:i.right||0,s.bottom-=u?i:i.bottom||0,s}function x(e){var t=e.width,o=e.height;return t*o}function O(e,t,o,n,i){var r=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf('auto'))return e;var p=v(o,n,r,i),s={top:{width:p.width,height:t.top-p.top},right:{width:p.right-t.right,height:p.height},bottom:{width:p.width,height:p.bottom-t.bottom},left:{width:t.left-p.left,height:p.height}},d=Object.keys(s).map(function(e){return fe({key:e},s[e],{area:x(s[e])})}).sort(function(e,t){return t.area-e.area}),a=d.filter(function(e){var t=e.width,n=e.height;return t>=o.clientWidth&&n>=o.clientHeight}),l=0<a.length?a[0].key:d[0].key,f=e.split('-')[1];return l+(f?'-'+f:'')}function L(e,t,o){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null,i=n?E(t):a(t,o);return b(o,i,n)}function S(e){var t=e.ownerDocument.defaultView,o=t.getComputedStyle(e),n=parseFloat(o.marginTop||0)+parseFloat(o.marginBottom||0),i=parseFloat(o.marginLeft||0)+parseFloat(o.marginRight||0),r={width:e.offsetWidth+i,height:e.offsetHeight+n};return r}function T(e){var t={left:'right',right:'left',bottom:'top',top:'bottom'};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function D(e,t,o){o=o.split('-')[0];var n=S(e),i={width:n.width,height:n.height},r=-1!==['right','left'].indexOf(o),p=r?'top':'left',s=r?'left':'top',d=r?'height':'width',a=r?'width':'height';return i[p]=t[p]+t[d]/2-n[d]/2,i[s]=o===s?t[s]-n[a]:t[T(s)],i}function C(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function N(e,t,o){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===o});var n=C(e,function(e){return e[t]===o});return e.indexOf(n)}function P(t,o,n){var i=void 0===n?t:t.slice(0,N(t,'name',n));return i.forEach(function(t){t['function']&&console.warn('`modifier.function` is deprecated, use `modifier.fn`!');var n=t['function']||t.fn;t.enabled&&e(n)&&(o.offsets.popper=g(o.offsets.popper),o.offsets.reference=g(o.offsets.reference),o=n(o,t))}),o}function k(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=L(this.state,this.popper,this.reference,this.options.positionFixed),e.placement=O(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.positionFixed=this.options.positionFixed,e.offsets.popper=D(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position=this.options.positionFixed?'fixed':'absolute',e=P(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function W(e,t){return e.some(function(e){var o=e.name,n=e.enabled;return n&&o===t})}function H(e){for(var t=[!1,'ms','Webkit','Moz','O'],o=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length;n++){var i=t[n],r=i?''+i+o:e;if('undefined'!=typeof document.body.style[r])return r}return null}function B(){return this.state.isDestroyed=!0,W(this.modifiers,'applyStyle')&&(this.popper.removeAttribute('x-placement'),this.popper.style.position='',this.popper.style.top='',this.popper.style.left='',this.popper.style.right='',this.popper.style.bottom='',this.popper.style.willChange='',this.popper.style[H('transform')]=''),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function A(e){var t=e.ownerDocument;return t?t.defaultView:window}function M(e,t,o,i){var r='BODY'===e.nodeName,p=r?e.ownerDocument.defaultView:e;p.addEventListener(t,o,{passive:!0}),r||M(n(p.parentNode),t,o,i),i.push(p)}function F(e,t,o,i){o.updateBound=i,A(e).addEventListener('resize',o.updateBound,{passive:!0});var r=n(e);return M(r,'scroll',o.updateBound,o.scrollParents),o.scrollElement=r,o.eventsEnabled=!0,o}function I(){this.state.eventsEnabled||(this.state=F(this.reference,this.options,this.state,this.scheduleUpdate))}function R(e,t){return A(e).removeEventListener('resize',t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener('scroll',t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t}function U(){this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=R(this.reference,this.state))}function Y(e){return''!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function j(e,t){Object.keys(t).forEach(function(o){var n='';-1!==['width','height','top','right','bottom','left'].indexOf(o)&&Y(t[o])&&(n='px'),e.style[o]=t[o]+n})}function V(e,t){Object.keys(t).forEach(function(o){var n=t[o];!1===n?e.removeAttribute(o):e.setAttribute(o,t[o])})}function q(e,t){var o=e.offsets,n=o.popper,i=o.reference,r=$,p=function(e){return e},s=r(i.width),d=r(n.width),a=-1!==['left','right'].indexOf(e.placement),l=-1!==e.placement.indexOf('-'),f=t?a||l||s%2==d%2?r:Z:p,m=t?r:p;return{left:f(1==s%2&&1==d%2&&!l&&t?n.left-1:n.left),top:m(n.top),bottom:m(n.bottom),right:f(n.right)}}function K(e,t,o){var n=C(e,function(e){var o=e.name;return o===t}),i=!!n&&e.some(function(e){return e.name===o&&e.enabled&&e.order<n.order});if(!i){var r='`'+t+'`';console.warn('`'+o+'`'+' modifier is required by '+r+' modifier in order to work, be sure to include it before '+r+'!')}return i}function z(e){return'end'===e?'start':'start'===e?'end':e}function G(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],o=ce.indexOf(e),n=ce.slice(o+1).concat(ce.slice(0,o));return t?n.reverse():n}function _(e,t,o,n){var i=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),r=+i[1],p=i[2];if(!r)return e;if(0===p.indexOf('%')){var s;switch(p){case'%p':s=o;break;case'%':case'%r':default:s=n;}var d=g(s);return d[t]/100*r}if('vh'===p||'vw'===p){var a;return a='vh'===p?ee(document.documentElement.clientHeight,window.innerHeight||0):ee(document.documentElement.clientWidth,window.innerWidth||0),a/100*r}return r}function X(e,t,o,n){var i=[0,0],r=-1!==['right','left'].indexOf(n),p=e.split(/(\+|\-)/).map(function(e){return e.trim()}),s=p.indexOf(C(p,function(e){return-1!==e.search(/,|\s/)}));p[s]&&-1===p[s].indexOf(',')&&console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');var d=/\s*,\s*|\s+/,a=-1===s?[p]:[p.slice(0,s).concat([p[s].split(d)[0]]),[p[s].split(d)[1]].concat(p.slice(s+1))];return a=a.map(function(e,n){var i=(1===n?!r:r)?'height':'width',p=!1;return e.reduce(function(e,t){return''===e[e.length-1]&&-1!==['+','-'].indexOf(t)?(e[e.length-1]=t,p=!0,e):p?(e[e.length-1]+=t,p=!1,e):e.concat(t)},[]).map(function(e){return _(e,i,t,o)})}),a.forEach(function(e,t){e.forEach(function(o,n){Y(o)&&(i[t]+=o*('-'===e[n-1]?-1:1))})}),i}function J(e,t){var o,n=t.offset,i=e.placement,r=e.offsets,p=r.popper,s=r.reference,d=i.split('-')[0];return o=Y(+n)?[+n,0]:X(n,p,s,d),'left'===d?(p.top+=o[0],p.left-=o[1]):'right'===d?(p.top+=o[0],p.left+=o[1]):'top'===d?(p.left+=o[0],p.top-=o[1]):'bottom'===d&&(p.left+=o[0],p.top+=o[1]),e.popper=p,e}for(var Q=Math.min,Z=Math.floor,$=Math.round,ee=Math.max,te='undefined'!=typeof window&&'undefined'!=typeof document,oe=['Edge','Trident','Firefox'],ne=0,ie=0;ie<oe.length;ie+=1)if(te&&0<=navigator.userAgent.indexOf(oe[ie])){ne=1;break}var i=te&&window.Promise,re=i?function(e){var t=!1;return function(){t||(t=!0,window.Promise.resolve().then(function(){t=!1,e()}))}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},ne))}},pe=te&&!!(window.MSInputMethodContext&&document.documentMode),se=te&&/MSIE 10/.test(navigator.userAgent),de=function(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')},ae=function(){function e(e,t){for(var o,n=0;n<t.length;n++)o=t[n],o.enumerable=o.enumerable||!1,o.configurable=!0,'value'in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}return function(t,o,n){return o&&e(t.prototype,o),n&&e(t,n),t}}(),le=function(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e},fe=Object.assign||function(e){for(var t,o=1;o<arguments.length;o++)for(var n in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e},me=te&&/Firefox/i.test(navigator.userAgent),he=['auto-start','auto','auto-end','top-start','top','top-end','right-start','right','right-end','bottom-end','bottom','bottom-start','left-end','left','left-start'],ce=he.slice(3),ge={FLIP:'flip',CLOCKWISE:'clockwise',COUNTERCLOCKWISE:'counterclockwise'},ue=function(){function t(o,n){var i=this,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};de(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(i.update)},this.update=re(this.update.bind(this)),this.options=fe({},t.Defaults,r),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=o&&o.jquery?o[0]:o,this.popper=n&&n.jquery?n[0]:n,this.options.modifiers={},Object.keys(fe({},t.Defaults.modifiers,r.modifiers)).forEach(function(e){i.options.modifiers[e]=fe({},t.Defaults.modifiers[e]||{},r.modifiers?r.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return fe({name:e},i.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(t){t.enabled&&e(t.onLoad)&&t.onLoad(i.reference,i.popper,i.options,t,i.state)}),this.update();var p=this.options.eventsEnabled;p&&this.enableEventListeners(),this.state.eventsEnabled=p}return ae(t,[{key:'update',value:function(){return k.call(this)}},{key:'destroy',value:function(){return B.call(this)}},{key:'enableEventListeners',value:function(){return I.call(this)}},{key:'disableEventListeners',value:function(){return U.call(this)}}]),t}();return ue.Utils=('undefined'==typeof window?global:window).PopperUtils,ue.placements=he,ue.Defaults={placement:'bottom',positionFixed:!1,eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t=e.placement,o=t.split('-')[0],n=t.split('-')[1];if(n){var i=e.offsets,r=i.reference,p=i.popper,s=-1!==['bottom','top'].indexOf(o),d=s?'left':'top',a=s?'width':'height',l={start:le({},d,r[d]),end:le({},d,r[d]+r[a]-p[a])};e.offsets.popper=fe({},p,l[n])}return e}},offset:{order:200,enabled:!0,fn:J,offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,t){var o=t.boundariesElement||p(e.instance.popper);e.instance.reference===o&&(o=p(o));var n=H('transform'),i=e.instance.popper.style,r=i.top,s=i.left,d=i[n];i.top='',i.left='',i[n]='';var a=v(e.instance.popper,e.instance.reference,t.padding,o,e.positionFixed);i.top=r,i.left=s,i[n]=d,t.boundaries=a;var l=t.priority,f=e.offsets.popper,m={primary:function(e){var o=f[e];return f[e]<a[e]&&!t.escapeWithReference&&(o=ee(f[e],a[e])),le({},e,o)},secondary:function(e){var o='right'===e?'left':'top',n=f[o];return f[e]>a[e]&&!t.escapeWithReference&&(n=Q(f[o],a[e]-('right'===e?f.width:f.height))),le({},o,n)}};return l.forEach(function(e){var t=-1===['left','top'].indexOf(e)?'secondary':'primary';f=fe({},f,m[t](e))}),e.offsets.popper=f,e},priority:['left','right','top','bottom'],padding:5,boundariesElement:'scrollParent'},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,o=t.popper,n=t.reference,i=e.placement.split('-')[0],r=Z,p=-1!==['top','bottom'].indexOf(i),s=p?'right':'bottom',d=p?'left':'top',a=p?'width':'height';return o[s]<r(n[d])&&(e.offsets.popper[d]=r(n[d])-o[a]),o[d]>r(n[s])&&(e.offsets.popper[d]=r(n[s])),e}},arrow:{order:500,enabled:!0,fn:function(e,o){var n;if(!K(e.instance.modifiers,'arrow','keepTogether'))return e;var i=o.element;if('string'==typeof i){if(i=e.instance.popper.querySelector(i),!i)return e;}else if(!e.instance.popper.contains(i))return console.warn('WARNING: `arrow.element` must be child of its popper element!'),e;var r=e.placement.split('-')[0],p=e.offsets,s=p.popper,d=p.reference,a=-1!==['left','right'].indexOf(r),l=a?'height':'width',f=a?'Top':'Left',m=f.toLowerCase(),h=a?'left':'top',c=a?'bottom':'right',u=S(i)[l];d[c]-u<s[m]&&(e.offsets.popper[m]-=s[m]-(d[c]-u)),d[m]+u>s[c]&&(e.offsets.popper[m]+=d[m]+u-s[c]),e.offsets.popper=g(e.offsets.popper);var b=d[m]+d[l]/2-u/2,w=t(e.instance.popper),y=parseFloat(w['margin'+f],10),E=parseFloat(w['border'+f+'Width'],10),v=b-e.offsets.popper[m]-y-E;return v=ee(Q(s[l]-u,v),0),e.arrowElement=i,e.offsets.arrow=(n={},le(n,m,$(v)),le(n,h,''),n),e},element:'[x-arrow]'},flip:{order:600,enabled:!0,fn:function(e,t){if(W(e.instance.modifiers,'inner'))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var o=v(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement,e.positionFixed),n=e.placement.split('-')[0],i=T(n),r=e.placement.split('-')[1]||'',p=[];switch(t.behavior){case ge.FLIP:p=[n,i];break;case ge.CLOCKWISE:p=G(n);break;case ge.COUNTERCLOCKWISE:p=G(n,!0);break;default:p=t.behavior;}return p.forEach(function(s,d){if(n!==s||p.length===d+1)return e;n=e.placement.split('-')[0],i=T(n);var a=e.offsets.popper,l=e.offsets.reference,f=Z,m='left'===n&&f(a.right)>f(l.left)||'right'===n&&f(a.left)<f(l.right)||'top'===n&&f(a.bottom)>f(l.top)||'bottom'===n&&f(a.top)<f(l.bottom),h=f(a.left)<f(o.left),c=f(a.right)>f(o.right),g=f(a.top)<f(o.top),u=f(a.bottom)>f(o.bottom),b='left'===n&&h||'right'===n&&c||'top'===n&&g||'bottom'===n&&u,w=-1!==['top','bottom'].indexOf(n),y=!!t.flipVariations&&(w&&'start'===r&&h||w&&'end'===r&&c||!w&&'start'===r&&g||!w&&'end'===r&&u);(m||b||y)&&(e.flipped=!0,(m||b)&&(n=p[d+1]),y&&(r=z(r)),e.placement=n+(r?'-'+r:''),e.offsets.popper=fe({},e.offsets.popper,D(e.instance.popper,e.offsets.reference,e.placement)),e=P(e.instance.modifiers,e,'flip'))}),e},behavior:'flip',padding:5,boundariesElement:'viewport'},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,o=t.split('-')[0],n=e.offsets,i=n.popper,r=n.reference,p=-1!==['left','right'].indexOf(o),s=-1===['top','left'].indexOf(o);return i[p?'left':'top']=r[o]-(s?i[p?'width':'height']:0),e.placement=T(t),e.offsets.popper=g(i),e}},hide:{order:800,enabled:!0,fn:function(e){if(!K(e.instance.modifiers,'hide','preventOverflow'))return e;var t=e.offsets.reference,o=C(e.instance.modifiers,function(e){return'preventOverflow'===e.name}).boundaries;if(t.bottom<o.top||t.left>o.right||t.top>o.bottom||t.right<o.left){if(!0===e.hide)return e;e.hide=!0,e.attributes['x-out-of-boundaries']=''}else{if(!1===e.hide)return e;e.hide=!1,e.attributes['x-out-of-boundaries']=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var o=t.x,n=t.y,i=e.offsets.popper,r=C(e.instance.modifiers,function(e){return'applyStyle'===e.name}).gpuAcceleration;void 0!==r&&console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');var s,d,a=void 0===r?t.gpuAcceleration:r,l=p(e.instance.popper),f=u(l),m={position:i.position},h=q(e,2>window.devicePixelRatio||!me),c='bottom'===o?'top':'bottom',g='right'===n?'left':'right',b=H('transform');if(d='bottom'==c?'HTML'===l.nodeName?-l.clientHeight+h.bottom:-f.height+h.bottom:h.top,s='right'==g?'HTML'===l.nodeName?-l.clientWidth+h.right:-f.width+h.right:h.left,a&&b)m[b]='translate3d('+s+'px, '+d+'px, 0)',m[c]=0,m[g]=0,m.willChange='transform';else{var w='bottom'==c?-1:1,y='right'==g?-1:1;m[c]=d*w,m[g]=s*y,m.willChange=c+', '+g}var E={"x-placement":e.placement};return e.attributes=fe({},E,e.attributes),e.styles=fe({},m,e.styles),e.arrowStyles=fe({},e.offsets.arrow,e.arrowStyles),e},gpuAcceleration:!0,x:'bottom',y:'right'},applyStyle:{order:900,enabled:!0,fn:function(e){return j(e.instance.popper,e.styles),V(e.instance.popper,e.attributes),e.arrowElement&&Object.keys(e.arrowStyles).length&&j(e.arrowElement,e.arrowStyles),e},onLoad:function(e,t,o,n,i){var r=L(i,t,e,o.positionFixed),p=O(o.placement,r,t,e,o.modifiers.flip.boundariesElement,o.modifiers.flip.padding);return t.setAttribute('x-placement',p),j(t,{position:o.positionFixed?'fixed':'absolute'}),o},gpuAcceleration:void 0}}},ue});
//# sourceMappingURL=popper.min.js.map

/*!
  * Bootstrap v4.3.1 (https://getbootstrap.com/)
  * Copyright 2011-2019 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jquery"),require("popper.js")):"function"==typeof define&&define.amd?define(["exports","jquery","popper.js"],e):e((t=t||self).bootstrap={},t.jQuery,t.Popper)}(this,function(t,g,u){"use strict";function i(t,e){for(var n=0;n<e.length;n++){var i=e[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function s(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function l(o){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},e=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(e=e.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),e.forEach(function(t){var e,n,i;e=o,i=r[n=t],n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i})}return o}g=g&&g.hasOwnProperty("default")?g.default:g,u=u&&u.hasOwnProperty("default")?u.default:u;var e="transitionend";function n(t){var e=this,n=!1;return g(this).one(_.TRANSITION_END,function(){n=!0}),setTimeout(function(){n||_.triggerTransitionEnd(e)},t),this}var _={TRANSITION_END:"bsTransitionEnd",getUID:function(t){for(;t+=~~(1e6*Math.random()),document.getElementById(t););return t},getSelectorFromElement:function(t){var e=t.getAttribute("data-target");if(!e||"#"===e){var n=t.getAttribute("href");e=n&&"#"!==n?n.trim():""}try{return document.querySelector(e)?e:null}catch(t){return null}},getTransitionDurationFromElement:function(t){if(!t)return 0;var e=g(t).css("transition-duration"),n=g(t).css("transition-delay"),i=parseFloat(e),o=parseFloat(n);return i||o?(e=e.split(",")[0],n=n.split(",")[0],1e3*(parseFloat(e)+parseFloat(n))):0},reflow:function(t){return t.offsetHeight},triggerTransitionEnd:function(t){g(t).trigger(e)},supportsTransitionEnd:function(){return Boolean(e)},isElement:function(t){return(t[0]||t).nodeType},typeCheckConfig:function(t,e,n){for(var i in n)if(Object.prototype.hasOwnProperty.call(n,i)){var o=n[i],r=e[i],s=r&&_.isElement(r)?"element":(a=r,{}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase());if(!new RegExp(o).test(s))throw new Error(t.toUpperCase()+': Option "'+i+'" provided type "'+s+'" but expected type "'+o+'".')}var a},findShadowRoot:function(t){if(!document.documentElement.attachShadow)return null;if("function"!=typeof t.getRootNode)return t instanceof ShadowRoot?t:t.parentNode?_.findShadowRoot(t.parentNode):null;var e=t.getRootNode();return e instanceof ShadowRoot?e:null}};g.fn.emulateTransitionEnd=n,g.event.special[_.TRANSITION_END]={bindType:e,delegateType:e,handle:function(t){if(g(t.target).is(this))return t.handleObj.handler.apply(this,arguments)}};var o="alert",r="bs.alert",a="."+r,c=g.fn[o],h={CLOSE:"close"+a,CLOSED:"closed"+a,CLICK_DATA_API:"click"+a+".data-api"},f="alert",d="fade",m="show",p=function(){function i(t){this._element=t}var t=i.prototype;return t.close=function(t){var e=this._element;t&&(e=this._getRootElement(t)),this._triggerCloseEvent(e).isDefaultPrevented()||this._removeElement(e)},t.dispose=function(){g.removeData(this._element,r),this._element=null},t._getRootElement=function(t){var e=_.getSelectorFromElement(t),n=!1;return e&&(n=document.querySelector(e)),n||(n=g(t).closest("."+f)[0]),n},t._triggerCloseEvent=function(t){var e=g.Event(h.CLOSE);return g(t).trigger(e),e},t._removeElement=function(e){var n=this;if(g(e).removeClass(m),g(e).hasClass(d)){var t=_.getTransitionDurationFromElement(e);g(e).one(_.TRANSITION_END,function(t){return n._destroyElement(e,t)}).emulateTransitionEnd(t)}else this._destroyElement(e)},t._destroyElement=function(t){g(t).detach().trigger(h.CLOSED).remove()},i._jQueryInterface=function(n){return this.each(function(){var t=g(this),e=t.data(r);e||(e=new i(this),t.data(r,e)),"close"===n&&e[n](this)})},i._handleDismiss=function(e){return function(t){t&&t.preventDefault(),e.close(this)}},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}}]),i}();g(document).on(h.CLICK_DATA_API,'[data-dismiss="alert"]',p._handleDismiss(new p)),g.fn[o]=p._jQueryInterface,g.fn[o].Constructor=p,g.fn[o].noConflict=function(){return g.fn[o]=c,p._jQueryInterface};var v="button",y="bs.button",E="."+y,C=".data-api",T=g.fn[v],S="active",b="btn",I="focus",D='[data-toggle^="button"]',w='[data-toggle="buttons"]',A='input:not([type="hidden"])',N=".active",O=".btn",k={CLICK_DATA_API:"click"+E+C,FOCUS_BLUR_DATA_API:"focus"+E+C+" blur"+E+C},P=function(){function n(t){this._element=t}var t=n.prototype;return t.toggle=function(){var t=!0,e=!0,n=g(this._element).closest(w)[0];if(n){var i=this._element.querySelector(A);if(i){if("radio"===i.type)if(i.checked&&this._element.classList.contains(S))t=!1;else{var o=n.querySelector(N);o&&g(o).removeClass(S)}if(t){if(i.hasAttribute("disabled")||n.hasAttribute("disabled")||i.classList.contains("disabled")||n.classList.contains("disabled"))return;i.checked=!this._element.classList.contains(S),g(i).trigger("change")}i.focus(),e=!1}}e&&this._element.setAttribute("aria-pressed",!this._element.classList.contains(S)),t&&g(this._element).toggleClass(S)},t.dispose=function(){g.removeData(this._element,y),this._element=null},n._jQueryInterface=function(e){return this.each(function(){var t=g(this).data(y);t||(t=new n(this),g(this).data(y,t)),"toggle"===e&&t[e]()})},s(n,null,[{key:"VERSION",get:function(){return"4.3.1"}}]),n}();g(document).on(k.CLICK_DATA_API,D,function(t){t.preventDefault();var e=t.target;g(e).hasClass(b)||(e=g(e).closest(O)),P._jQueryInterface.call(g(e),"toggle")}).on(k.FOCUS_BLUR_DATA_API,D,function(t){var e=g(t.target).closest(O)[0];g(e).toggleClass(I,/^focus(in)?$/.test(t.type))}),g.fn[v]=P._jQueryInterface,g.fn[v].Constructor=P,g.fn[v].noConflict=function(){return g.fn[v]=T,P._jQueryInterface};var L="carousel",j="bs.carousel",H="."+j,R=".data-api",x=g.fn[L],F={interval:5e3,keyboard:!0,slide:!1,pause:"hover",wrap:!0,touch:!0},U={interval:"(number|boolean)",keyboard:"boolean",slide:"(boolean|string)",pause:"(string|boolean)",wrap:"boolean",touch:"boolean"},W="next",q="prev",M="left",K="right",Q={SLIDE:"slide"+H,SLID:"slid"+H,KEYDOWN:"keydown"+H,MOUSEENTER:"mouseenter"+H,MOUSELEAVE:"mouseleave"+H,TOUCHSTART:"touchstart"+H,TOUCHMOVE:"touchmove"+H,TOUCHEND:"touchend"+H,POINTERDOWN:"pointerdown"+H,POINTERUP:"pointerup"+H,DRAG_START:"dragstart"+H,LOAD_DATA_API:"load"+H+R,CLICK_DATA_API:"click"+H+R},B="carousel",V="active",Y="slide",z="carousel-item-right",X="carousel-item-left",$="carousel-item-next",G="carousel-item-prev",J="pointer-event",Z=".active",tt=".active.carousel-item",et=".carousel-item",nt=".carousel-item img",it=".carousel-item-next, .carousel-item-prev",ot=".carousel-indicators",rt="[data-slide], [data-slide-to]",st='[data-ride="carousel"]',at={TOUCH:"touch",PEN:"pen"},lt=function(){function r(t,e){this._items=null,this._interval=null,this._activeElement=null,this._isPaused=!1,this._isSliding=!1,this.touchTimeout=null,this.touchStartX=0,this.touchDeltaX=0,this._config=this._getConfig(e),this._element=t,this._indicatorsElement=this._element.querySelector(ot),this._touchSupported="ontouchstart"in document.documentElement||0<navigator.maxTouchPoints,this._pointerEvent=Boolean(window.PointerEvent||window.MSPointerEvent),this._addEventListeners()}var t=r.prototype;return t.next=function(){this._isSliding||this._slide(W)},t.nextWhenVisible=function(){!document.hidden&&g(this._element).is(":visible")&&"hidden"!==g(this._element).css("visibility")&&this.next()},t.prev=function(){this._isSliding||this._slide(q)},t.pause=function(t){t||(this._isPaused=!0),this._element.querySelector(it)&&(_.triggerTransitionEnd(this._element),this.cycle(!0)),clearInterval(this._interval),this._interval=null},t.cycle=function(t){t||(this._isPaused=!1),this._interval&&(clearInterval(this._interval),this._interval=null),this._config.interval&&!this._isPaused&&(this._interval=setInterval((document.visibilityState?this.nextWhenVisible:this.next).bind(this),this._config.interval))},t.to=function(t){var e=this;this._activeElement=this._element.querySelector(tt);var n=this._getItemIndex(this._activeElement);if(!(t>this._items.length-1||t<0))if(this._isSliding)g(this._element).one(Q.SLID,function(){return e.to(t)});else{if(n===t)return this.pause(),void this.cycle();var i=n<t?W:q;this._slide(i,this._items[t])}},t.dispose=function(){g(this._element).off(H),g.removeData(this._element,j),this._items=null,this._config=null,this._element=null,this._interval=null,this._isPaused=null,this._isSliding=null,this._activeElement=null,this._indicatorsElement=null},t._getConfig=function(t){return t=l({},F,t),_.typeCheckConfig(L,t,U),t},t._handleSwipe=function(){var t=Math.abs(this.touchDeltaX);if(!(t<=40)){var e=t/this.touchDeltaX;0<e&&this.prev(),e<0&&this.next()}},t._addEventListeners=function(){var e=this;this._config.keyboard&&g(this._element).on(Q.KEYDOWN,function(t){return e._keydown(t)}),"hover"===this._config.pause&&g(this._element).on(Q.MOUSEENTER,function(t){return e.pause(t)}).on(Q.MOUSELEAVE,function(t){return e.cycle(t)}),this._config.touch&&this._addTouchEventListeners()},t._addTouchEventListeners=function(){var n=this;if(this._touchSupported){var e=function(t){n._pointerEvent&&at[t.originalEvent.pointerType.toUpperCase()]?n.touchStartX=t.originalEvent.clientX:n._pointerEvent||(n.touchStartX=t.originalEvent.touches[0].clientX)},i=function(t){n._pointerEvent&&at[t.originalEvent.pointerType.toUpperCase()]&&(n.touchDeltaX=t.originalEvent.clientX-n.touchStartX),n._handleSwipe(),"hover"===n._config.pause&&(n.pause(),n.touchTimeout&&clearTimeout(n.touchTimeout),n.touchTimeout=setTimeout(function(t){return n.cycle(t)},500+n._config.interval))};g(this._element.querySelectorAll(nt)).on(Q.DRAG_START,function(t){return t.preventDefault()}),this._pointerEvent?(g(this._element).on(Q.POINTERDOWN,function(t){return e(t)}),g(this._element).on(Q.POINTERUP,function(t){return i(t)}),this._element.classList.add(J)):(g(this._element).on(Q.TOUCHSTART,function(t){return e(t)}),g(this._element).on(Q.TOUCHMOVE,function(t){var e;(e=t).originalEvent.touches&&1<e.originalEvent.touches.length?n.touchDeltaX=0:n.touchDeltaX=e.originalEvent.touches[0].clientX-n.touchStartX}),g(this._element).on(Q.TOUCHEND,function(t){return i(t)}))}},t._keydown=function(t){if(!/input|textarea/i.test(t.target.tagName))switch(t.which){case 37:t.preventDefault(),this.prev();break;case 39:t.preventDefault(),this.next()}},t._getItemIndex=function(t){return this._items=t&&t.parentNode?[].slice.call(t.parentNode.querySelectorAll(et)):[],this._items.indexOf(t)},t._getItemByDirection=function(t,e){var n=t===W,i=t===q,o=this._getItemIndex(e),r=this._items.length-1;if((i&&0===o||n&&o===r)&&!this._config.wrap)return e;var s=(o+(t===q?-1:1))%this._items.length;return-1===s?this._items[this._items.length-1]:this._items[s]},t._triggerSlideEvent=function(t,e){var n=this._getItemIndex(t),i=this._getItemIndex(this._element.querySelector(tt)),o=g.Event(Q.SLIDE,{relatedTarget:t,direction:e,from:i,to:n});return g(this._element).trigger(o),o},t._setActiveIndicatorElement=function(t){if(this._indicatorsElement){var e=[].slice.call(this._indicatorsElement.querySelectorAll(Z));g(e).removeClass(V);var n=this._indicatorsElement.children[this._getItemIndex(t)];n&&g(n).addClass(V)}},t._slide=function(t,e){var n,i,o,r=this,s=this._element.querySelector(tt),a=this._getItemIndex(s),l=e||s&&this._getItemByDirection(t,s),c=this._getItemIndex(l),h=Boolean(this._interval);if(o=t===W?(n=X,i=$,M):(n=z,i=G,K),l&&g(l).hasClass(V))this._isSliding=!1;else if(!this._triggerSlideEvent(l,o).isDefaultPrevented()&&s&&l){this._isSliding=!0,h&&this.pause(),this._setActiveIndicatorElement(l);var u=g.Event(Q.SLID,{relatedTarget:l,direction:o,from:a,to:c});if(g(this._element).hasClass(Y)){g(l).addClass(i),_.reflow(l),g(s).addClass(n),g(l).addClass(n);var f=parseInt(l.getAttribute("data-interval"),10);this._config.interval=f?(this._config.defaultInterval=this._config.defaultInterval||this._config.interval,f):this._config.defaultInterval||this._config.interval;var d=_.getTransitionDurationFromElement(s);g(s).one(_.TRANSITION_END,function(){g(l).removeClass(n+" "+i).addClass(V),g(s).removeClass(V+" "+i+" "+n),r._isSliding=!1,setTimeout(function(){return g(r._element).trigger(u)},0)}).emulateTransitionEnd(d)}else g(s).removeClass(V),g(l).addClass(V),this._isSliding=!1,g(this._element).trigger(u);h&&this.cycle()}},r._jQueryInterface=function(i){return this.each(function(){var t=g(this).data(j),e=l({},F,g(this).data());"object"==typeof i&&(e=l({},e,i));var n="string"==typeof i?i:e.slide;if(t||(t=new r(this,e),g(this).data(j,t)),"number"==typeof i)t.to(i);else if("string"==typeof n){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n]()}else e.interval&&e.ride&&(t.pause(),t.cycle())})},r._dataApiClickHandler=function(t){var e=_.getSelectorFromElement(this);if(e){var n=g(e)[0];if(n&&g(n).hasClass(B)){var i=l({},g(n).data(),g(this).data()),o=this.getAttribute("data-slide-to");o&&(i.interval=!1),r._jQueryInterface.call(g(n),i),o&&g(n).data(j).to(o),t.preventDefault()}}},s(r,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return F}}]),r}();g(document).on(Q.CLICK_DATA_API,rt,lt._dataApiClickHandler),g(window).on(Q.LOAD_DATA_API,function(){for(var t=[].slice.call(document.querySelectorAll(st)),e=0,n=t.length;e<n;e++){var i=g(t[e]);lt._jQueryInterface.call(i,i.data())}}),g.fn[L]=lt._jQueryInterface,g.fn[L].Constructor=lt,g.fn[L].noConflict=function(){return g.fn[L]=x,lt._jQueryInterface};var ct="collapse",ht="bs.collapse",ut="."+ht,ft=g.fn[ct],dt={toggle:!0,parent:""},gt={toggle:"boolean",parent:"(string|element)"},_t={SHOW:"show"+ut,SHOWN:"shown"+ut,HIDE:"hide"+ut,HIDDEN:"hidden"+ut,CLICK_DATA_API:"click"+ut+".data-api"},mt="show",pt="collapse",vt="collapsing",yt="collapsed",Et="width",Ct="height",Tt=".show, .collapsing",St='[data-toggle="collapse"]',bt=function(){function a(e,t){this._isTransitioning=!1,this._element=e,this._config=this._getConfig(t),this._triggerArray=[].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#'+e.id+'"],[data-toggle="collapse"][data-target="#'+e.id+'"]'));for(var n=[].slice.call(document.querySelectorAll(St)),i=0,o=n.length;i<o;i++){var r=n[i],s=_.getSelectorFromElement(r),a=[].slice.call(document.querySelectorAll(s)).filter(function(t){return t===e});null!==s&&0<a.length&&(this._selector=s,this._triggerArray.push(r))}this._parent=this._config.parent?this._getParent():null,this._config.parent||this._addAriaAndCollapsedClass(this._element,this._triggerArray),this._config.toggle&&this.toggle()}var t=a.prototype;return t.toggle=function(){g(this._element).hasClass(mt)?this.hide():this.show()},t.show=function(){var t,e,n=this;if(!this._isTransitioning&&!g(this._element).hasClass(mt)&&(this._parent&&0===(t=[].slice.call(this._parent.querySelectorAll(Tt)).filter(function(t){return"string"==typeof n._config.parent?t.getAttribute("data-parent")===n._config.parent:t.classList.contains(pt)})).length&&(t=null),!(t&&(e=g(t).not(this._selector).data(ht))&&e._isTransitioning))){var i=g.Event(_t.SHOW);if(g(this._element).trigger(i),!i.isDefaultPrevented()){t&&(a._jQueryInterface.call(g(t).not(this._selector),"hide"),e||g(t).data(ht,null));var o=this._getDimension();g(this._element).removeClass(pt).addClass(vt),this._element.style[o]=0,this._triggerArray.length&&g(this._triggerArray).removeClass(yt).attr("aria-expanded",!0),this.setTransitioning(!0);var r="scroll"+(o[0].toUpperCase()+o.slice(1)),s=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,function(){g(n._element).removeClass(vt).addClass(pt).addClass(mt),n._element.style[o]="",n.setTransitioning(!1),g(n._element).trigger(_t.SHOWN)}).emulateTransitionEnd(s),this._element.style[o]=this._element[r]+"px"}}},t.hide=function(){var t=this;if(!this._isTransitioning&&g(this._element).hasClass(mt)){var e=g.Event(_t.HIDE);if(g(this._element).trigger(e),!e.isDefaultPrevented()){var n=this._getDimension();this._element.style[n]=this._element.getBoundingClientRect()[n]+"px",_.reflow(this._element),g(this._element).addClass(vt).removeClass(pt).removeClass(mt);var i=this._triggerArray.length;if(0<i)for(var o=0;o<i;o++){var r=this._triggerArray[o],s=_.getSelectorFromElement(r);if(null!==s)g([].slice.call(document.querySelectorAll(s))).hasClass(mt)||g(r).addClass(yt).attr("aria-expanded",!1)}this.setTransitioning(!0);this._element.style[n]="";var a=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,function(){t.setTransitioning(!1),g(t._element).removeClass(vt).addClass(pt).trigger(_t.HIDDEN)}).emulateTransitionEnd(a)}}},t.setTransitioning=function(t){this._isTransitioning=t},t.dispose=function(){g.removeData(this._element,ht),this._config=null,this._parent=null,this._element=null,this._triggerArray=null,this._isTransitioning=null},t._getConfig=function(t){return(t=l({},dt,t)).toggle=Boolean(t.toggle),_.typeCheckConfig(ct,t,gt),t},t._getDimension=function(){return g(this._element).hasClass(Et)?Et:Ct},t._getParent=function(){var t,n=this;_.isElement(this._config.parent)?(t=this._config.parent,"undefined"!=typeof this._config.parent.jquery&&(t=this._config.parent[0])):t=document.querySelector(this._config.parent);var e='[data-toggle="collapse"][data-parent="'+this._config.parent+'"]',i=[].slice.call(t.querySelectorAll(e));return g(i).each(function(t,e){n._addAriaAndCollapsedClass(a._getTargetFromElement(e),[e])}),t},t._addAriaAndCollapsedClass=function(t,e){var n=g(t).hasClass(mt);e.length&&g(e).toggleClass(yt,!n).attr("aria-expanded",n)},a._getTargetFromElement=function(t){var e=_.getSelectorFromElement(t);return e?document.querySelector(e):null},a._jQueryInterface=function(i){return this.each(function(){var t=g(this),e=t.data(ht),n=l({},dt,t.data(),"object"==typeof i&&i?i:{});if(!e&&n.toggle&&/show|hide/.test(i)&&(n.toggle=!1),e||(e=new a(this,n),t.data(ht,e)),"string"==typeof i){if("undefined"==typeof e[i])throw new TypeError('No method named "'+i+'"');e[i]()}})},s(a,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return dt}}]),a}();g(document).on(_t.CLICK_DATA_API,St,function(t){"A"===t.currentTarget.tagName&&t.preventDefault();var n=g(this),e=_.getSelectorFromElement(this),i=[].slice.call(document.querySelectorAll(e));g(i).each(function(){var t=g(this),e=t.data(ht)?"toggle":n.data();bt._jQueryInterface.call(t,e)})}),g.fn[ct]=bt._jQueryInterface,g.fn[ct].Constructor=bt,g.fn[ct].noConflict=function(){return g.fn[ct]=ft,bt._jQueryInterface};var It="dropdown",Dt="bs.dropdown",wt="."+Dt,At=".data-api",Nt=g.fn[It],Ot=new RegExp("38|40|27"),kt={HIDE:"hide"+wt,HIDDEN:"hidden"+wt,SHOW:"show"+wt,SHOWN:"shown"+wt,CLICK:"click"+wt,CLICK_DATA_API:"click"+wt+At,KEYDOWN_DATA_API:"keydown"+wt+At,KEYUP_DATA_API:"keyup"+wt+At},Pt="disabled",Lt="show",jt="dropup",Ht="dropright",Rt="dropleft",xt="dropdown-menu-right",Ft="position-static",Ut='[data-toggle="dropdown"]',Wt=".dropdown form",qt=".dropdown-menu",Mt=".navbar-nav",Kt=".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",Qt="top-start",Bt="top-end",Vt="bottom-start",Yt="bottom-end",zt="right-start",Xt="left-start",$t={offset:0,flip:!0,boundary:"scrollParent",reference:"toggle",display:"dynamic"},Gt={offset:"(number|string|function)",flip:"boolean",boundary:"(string|element)",reference:"(string|element)",display:"string"},Jt=function(){function c(t,e){this._element=t,this._popper=null,this._config=this._getConfig(e),this._menu=this._getMenuElement(),this._inNavbar=this._detectNavbar(),this._addEventListeners()}var t=c.prototype;return t.toggle=function(){if(!this._element.disabled&&!g(this._element).hasClass(Pt)){var t=c._getParentFromElement(this._element),e=g(this._menu).hasClass(Lt);if(c._clearMenus(),!e){var n={relatedTarget:this._element},i=g.Event(kt.SHOW,n);if(g(t).trigger(i),!i.isDefaultPrevented()){if(!this._inNavbar){if("undefined"==typeof u)throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");var o=this._element;"parent"===this._config.reference?o=t:_.isElement(this._config.reference)&&(o=this._config.reference,"undefined"!=typeof this._config.reference.jquery&&(o=this._config.reference[0])),"scrollParent"!==this._config.boundary&&g(t).addClass(Ft),this._popper=new u(o,this._menu,this._getPopperConfig())}"ontouchstart"in document.documentElement&&0===g(t).closest(Mt).length&&g(document.body).children().on("mouseover",null,g.noop),this._element.focus(),this._element.setAttribute("aria-expanded",!0),g(this._menu).toggleClass(Lt),g(t).toggleClass(Lt).trigger(g.Event(kt.SHOWN,n))}}}},t.show=function(){if(!(this._element.disabled||g(this._element).hasClass(Pt)||g(this._menu).hasClass(Lt))){var t={relatedTarget:this._element},e=g.Event(kt.SHOW,t),n=c._getParentFromElement(this._element);g(n).trigger(e),e.isDefaultPrevented()||(g(this._menu).toggleClass(Lt),g(n).toggleClass(Lt).trigger(g.Event(kt.SHOWN,t)))}},t.hide=function(){if(!this._element.disabled&&!g(this._element).hasClass(Pt)&&g(this._menu).hasClass(Lt)){var t={relatedTarget:this._element},e=g.Event(kt.HIDE,t),n=c._getParentFromElement(this._element);g(n).trigger(e),e.isDefaultPrevented()||(g(this._menu).toggleClass(Lt),g(n).toggleClass(Lt).trigger(g.Event(kt.HIDDEN,t)))}},t.dispose=function(){g.removeData(this._element,Dt),g(this._element).off(wt),this._element=null,(this._menu=null)!==this._popper&&(this._popper.destroy(),this._popper=null)},t.update=function(){this._inNavbar=this._detectNavbar(),null!==this._popper&&this._popper.scheduleUpdate()},t._addEventListeners=function(){var e=this;g(this._element).on(kt.CLICK,function(t){t.preventDefault(),t.stopPropagation(),e.toggle()})},t._getConfig=function(t){return t=l({},this.constructor.Default,g(this._element).data(),t),_.typeCheckConfig(It,t,this.constructor.DefaultType),t},t._getMenuElement=function(){if(!this._menu){var t=c._getParentFromElement(this._element);t&&(this._menu=t.querySelector(qt))}return this._menu},t._getPlacement=function(){var t=g(this._element.parentNode),e=Vt;return t.hasClass(jt)?(e=Qt,g(this._menu).hasClass(xt)&&(e=Bt)):t.hasClass(Ht)?e=zt:t.hasClass(Rt)?e=Xt:g(this._menu).hasClass(xt)&&(e=Yt),e},t._detectNavbar=function(){return 0<g(this._element).closest(".navbar").length},t._getOffset=function(){var e=this,t={};return"function"==typeof this._config.offset?t.fn=function(t){return t.offsets=l({},t.offsets,e._config.offset(t.offsets,e._element)||{}),t}:t.offset=this._config.offset,t},t._getPopperConfig=function(){var t={placement:this._getPlacement(),modifiers:{offset:this._getOffset(),flip:{enabled:this._config.flip},preventOverflow:{boundariesElement:this._config.boundary}}};return"static"===this._config.display&&(t.modifiers.applyStyle={enabled:!1}),t},c._jQueryInterface=function(e){return this.each(function(){var t=g(this).data(Dt);if(t||(t=new c(this,"object"==typeof e?e:null),g(this).data(Dt,t)),"string"==typeof e){if("undefined"==typeof t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},c._clearMenus=function(t){if(!t||3!==t.which&&("keyup"!==t.type||9===t.which))for(var e=[].slice.call(document.querySelectorAll(Ut)),n=0,i=e.length;n<i;n++){var o=c._getParentFromElement(e[n]),r=g(e[n]).data(Dt),s={relatedTarget:e[n]};if(t&&"click"===t.type&&(s.clickEvent=t),r){var a=r._menu;if(g(o).hasClass(Lt)&&!(t&&("click"===t.type&&/input|textarea/i.test(t.target.tagName)||"keyup"===t.type&&9===t.which)&&g.contains(o,t.target))){var l=g.Event(kt.HIDE,s);g(o).trigger(l),l.isDefaultPrevented()||("ontouchstart"in document.documentElement&&g(document.body).children().off("mouseover",null,g.noop),e[n].setAttribute("aria-expanded","false"),g(a).removeClass(Lt),g(o).removeClass(Lt).trigger(g.Event(kt.HIDDEN,s)))}}}},c._getParentFromElement=function(t){var e,n=_.getSelectorFromElement(t);return n&&(e=document.querySelector(n)),e||t.parentNode},c._dataApiKeydownHandler=function(t){if((/input|textarea/i.test(t.target.tagName)?!(32===t.which||27!==t.which&&(40!==t.which&&38!==t.which||g(t.target).closest(qt).length)):Ot.test(t.which))&&(t.preventDefault(),t.stopPropagation(),!this.disabled&&!g(this).hasClass(Pt))){var e=c._getParentFromElement(this),n=g(e).hasClass(Lt);if(n&&(!n||27!==t.which&&32!==t.which)){var i=[].slice.call(e.querySelectorAll(Kt));if(0!==i.length){var o=i.indexOf(t.target);38===t.which&&0<o&&o--,40===t.which&&o<i.length-1&&o++,o<0&&(o=0),i[o].focus()}}else{if(27===t.which){var r=e.querySelector(Ut);g(r).trigger("focus")}g(this).trigger("click")}}},s(c,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return $t}},{key:"DefaultType",get:function(){return Gt}}]),c}();g(document).on(kt.KEYDOWN_DATA_API,Ut,Jt._dataApiKeydownHandler).on(kt.KEYDOWN_DATA_API,qt,Jt._dataApiKeydownHandler).on(kt.CLICK_DATA_API+" "+kt.KEYUP_DATA_API,Jt._clearMenus).on(kt.CLICK_DATA_API,Ut,function(t){t.preventDefault(),t.stopPropagation(),Jt._jQueryInterface.call(g(this),"toggle")}).on(kt.CLICK_DATA_API,Wt,function(t){t.stopPropagation()}),g.fn[It]=Jt._jQueryInterface,g.fn[It].Constructor=Jt,g.fn[It].noConflict=function(){return g.fn[It]=Nt,Jt._jQueryInterface};var Zt="modal",te="bs.modal",ee="."+te,ne=g.fn[Zt],ie={backdrop:!0,keyboard:!0,focus:!0,show:!0},oe={backdrop:"(boolean|string)",keyboard:"boolean",focus:"boolean",show:"boolean"},re={HIDE:"hide"+ee,HIDDEN:"hidden"+ee,SHOW:"show"+ee,SHOWN:"shown"+ee,FOCUSIN:"focusin"+ee,RESIZE:"resize"+ee,CLICK_DISMISS:"click.dismiss"+ee,KEYDOWN_DISMISS:"keydown.dismiss"+ee,MOUSEUP_DISMISS:"mouseup.dismiss"+ee,MOUSEDOWN_DISMISS:"mousedown.dismiss"+ee,CLICK_DATA_API:"click"+ee+".data-api"},se="modal-dialog-scrollable",ae="modal-scrollbar-measure",le="modal-backdrop",ce="modal-open",he="fade",ue="show",fe=".modal-dialog",de=".modal-body",ge='[data-toggle="modal"]',_e='[data-dismiss="modal"]',me=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",pe=".sticky-top",ve=function(){function o(t,e){this._config=this._getConfig(e),this._element=t,this._dialog=t.querySelector(fe),this._backdrop=null,this._isShown=!1,this._isBodyOverflowing=!1,this._ignoreBackdropClick=!1,this._isTransitioning=!1,this._scrollbarWidth=0}var t=o.prototype;return t.toggle=function(t){return this._isShown?this.hide():this.show(t)},t.show=function(t){var e=this;if(!this._isShown&&!this._isTransitioning){g(this._element).hasClass(he)&&(this._isTransitioning=!0);var n=g.Event(re.SHOW,{relatedTarget:t});g(this._element).trigger(n),this._isShown||n.isDefaultPrevented()||(this._isShown=!0,this._checkScrollbar(),this._setScrollbar(),this._adjustDialog(),this._setEscapeEvent(),this._setResizeEvent(),g(this._element).on(re.CLICK_DISMISS,_e,function(t){return e.hide(t)}),g(this._dialog).on(re.MOUSEDOWN_DISMISS,function(){g(e._element).one(re.MOUSEUP_DISMISS,function(t){g(t.target).is(e._element)&&(e._ignoreBackdropClick=!0)})}),this._showBackdrop(function(){return e._showElement(t)}))}},t.hide=function(t){var e=this;if(t&&t.preventDefault(),this._isShown&&!this._isTransitioning){var n=g.Event(re.HIDE);if(g(this._element).trigger(n),this._isShown&&!n.isDefaultPrevented()){this._isShown=!1;var i=g(this._element).hasClass(he);if(i&&(this._isTransitioning=!0),this._setEscapeEvent(),this._setResizeEvent(),g(document).off(re.FOCUSIN),g(this._element).removeClass(ue),g(this._element).off(re.CLICK_DISMISS),g(this._dialog).off(re.MOUSEDOWN_DISMISS),i){var o=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,function(t){return e._hideModal(t)}).emulateTransitionEnd(o)}else this._hideModal()}}},t.dispose=function(){[window,this._element,this._dialog].forEach(function(t){return g(t).off(ee)}),g(document).off(re.FOCUSIN),g.removeData(this._element,te),this._config=null,this._element=null,this._dialog=null,this._backdrop=null,this._isShown=null,this._isBodyOverflowing=null,this._ignoreBackdropClick=null,this._isTransitioning=null,this._scrollbarWidth=null},t.handleUpdate=function(){this._adjustDialog()},t._getConfig=function(t){return t=l({},ie,t),_.typeCheckConfig(Zt,t,oe),t},t._showElement=function(t){var e=this,n=g(this._element).hasClass(he);this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE||document.body.appendChild(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),g(this._dialog).hasClass(se)?this._dialog.querySelector(de).scrollTop=0:this._element.scrollTop=0,n&&_.reflow(this._element),g(this._element).addClass(ue),this._config.focus&&this._enforceFocus();var i=g.Event(re.SHOWN,{relatedTarget:t}),o=function(){e._config.focus&&e._element.focus(),e._isTransitioning=!1,g(e._element).trigger(i)};if(n){var r=_.getTransitionDurationFromElement(this._dialog);g(this._dialog).one(_.TRANSITION_END,o).emulateTransitionEnd(r)}else o()},t._enforceFocus=function(){var e=this;g(document).off(re.FOCUSIN).on(re.FOCUSIN,function(t){document!==t.target&&e._element!==t.target&&0===g(e._element).has(t.target).length&&e._element.focus()})},t._setEscapeEvent=function(){var e=this;this._isShown&&this._config.keyboard?g(this._element).on(re.KEYDOWN_DISMISS,function(t){27===t.which&&(t.preventDefault(),e.hide())}):this._isShown||g(this._element).off(re.KEYDOWN_DISMISS)},t._setResizeEvent=function(){var e=this;this._isShown?g(window).on(re.RESIZE,function(t){return e.handleUpdate(t)}):g(window).off(re.RESIZE)},t._hideModal=function(){var t=this;this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._isTransitioning=!1,this._showBackdrop(function(){g(document.body).removeClass(ce),t._resetAdjustments(),t._resetScrollbar(),g(t._element).trigger(re.HIDDEN)})},t._removeBackdrop=function(){this._backdrop&&(g(this._backdrop).remove(),this._backdrop=null)},t._showBackdrop=function(t){var e=this,n=g(this._element).hasClass(he)?he:"";if(this._isShown&&this._config.backdrop){if(this._backdrop=document.createElement("div"),this._backdrop.className=le,n&&this._backdrop.classList.add(n),g(this._backdrop).appendTo(document.body),g(this._element).on(re.CLICK_DISMISS,function(t){e._ignoreBackdropClick?e._ignoreBackdropClick=!1:t.target===t.currentTarget&&("static"===e._config.backdrop?e._element.focus():e.hide())}),n&&_.reflow(this._backdrop),g(this._backdrop).addClass(ue),!t)return;if(!n)return void t();var i=_.getTransitionDurationFromElement(this._backdrop);g(this._backdrop).one(_.TRANSITION_END,t).emulateTransitionEnd(i)}else if(!this._isShown&&this._backdrop){g(this._backdrop).removeClass(ue);var o=function(){e._removeBackdrop(),t&&t()};if(g(this._element).hasClass(he)){var r=_.getTransitionDurationFromElement(this._backdrop);g(this._backdrop).one(_.TRANSITION_END,o).emulateTransitionEnd(r)}else o()}else t&&t()},t._adjustDialog=function(){var t=this._element.scrollHeight>document.documentElement.clientHeight;!this._isBodyOverflowing&&t&&(this._element.style.paddingLeft=this._scrollbarWidth+"px"),this._isBodyOverflowing&&!t&&(this._element.style.paddingRight=this._scrollbarWidth+"px")},t._resetAdjustments=function(){this._element.style.paddingLeft="",this._element.style.paddingRight=""},t._checkScrollbar=function(){var t=document.body.getBoundingClientRect();this._isBodyOverflowing=t.left+t.right<window.innerWidth,this._scrollbarWidth=this._getScrollbarWidth()},t._setScrollbar=function(){var o=this;if(this._isBodyOverflowing){var t=[].slice.call(document.querySelectorAll(me)),e=[].slice.call(document.querySelectorAll(pe));g(t).each(function(t,e){var n=e.style.paddingRight,i=g(e).css("padding-right");g(e).data("padding-right",n).css("padding-right",parseFloat(i)+o._scrollbarWidth+"px")}),g(e).each(function(t,e){var n=e.style.marginRight,i=g(e).css("margin-right");g(e).data("margin-right",n).css("margin-right",parseFloat(i)-o._scrollbarWidth+"px")});var n=document.body.style.paddingRight,i=g(document.body).css("padding-right");g(document.body).data("padding-right",n).css("padding-right",parseFloat(i)+this._scrollbarWidth+"px")}g(document.body).addClass(ce)},t._resetScrollbar=function(){var t=[].slice.call(document.querySelectorAll(me));g(t).each(function(t,e){var n=g(e).data("padding-right");g(e).removeData("padding-right"),e.style.paddingRight=n||""});var e=[].slice.call(document.querySelectorAll(""+pe));g(e).each(function(t,e){var n=g(e).data("margin-right");"undefined"!=typeof n&&g(e).css("margin-right",n).removeData("margin-right")});var n=g(document.body).data("padding-right");g(document.body).removeData("padding-right"),document.body.style.paddingRight=n||""},t._getScrollbarWidth=function(){var t=document.createElement("div");t.className=ae,document.body.appendChild(t);var e=t.getBoundingClientRect().width-t.clientWidth;return document.body.removeChild(t),e},o._jQueryInterface=function(n,i){return this.each(function(){var t=g(this).data(te),e=l({},ie,g(this).data(),"object"==typeof n&&n?n:{});if(t||(t=new o(this,e),g(this).data(te,t)),"string"==typeof n){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n](i)}else e.show&&t.show(i)})},s(o,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return ie}}]),o}();g(document).on(re.CLICK_DATA_API,ge,function(t){var e,n=this,i=_.getSelectorFromElement(this);i&&(e=document.querySelector(i));var o=g(e).data(te)?"toggle":l({},g(e).data(),g(this).data());"A"!==this.tagName&&"AREA"!==this.tagName||t.preventDefault();var r=g(e).one(re.SHOW,function(t){t.isDefaultPrevented()||r.one(re.HIDDEN,function(){g(n).is(":visible")&&n.focus()})});ve._jQueryInterface.call(g(e),o,this)}),g.fn[Zt]=ve._jQueryInterface,g.fn[Zt].Constructor=ve,g.fn[Zt].noConflict=function(){return g.fn[Zt]=ne,ve._jQueryInterface};var ye=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],Ee={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},Ce=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,Te=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;function Se(t,s,e){if(0===t.length)return t;if(e&&"function"==typeof e)return e(t);for(var n=(new window.DOMParser).parseFromString(t,"text/html"),a=Object.keys(s),l=[].slice.call(n.body.querySelectorAll("*")),i=function(t,e){var n=l[t],i=n.nodeName.toLowerCase();if(-1===a.indexOf(n.nodeName.toLowerCase()))return n.parentNode.removeChild(n),"continue";var o=[].slice.call(n.attributes),r=[].concat(s["*"]||[],s[i]||[]);o.forEach(function(t){(function(t,e){var n=t.nodeName.toLowerCase();if(-1!==e.indexOf(n))return-1===ye.indexOf(n)||Boolean(t.nodeValue.match(Ce)||t.nodeValue.match(Te));for(var i=e.filter(function(t){return t instanceof RegExp}),o=0,r=i.length;o<r;o++)if(n.match(i[o]))return!0;return!1})(t,r)||n.removeAttribute(t.nodeName)})},o=0,r=l.length;o<r;o++)i(o);return n.body.innerHTML}var be="tooltip",Ie="bs.tooltip",De="."+Ie,we=g.fn[be],Ae="bs-tooltip",Ne=new RegExp("(^|\\s)"+Ae+"\\S+","g"),Oe=["sanitize","whiteList","sanitizeFn"],ke={animation:"boolean",template:"string",title:"(string|element|function)",trigger:"string",delay:"(number|object)",html:"boolean",selector:"(string|boolean)",placement:"(string|function)",offset:"(number|string|function)",container:"(string|element|boolean)",fallbackPlacement:"(string|array)",boundary:"(string|element)",sanitize:"boolean",sanitizeFn:"(null|function)",whiteList:"object"},Pe={AUTO:"auto",TOP:"top",RIGHT:"right",BOTTOM:"bottom",LEFT:"left"},Le={animation:!0,template:'<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,selector:!1,placement:"top",offset:0,container:!1,fallbackPlacement:"flip",boundary:"scrollParent",sanitize:!0,sanitizeFn:null,whiteList:Ee},je="show",He="out",Re={HIDE:"hide"+De,HIDDEN:"hidden"+De,SHOW:"show"+De,SHOWN:"shown"+De,INSERTED:"inserted"+De,CLICK:"click"+De,FOCUSIN:"focusin"+De,FOCUSOUT:"focusout"+De,MOUSEENTER:"mouseenter"+De,MOUSELEAVE:"mouseleave"+De},xe="fade",Fe="show",Ue=".tooltip-inner",We=".arrow",qe="hover",Me="focus",Ke="click",Qe="manual",Be=function(){function i(t,e){if("undefined"==typeof u)throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");this._isEnabled=!0,this._timeout=0,this._hoverState="",this._activeTrigger={},this._popper=null,this.element=t,this.config=this._getConfig(e),this.tip=null,this._setListeners()}var t=i.prototype;return t.enable=function(){this._isEnabled=!0},t.disable=function(){this._isEnabled=!1},t.toggleEnabled=function(){this._isEnabled=!this._isEnabled},t.toggle=function(t){if(this._isEnabled)if(t){var e=this.constructor.DATA_KEY,n=g(t.currentTarget).data(e);n||(n=new this.constructor(t.currentTarget,this._getDelegateConfig()),g(t.currentTarget).data(e,n)),n._activeTrigger.click=!n._activeTrigger.click,n._isWithActiveTrigger()?n._enter(null,n):n._leave(null,n)}else{if(g(this.getTipElement()).hasClass(Fe))return void this._leave(null,this);this._enter(null,this)}},t.dispose=function(){clearTimeout(this._timeout),g.removeData(this.element,this.constructor.DATA_KEY),g(this.element).off(this.constructor.EVENT_KEY),g(this.element).closest(".modal").off("hide.bs.modal"),this.tip&&g(this.tip).remove(),this._isEnabled=null,this._timeout=null,this._hoverState=null,(this._activeTrigger=null)!==this._popper&&this._popper.destroy(),this._popper=null,this.element=null,this.config=null,this.tip=null},t.show=function(){var e=this;if("none"===g(this.element).css("display"))throw new Error("Please use show on visible elements");var t=g.Event(this.constructor.Event.SHOW);if(this.isWithContent()&&this._isEnabled){g(this.element).trigger(t);var n=_.findShadowRoot(this.element),i=g.contains(null!==n?n:this.element.ownerDocument.documentElement,this.element);if(t.isDefaultPrevented()||!i)return;var o=this.getTipElement(),r=_.getUID(this.constructor.NAME);o.setAttribute("id",r),this.element.setAttribute("aria-describedby",r),this.setContent(),this.config.animation&&g(o).addClass(xe);var s="function"==typeof this.config.placement?this.config.placement.call(this,o,this.element):this.config.placement,a=this._getAttachment(s);this.addAttachmentClass(a);var l=this._getContainer();g(o).data(this.constructor.DATA_KEY,this),g.contains(this.element.ownerDocument.documentElement,this.tip)||g(o).appendTo(l),g(this.element).trigger(this.constructor.Event.INSERTED),this._popper=new u(this.element,o,{placement:a,modifiers:{offset:this._getOffset(),flip:{behavior:this.config.fallbackPlacement},arrow:{element:We},preventOverflow:{boundariesElement:this.config.boundary}},onCreate:function(t){t.originalPlacement!==t.placement&&e._handlePopperPlacementChange(t)},onUpdate:function(t){return e._handlePopperPlacementChange(t)}}),g(o).addClass(Fe),"ontouchstart"in document.documentElement&&g(document.body).children().on("mouseover",null,g.noop);var c=function(){e.config.animation&&e._fixTransition();var t=e._hoverState;e._hoverState=null,g(e.element).trigger(e.constructor.Event.SHOWN),t===He&&e._leave(null,e)};if(g(this.tip).hasClass(xe)){var h=_.getTransitionDurationFromElement(this.tip);g(this.tip).one(_.TRANSITION_END,c).emulateTransitionEnd(h)}else c()}},t.hide=function(t){var e=this,n=this.getTipElement(),i=g.Event(this.constructor.Event.HIDE),o=function(){e._hoverState!==je&&n.parentNode&&n.parentNode.removeChild(n),e._cleanTipClass(),e.element.removeAttribute("aria-describedby"),g(e.element).trigger(e.constructor.Event.HIDDEN),null!==e._popper&&e._popper.destroy(),t&&t()};if(g(this.element).trigger(i),!i.isDefaultPrevented()){if(g(n).removeClass(Fe),"ontouchstart"in document.documentElement&&g(document.body).children().off("mouseover",null,g.noop),this._activeTrigger[Ke]=!1,this._activeTrigger[Me]=!1,this._activeTrigger[qe]=!1,g(this.tip).hasClass(xe)){var r=_.getTransitionDurationFromElement(n);g(n).one(_.TRANSITION_END,o).emulateTransitionEnd(r)}else o();this._hoverState=""}},t.update=function(){null!==this._popper&&this._popper.scheduleUpdate()},t.isWithContent=function(){return Boolean(this.getTitle())},t.addAttachmentClass=function(t){g(this.getTipElement()).addClass(Ae+"-"+t)},t.getTipElement=function(){return this.tip=this.tip||g(this.config.template)[0],this.tip},t.setContent=function(){var t=this.getTipElement();this.setElementContent(g(t.querySelectorAll(Ue)),this.getTitle()),g(t).removeClass(xe+" "+Fe)},t.setElementContent=function(t,e){"object"!=typeof e||!e.nodeType&&!e.jquery?this.config.html?(this.config.sanitize&&(e=Se(e,this.config.whiteList,this.config.sanitizeFn)),t.html(e)):t.text(e):this.config.html?g(e).parent().is(t)||t.empty().append(e):t.text(g(e).text())},t.getTitle=function(){var t=this.element.getAttribute("data-original-title");return t||(t="function"==typeof this.config.title?this.config.title.call(this.element):this.config.title),t},t._getOffset=function(){var e=this,t={};return"function"==typeof this.config.offset?t.fn=function(t){return t.offsets=l({},t.offsets,e.config.offset(t.offsets,e.element)||{}),t}:t.offset=this.config.offset,t},t._getContainer=function(){return!1===this.config.container?document.body:_.isElement(this.config.container)?g(this.config.container):g(document).find(this.config.container)},t._getAttachment=function(t){return Pe[t.toUpperCase()]},t._setListeners=function(){var i=this;this.config.trigger.split(" ").forEach(function(t){if("click"===t)g(i.element).on(i.constructor.Event.CLICK,i.config.selector,function(t){return i.toggle(t)});else if(t!==Qe){var e=t===qe?i.constructor.Event.MOUSEENTER:i.constructor.Event.FOCUSIN,n=t===qe?i.constructor.Event.MOUSELEAVE:i.constructor.Event.FOCUSOUT;g(i.element).on(e,i.config.selector,function(t){return i._enter(t)}).on(n,i.config.selector,function(t){return i._leave(t)})}}),g(this.element).closest(".modal").on("hide.bs.modal",function(){i.element&&i.hide()}),this.config.selector?this.config=l({},this.config,{trigger:"manual",selector:""}):this._fixTitle()},t._fixTitle=function(){var t=typeof this.element.getAttribute("data-original-title");(this.element.getAttribute("title")||"string"!==t)&&(this.element.setAttribute("data-original-title",this.element.getAttribute("title")||""),this.element.setAttribute("title",""))},t._enter=function(t,e){var n=this.constructor.DATA_KEY;(e=e||g(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),g(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusin"===t.type?Me:qe]=!0),g(e.getTipElement()).hasClass(Fe)||e._hoverState===je?e._hoverState=je:(clearTimeout(e._timeout),e._hoverState=je,e.config.delay&&e.config.delay.show?e._timeout=setTimeout(function(){e._hoverState===je&&e.show()},e.config.delay.show):e.show())},t._leave=function(t,e){var n=this.constructor.DATA_KEY;(e=e||g(t.currentTarget).data(n))||(e=new this.constructor(t.currentTarget,this._getDelegateConfig()),g(t.currentTarget).data(n,e)),t&&(e._activeTrigger["focusout"===t.type?Me:qe]=!1),e._isWithActiveTrigger()||(clearTimeout(e._timeout),e._hoverState=He,e.config.delay&&e.config.delay.hide?e._timeout=setTimeout(function(){e._hoverState===He&&e.hide()},e.config.delay.hide):e.hide())},t._isWithActiveTrigger=function(){for(var t in this._activeTrigger)if(this._activeTrigger[t])return!0;return!1},t._getConfig=function(t){var e=g(this.element).data();return Object.keys(e).forEach(function(t){-1!==Oe.indexOf(t)&&delete e[t]}),"number"==typeof(t=l({},this.constructor.Default,e,"object"==typeof t&&t?t:{})).delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),_.typeCheckConfig(be,t,this.constructor.DefaultType),t.sanitize&&(t.template=Se(t.template,t.whiteList,t.sanitizeFn)),t},t._getDelegateConfig=function(){var t={};if(this.config)for(var e in this.config)this.constructor.Default[e]!==this.config[e]&&(t[e]=this.config[e]);return t},t._cleanTipClass=function(){var t=g(this.getTipElement()),e=t.attr("class").match(Ne);null!==e&&e.length&&t.removeClass(e.join(""))},t._handlePopperPlacementChange=function(t){var e=t.instance;this.tip=e.popper,this._cleanTipClass(),this.addAttachmentClass(this._getAttachment(t.placement))},t._fixTransition=function(){var t=this.getTipElement(),e=this.config.animation;null===t.getAttribute("x-placement")&&(g(t).removeClass(xe),this.config.animation=!1,this.hide(),this.show(),this.config.animation=e)},i._jQueryInterface=function(n){return this.each(function(){var t=g(this).data(Ie),e="object"==typeof n&&n;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),g(this).data(Ie,t)),"string"==typeof n)){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return Le}},{key:"NAME",get:function(){return be}},{key:"DATA_KEY",get:function(){return Ie}},{key:"Event",get:function(){return Re}},{key:"EVENT_KEY",get:function(){return De}},{key:"DefaultType",get:function(){return ke}}]),i}();g.fn[be]=Be._jQueryInterface,g.fn[be].Constructor=Be,g.fn[be].noConflict=function(){return g.fn[be]=we,Be._jQueryInterface};var Ve="popover",Ye="bs.popover",ze="."+Ye,Xe=g.fn[Ve],$e="bs-popover",Ge=new RegExp("(^|\\s)"+$e+"\\S+","g"),Je=l({},Be.Default,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>'}),Ze=l({},Be.DefaultType,{content:"(string|element|function)"}),tn="fade",en="show",nn=".popover-header",on=".popover-body",rn={HIDE:"hide"+ze,HIDDEN:"hidden"+ze,SHOW:"show"+ze,SHOWN:"shown"+ze,INSERTED:"inserted"+ze,CLICK:"click"+ze,FOCUSIN:"focusin"+ze,FOCUSOUT:"focusout"+ze,MOUSEENTER:"mouseenter"+ze,MOUSELEAVE:"mouseleave"+ze},sn=function(t){var e,n;function i(){return t.apply(this,arguments)||this}n=t,(e=i).prototype=Object.create(n.prototype),(e.prototype.constructor=e).__proto__=n;var o=i.prototype;return o.isWithContent=function(){return this.getTitle()||this._getContent()},o.addAttachmentClass=function(t){g(this.getTipElement()).addClass($e+"-"+t)},o.getTipElement=function(){return this.tip=this.tip||g(this.config.template)[0],this.tip},o.setContent=function(){var t=g(this.getTipElement());this.setElementContent(t.find(nn),this.getTitle());var e=this._getContent();"function"==typeof e&&(e=e.call(this.element)),this.setElementContent(t.find(on),e),t.removeClass(tn+" "+en)},o._getContent=function(){return this.element.getAttribute("data-content")||this.config.content},o._cleanTipClass=function(){var t=g(this.getTipElement()),e=t.attr("class").match(Ge);null!==e&&0<e.length&&t.removeClass(e.join(""))},i._jQueryInterface=function(n){return this.each(function(){var t=g(this).data(Ye),e="object"==typeof n?n:null;if((t||!/dispose|hide/.test(n))&&(t||(t=new i(this,e),g(this).data(Ye,t)),"string"==typeof n)){if("undefined"==typeof t[n])throw new TypeError('No method named "'+n+'"');t[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return Je}},{key:"NAME",get:function(){return Ve}},{key:"DATA_KEY",get:function(){return Ye}},{key:"Event",get:function(){return rn}},{key:"EVENT_KEY",get:function(){return ze}},{key:"DefaultType",get:function(){return Ze}}]),i}(Be);g.fn[Ve]=sn._jQueryInterface,g.fn[Ve].Constructor=sn,g.fn[Ve].noConflict=function(){return g.fn[Ve]=Xe,sn._jQueryInterface};var an="scrollspy",ln="bs.scrollspy",cn="."+ln,hn=g.fn[an],un={offset:10,method:"auto",target:""},fn={offset:"number",method:"string",target:"(string|element)"},dn={ACTIVATE:"activate"+cn,SCROLL:"scroll"+cn,LOAD_DATA_API:"load"+cn+".data-api"},gn="dropdown-item",_n="active",mn='[data-spy="scroll"]',pn=".nav, .list-group",vn=".nav-link",yn=".nav-item",En=".list-group-item",Cn=".dropdown",Tn=".dropdown-item",Sn=".dropdown-toggle",bn="offset",In="position",Dn=function(){function n(t,e){var n=this;this._element=t,this._scrollElement="BODY"===t.tagName?window:t,this._config=this._getConfig(e),this._selector=this._config.target+" "+vn+","+this._config.target+" "+En+","+this._config.target+" "+Tn,this._offsets=[],this._targets=[],this._activeTarget=null,this._scrollHeight=0,g(this._scrollElement).on(dn.SCROLL,function(t){return n._process(t)}),this.refresh(),this._process()}var t=n.prototype;return t.refresh=function(){var e=this,t=this._scrollElement===this._scrollElement.window?bn:In,o="auto"===this._config.method?t:this._config.method,r=o===In?this._getScrollTop():0;this._offsets=[],this._targets=[],this._scrollHeight=this._getScrollHeight(),[].slice.call(document.querySelectorAll(this._selector)).map(function(t){var e,n=_.getSelectorFromElement(t);if(n&&(e=document.querySelector(n)),e){var i=e.getBoundingClientRect();if(i.width||i.height)return[g(e)[o]().top+r,n]}return null}).filter(function(t){return t}).sort(function(t,e){return t[0]-e[0]}).forEach(function(t){e._offsets.push(t[0]),e._targets.push(t[1])})},t.dispose=function(){g.removeData(this._element,ln),g(this._scrollElement).off(cn),this._element=null,this._scrollElement=null,this._config=null,this._selector=null,this._offsets=null,this._targets=null,this._activeTarget=null,this._scrollHeight=null},t._getConfig=function(t){if("string"!=typeof(t=l({},un,"object"==typeof t&&t?t:{})).target){var e=g(t.target).attr("id");e||(e=_.getUID(an),g(t.target).attr("id",e)),t.target="#"+e}return _.typeCheckConfig(an,t,fn),t},t._getScrollTop=function(){return this._scrollElement===window?this._scrollElement.pageYOffset:this._scrollElement.scrollTop},t._getScrollHeight=function(){return this._scrollElement.scrollHeight||Math.max(document.body.scrollHeight,document.documentElement.scrollHeight)},t._getOffsetHeight=function(){return this._scrollElement===window?window.innerHeight:this._scrollElement.getBoundingClientRect().height},t._process=function(){var t=this._getScrollTop()+this._config.offset,e=this._getScrollHeight(),n=this._config.offset+e-this._getOffsetHeight();if(this._scrollHeight!==e&&this.refresh(),n<=t){var i=this._targets[this._targets.length-1];this._activeTarget!==i&&this._activate(i)}else{if(this._activeTarget&&t<this._offsets[0]&&0<this._offsets[0])return this._activeTarget=null,void this._clear();for(var o=this._offsets.length;o--;){this._activeTarget!==this._targets[o]&&t>=this._offsets[o]&&("undefined"==typeof this._offsets[o+1]||t<this._offsets[o+1])&&this._activate(this._targets[o])}}},t._activate=function(e){this._activeTarget=e,this._clear();var t=this._selector.split(",").map(function(t){return t+'[data-target="'+e+'"],'+t+'[href="'+e+'"]'}),n=g([].slice.call(document.querySelectorAll(t.join(","))));n.hasClass(gn)?(n.closest(Cn).find(Sn).addClass(_n),n.addClass(_n)):(n.addClass(_n),n.parents(pn).prev(vn+", "+En).addClass(_n),n.parents(pn).prev(yn).children(vn).addClass(_n)),g(this._scrollElement).trigger(dn.ACTIVATE,{relatedTarget:e})},t._clear=function(){[].slice.call(document.querySelectorAll(this._selector)).filter(function(t){return t.classList.contains(_n)}).forEach(function(t){return t.classList.remove(_n)})},n._jQueryInterface=function(e){return this.each(function(){var t=g(this).data(ln);if(t||(t=new n(this,"object"==typeof e&&e),g(this).data(ln,t)),"string"==typeof e){if("undefined"==typeof t[e])throw new TypeError('No method named "'+e+'"');t[e]()}})},s(n,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"Default",get:function(){return un}}]),n}();g(window).on(dn.LOAD_DATA_API,function(){for(var t=[].slice.call(document.querySelectorAll(mn)),e=t.length;e--;){var n=g(t[e]);Dn._jQueryInterface.call(n,n.data())}}),g.fn[an]=Dn._jQueryInterface,g.fn[an].Constructor=Dn,g.fn[an].noConflict=function(){return g.fn[an]=hn,Dn._jQueryInterface};var wn="bs.tab",An="."+wn,Nn=g.fn.tab,On={HIDE:"hide"+An,HIDDEN:"hidden"+An,SHOW:"show"+An,SHOWN:"shown"+An,CLICK_DATA_API:"click"+An+".data-api"},kn="dropdown-menu",Pn="active",Ln="disabled",jn="fade",Hn="show",Rn=".dropdown",xn=".nav, .list-group",Fn=".active",Un="> li > .active",Wn='[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',qn=".dropdown-toggle",Mn="> .dropdown-menu .active",Kn=function(){function i(t){this._element=t}var t=i.prototype;return t.show=function(){var n=this;if(!(this._element.parentNode&&this._element.parentNode.nodeType===Node.ELEMENT_NODE&&g(this._element).hasClass(Pn)||g(this._element).hasClass(Ln))){var t,i,e=g(this._element).closest(xn)[0],o=_.getSelectorFromElement(this._element);if(e){var r="UL"===e.nodeName||"OL"===e.nodeName?Un:Fn;i=(i=g.makeArray(g(e).find(r)))[i.length-1]}var s=g.Event(On.HIDE,{relatedTarget:this._element}),a=g.Event(On.SHOW,{relatedTarget:i});if(i&&g(i).trigger(s),g(this._element).trigger(a),!a.isDefaultPrevented()&&!s.isDefaultPrevented()){o&&(t=document.querySelector(o)),this._activate(this._element,e);var l=function(){var t=g.Event(On.HIDDEN,{relatedTarget:n._element}),e=g.Event(On.SHOWN,{relatedTarget:i});g(i).trigger(t),g(n._element).trigger(e)};t?this._activate(t,t.parentNode,l):l()}}},t.dispose=function(){g.removeData(this._element,wn),this._element=null},t._activate=function(t,e,n){var i=this,o=(!e||"UL"!==e.nodeName&&"OL"!==e.nodeName?g(e).children(Fn):g(e).find(Un))[0],r=n&&o&&g(o).hasClass(jn),s=function(){return i._transitionComplete(t,o,n)};if(o&&r){var a=_.getTransitionDurationFromElement(o);g(o).removeClass(Hn).one(_.TRANSITION_END,s).emulateTransitionEnd(a)}else s()},t._transitionComplete=function(t,e,n){if(e){g(e).removeClass(Pn);var i=g(e.parentNode).find(Mn)[0];i&&g(i).removeClass(Pn),"tab"===e.getAttribute("role")&&e.setAttribute("aria-selected",!1)}if(g(t).addClass(Pn),"tab"===t.getAttribute("role")&&t.setAttribute("aria-selected",!0),_.reflow(t),t.classList.contains(jn)&&t.classList.add(Hn),t.parentNode&&g(t.parentNode).hasClass(kn)){var o=g(t).closest(Rn)[0];if(o){var r=[].slice.call(o.querySelectorAll(qn));g(r).addClass(Pn)}t.setAttribute("aria-expanded",!0)}n&&n()},i._jQueryInterface=function(n){return this.each(function(){var t=g(this),e=t.data(wn);if(e||(e=new i(this),t.data(wn,e)),"string"==typeof n){if("undefined"==typeof e[n])throw new TypeError('No method named "'+n+'"');e[n]()}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}}]),i}();g(document).on(On.CLICK_DATA_API,Wn,function(t){t.preventDefault(),Kn._jQueryInterface.call(g(this),"show")}),g.fn.tab=Kn._jQueryInterface,g.fn.tab.Constructor=Kn,g.fn.tab.noConflict=function(){return g.fn.tab=Nn,Kn._jQueryInterface};var Qn="toast",Bn="bs.toast",Vn="."+Bn,Yn=g.fn[Qn],zn={CLICK_DISMISS:"click.dismiss"+Vn,HIDE:"hide"+Vn,HIDDEN:"hidden"+Vn,SHOW:"show"+Vn,SHOWN:"shown"+Vn},Xn="fade",$n="hide",Gn="show",Jn="showing",Zn={animation:"boolean",autohide:"boolean",delay:"number"},ti={animation:!0,autohide:!0,delay:500},ei='[data-dismiss="toast"]',ni=function(){function i(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners()}var t=i.prototype;return t.show=function(){var t=this;g(this._element).trigger(zn.SHOW),this._config.animation&&this._element.classList.add(Xn);var e=function(){t._element.classList.remove(Jn),t._element.classList.add(Gn),g(t._element).trigger(zn.SHOWN),t._config.autohide&&t.hide()};if(this._element.classList.remove($n),this._element.classList.add(Jn),this._config.animation){var n=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,e).emulateTransitionEnd(n)}else e()},t.hide=function(t){var e=this;this._element.classList.contains(Gn)&&(g(this._element).trigger(zn.HIDE),t?this._close():this._timeout=setTimeout(function(){e._close()},this._config.delay))},t.dispose=function(){clearTimeout(this._timeout),this._timeout=null,this._element.classList.contains(Gn)&&this._element.classList.remove(Gn),g(this._element).off(zn.CLICK_DISMISS),g.removeData(this._element,Bn),this._element=null,this._config=null},t._getConfig=function(t){return t=l({},ti,g(this._element).data(),"object"==typeof t&&t?t:{}),_.typeCheckConfig(Qn,t,this.constructor.DefaultType),t},t._setListeners=function(){var t=this;g(this._element).on(zn.CLICK_DISMISS,ei,function(){return t.hide(!0)})},t._close=function(){var t=this,e=function(){t._element.classList.add($n),g(t._element).trigger(zn.HIDDEN)};if(this._element.classList.remove(Gn),this._config.animation){var n=_.getTransitionDurationFromElement(this._element);g(this._element).one(_.TRANSITION_END,e).emulateTransitionEnd(n)}else e()},i._jQueryInterface=function(n){return this.each(function(){var t=g(this),e=t.data(Bn);if(e||(e=new i(this,"object"==typeof n&&n),t.data(Bn,e)),"string"==typeof n){if("undefined"==typeof e[n])throw new TypeError('No method named "'+n+'"');e[n](this)}})},s(i,null,[{key:"VERSION",get:function(){return"4.3.1"}},{key:"DefaultType",get:function(){return Zn}},{key:"Default",get:function(){return ti}}]),i}();g.fn[Qn]=ni._jQueryInterface,g.fn[Qn].Constructor=ni,g.fn[Qn].noConflict=function(){return g.fn[Qn]=Yn,ni._jQueryInterface},function(){if("undefined"==typeof g)throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");var t=g.fn.jquery.split(" ")[0].split(".");if(t[0]<2&&t[1]<9||1===t[0]&&9===t[1]&&t[2]<1||4<=t[0])throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")}(),t.Util=_,t.Alert=p,t.Button=P,t.Carousel=lt,t.Collapse=bt,t.Dropdown=Jt,t.Modal=ve,t.Popover=sn,t.Scrollspy=Dn,t.Tab=Kn,t.Toast=ni,t.Tooltip=Be,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=bootstrap.min.js.map
$(document).ready(function () {

    /* for navigation drop down */
    $('.navchild').hover(function () {
        var el = $("body");
        if ($(window).width() > 1025) {
            $(this).toggleClass("active");
            el.toggleClass("nav_show");
        }
        return false;
    });


    /* for mobile navigations */
    $('.link__mobilenav').click(function () {

        if ($(this).hasClass('active')) {
            $(this).removeClass('active');
            $(this).siblings('.navigations > li .subnav').slideUp();
            return false;
        }
        $('.link__mobilenav').removeClass('active');
        $(this).addClass("active");
        if ($(window).width() < 1025) {
            $('.navigations > li .subnav').slideUp();
            $(this).siblings('.navigations > li .subnav').slideDown();
        }
        return;
    });


    /* for mobile toggle navigation */
    $('.navs_toggle').click(function () {
        if ($('.YK-languageCurrencyDropdown').hasClass('show')) {
            $('.YK-languageCurrencyDropdown').removeClass('show');
        }
        if ($('html').hasClass('cart-is-active')) {
            $('.cart').removeClass('cart-is-active');
            $('html').removeClass("cart-is-active");
        }
        if ($('html').hasClass('toggled-user')) {
            $('.dropdown__trigger-js').parent('.dropdown').removeClass("is-active");
            $("html").removeClass("toggled-user");
        }

        $(this).toggleClass("active");
        var el = $("body");
        if (el.hasClass('toggled_left')) el.removeClass("toggled_left");
        else el.addClass('toggled_left');
        return false;
    });

    $('body').click(function () {
        if ($('body').hasClass('toggled_left')) {
            $('.navs_toggle').removeClass("active");
            $('body').removeClass('toggled_left');
        }
    });

    $('.mobile__overlay').click(function () {
        if ($('body').hasClass('toggled_left')) {
            $('.navs_toggle').removeClass("active");
            $('body').removeClass('toggled_left');
        }
    });


    $('.navigation-wrapper,.section_primary').click(function (e) {
        e.stopPropagation();
        //return false;
    });

 
 

});
!function(i){"use strict";"function"==typeof define&&define.amd?define(["jquery"],i):"undefined"!=typeof exports?module.exports=i(require("jquery")):i(jQuery)}(function(i){"use strict";var e=window.Slick||{};(e=function(){var e=0;return function(t,o){var s,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:i(t),appendDots:i(t),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return i('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},i.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=i(t),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,s=i(t).data("slick")||{},n.options=i.extend({},n.defaults,o,s),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=i.proxy(n.autoPlay,n),n.autoPlayClear=i.proxy(n.autoPlayClear,n),n.autoPlayIterator=i.proxy(n.autoPlayIterator,n),n.changeSlide=i.proxy(n.changeSlide,n),n.clickHandler=i.proxy(n.clickHandler,n),n.selectHandler=i.proxy(n.selectHandler,n),n.setPosition=i.proxy(n.setPosition,n),n.swipeHandler=i.proxy(n.swipeHandler,n),n.dragHandler=i.proxy(n.dragHandler,n),n.keyHandler=i.proxy(n.keyHandler,n),n.instanceUid=e++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}}()).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},e.prototype.addSlide=e.prototype.slickAdd=function(e,t,o){var s=this;if("boolean"==typeof t)o=t,t=null;else if(t<0||t>=s.slideCount)return!1;s.unload(),"number"==typeof t?0===t&&0===s.$slides.length?i(e).appendTo(s.$slideTrack):o?i(e).insertBefore(s.$slides.eq(t)):i(e).insertAfter(s.$slides.eq(t)):!0===o?i(e).prependTo(s.$slideTrack):i(e).appendTo(s.$slideTrack),s.$slides=s.$slideTrack.children(this.options.slide),s.$slideTrack.children(this.options.slide).detach(),s.$slideTrack.append(s.$slides),s.$slides.each(function(e,t){i(t).attr("data-slick-index",e)}),s.$slidesCache=s.$slides,s.reinit()},e.prototype.animateHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.animate({height:e},i.options.speed)}},e.prototype.animateSlide=function(e,t){var o={},s=this;s.animateHeight(),!0===s.options.rtl&&!1===s.options.vertical&&(e=-e),!1===s.transformsEnabled?!1===s.options.vertical?s.$slideTrack.animate({left:e},s.options.speed,s.options.easing,t):s.$slideTrack.animate({top:e},s.options.speed,s.options.easing,t):!1===s.cssTransitions?(!0===s.options.rtl&&(s.currentLeft=-s.currentLeft),i({animStart:s.currentLeft}).animate({animStart:e},{duration:s.options.speed,easing:s.options.easing,step:function(i){i=Math.ceil(i),!1===s.options.vertical?(o[s.animType]="translate("+i+"px, 0px)",s.$slideTrack.css(o)):(o[s.animType]="translate(0px,"+i+"px)",s.$slideTrack.css(o))},complete:function(){t&&t.call()}})):(s.applyTransition(),e=Math.ceil(e),!1===s.options.vertical?o[s.animType]="translate3d("+e+"px, 0px, 0px)":o[s.animType]="translate3d(0px,"+e+"px, 0px)",s.$slideTrack.css(o),t&&setTimeout(function(){s.disableTransition(),t.call()},s.options.speed))},e.prototype.getNavTarget=function(){var e=this,t=e.options.asNavFor;return t&&null!==t&&(t=i(t).not(e.$slider)),t},e.prototype.asNavFor=function(e){var t=this.getNavTarget();null!==t&&"object"==typeof t&&t.each(function(){var t=i(this).slick("getSlick");t.unslicked||t.slideHandler(e,!0)})},e.prototype.applyTransition=function(i){var e=this,t={};!1===e.options.fade?t[e.transitionType]=e.transformType+" "+e.options.speed+"ms "+e.options.cssEase:t[e.transitionType]="opacity "+e.options.speed+"ms "+e.options.cssEase,!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.autoPlay=function(){var i=this;i.autoPlayClear(),i.slideCount>i.options.slidesToShow&&(i.autoPlayTimer=setInterval(i.autoPlayIterator,i.options.autoplaySpeed))},e.prototype.autoPlayClear=function(){var i=this;i.autoPlayTimer&&clearInterval(i.autoPlayTimer)},e.prototype.autoPlayIterator=function(){var i=this,e=i.currentSlide+i.options.slidesToScroll;i.paused||i.interrupted||i.focussed||(!1===i.options.infinite&&(1===i.direction&&i.currentSlide+1===i.slideCount-1?i.direction=0:0===i.direction&&(e=i.currentSlide-i.options.slidesToScroll,i.currentSlide-1==0&&(i.direction=1))),i.slideHandler(e))},e.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=i(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=i(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},e.prototype.buildDots=function(){var e,t,o=this;if(!0===o.options.dots){for(o.$slider.addClass("slick-dotted"),t=i("<ul />").addClass(o.options.dotsClass),e=0;e<=o.getDotCount();e+=1)t.append(i("<li />").append(o.options.customPaging.call(this,o,e)));o.$dots=t.appendTo(o.options.appendDots),o.$dots.find("li").first().addClass("slick-active")}},e.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){i(t).attr("data-slick-index",e).data("originalStyling",i(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?i('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),i("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},e.prototype.buildRows=function(){var i,e,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),l.options.rows>1){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),i=0;i<s;i++){var d=document.createElement("div");for(e=0;e<l.options.rows;e++){var a=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=i*r+(e*l.options.slidesPerRow+t);n.get(c)&&a.appendChild(n.get(c))}d.appendChild(a)}o.appendChild(d)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},e.prototype.checkResponsive=function(e,t){var o,s,n,r=this,l=!1,d=r.$slider.width(),a=window.innerWidth||i(window).width();if("window"===r.respondTo?n=a:"slider"===r.respondTo?n=d:"min"===r.respondTo&&(n=Math.min(a,d)),r.options.responsive&&r.options.responsive.length&&null!==r.options.responsive){s=null;for(o in r.breakpoints)r.breakpoints.hasOwnProperty(o)&&(!1===r.originalSettings.mobileFirst?n<r.breakpoints[o]&&(s=r.breakpoints[o]):n>r.breakpoints[o]&&(s=r.breakpoints[o]));null!==s?null!==r.activeBreakpoint?(s!==r.activeBreakpoint||t)&&(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):(r.activeBreakpoint=s,"unslick"===r.breakpointSettings[s]?r.unslick(s):(r.options=i.extend({},r.originalSettings,r.breakpointSettings[s]),!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e)),l=s):null!==r.activeBreakpoint&&(r.activeBreakpoint=null,r.options=r.originalSettings,!0===e&&(r.currentSlide=r.options.initialSlide),r.refresh(e),l=s),e||!1===l||r.$slider.trigger("breakpoint",[r,l])}},e.prototype.changeSlide=function(e,t){var o,s,n,r=this,l=i(e.currentTarget);switch(l.is("a")&&e.preventDefault(),l.is("li")||(l=l.closest("li")),n=r.slideCount%r.options.slidesToScroll!=0,o=n?0:(r.slideCount-r.currentSlide)%r.options.slidesToScroll,e.data.message){case"previous":s=0===o?r.options.slidesToScroll:r.options.slidesToShow-o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide-s,!1,t);break;case"next":s=0===o?r.options.slidesToScroll:o,r.slideCount>r.options.slidesToShow&&r.slideHandler(r.currentSlide+s,!1,t);break;case"index":var d=0===e.data.index?0:e.data.index||l.index()*r.options.slidesToScroll;r.slideHandler(r.checkNavigable(d),!1,t),l.children().trigger("focus");break;default:return}},e.prototype.checkNavigable=function(i){var e,t;if(e=this.getNavigableIndexes(),t=0,i>e[e.length-1])i=e[e.length-1];else for(var o in e){if(i<e[o]){i=t;break}t=e[o]}return i},e.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(i("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",i.proxy(e.interrupt,e,!0)).off("mouseleave.slick",i.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),i(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().off("click.slick",e.selectHandler),i(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),i(window).off("resize.slick.slick-"+e.instanceUid,e.resize),i("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),i(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},e.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.cleanUpRows=function(){var i,e=this;e.options.rows>1&&((i=e.$slides.children().children()).removeAttr("style"),e.$slider.empty().append(i))},e.prototype.clickHandler=function(i){!1===this.shouldClick&&(i.stopImmediatePropagation(),i.stopPropagation(),i.preventDefault())},e.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),i(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){i(this).attr("style",i(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},e.prototype.disableTransition=function(i){var e=this,t={};t[e.transitionType]="",!1===e.options.fade?e.$slideTrack.css(t):e.$slides.eq(i).css(t)},e.prototype.fadeSlide=function(i,e){var t=this;!1===t.cssTransitions?(t.$slides.eq(i).css({zIndex:t.options.zIndex}),t.$slides.eq(i).animate({opacity:1},t.options.speed,t.options.easing,e)):(t.applyTransition(i),t.$slides.eq(i).css({opacity:1,zIndex:t.options.zIndex}),e&&setTimeout(function(){t.disableTransition(i),e.call()},t.options.speed))},e.prototype.fadeSlideOut=function(i){var e=this;!1===e.cssTransitions?e.$slides.eq(i).animate({opacity:0,zIndex:e.options.zIndex-2},e.options.speed,e.options.easing):(e.applyTransition(i),e.$slides.eq(i).css({opacity:0,zIndex:e.options.zIndex-2}))},e.prototype.filterSlides=e.prototype.slickFilter=function(i){var e=this;null!==i&&(e.$slidesCache=e.$slides,e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.filter(i).appendTo(e.$slideTrack),e.reinit())},e.prototype.focusHandler=function(){var e=this;e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(t){t.stopImmediatePropagation();var o=i(this);setTimeout(function(){e.options.pauseOnFocus&&(e.focussed=o.is(":focus"),e.autoPlay())},0)})},e.prototype.getCurrent=e.prototype.slickCurrentSlide=function(){return this.currentSlide},e.prototype.getDotCount=function(){var i=this,e=0,t=0,o=0;if(!0===i.options.infinite)if(i.slideCount<=i.options.slidesToShow)++o;else for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else if(!0===i.options.centerMode)o=i.slideCount;else if(i.options.asNavFor)for(;e<i.slideCount;)++o,e=t+i.options.slidesToScroll,t+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;else o=1+Math.ceil((i.slideCount-i.options.slidesToShow)/i.options.slidesToScroll);return o-1},e.prototype.getLeft=function(i){var e,t,o,s,n=this,r=0;return n.slideOffset=0,t=n.$slides.first().outerHeight(!0),!0===n.options.infinite?(n.slideCount>n.options.slidesToShow&&(n.slideOffset=n.slideWidth*n.options.slidesToShow*-1,s=-1,!0===n.options.vertical&&!0===n.options.centerMode&&(2===n.options.slidesToShow?s=-1.5:1===n.options.slidesToShow&&(s=-2)),r=t*n.options.slidesToShow*s),n.slideCount%n.options.slidesToScroll!=0&&i+n.options.slidesToScroll>n.slideCount&&n.slideCount>n.options.slidesToShow&&(i>n.slideCount?(n.slideOffset=(n.options.slidesToShow-(i-n.slideCount))*n.slideWidth*-1,r=(n.options.slidesToShow-(i-n.slideCount))*t*-1):(n.slideOffset=n.slideCount%n.options.slidesToScroll*n.slideWidth*-1,r=n.slideCount%n.options.slidesToScroll*t*-1))):i+n.options.slidesToShow>n.slideCount&&(n.slideOffset=(i+n.options.slidesToShow-n.slideCount)*n.slideWidth,r=(i+n.options.slidesToShow-n.slideCount)*t),n.slideCount<=n.options.slidesToShow&&(n.slideOffset=0,r=0),!0===n.options.centerMode&&n.slideCount<=n.options.slidesToShow?n.slideOffset=n.slideWidth*Math.floor(n.options.slidesToShow)/2-n.slideWidth*n.slideCount/2:!0===n.options.centerMode&&!0===n.options.infinite?n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)-n.slideWidth:!0===n.options.centerMode&&(n.slideOffset=0,n.slideOffset+=n.slideWidth*Math.floor(n.options.slidesToShow/2)),e=!1===n.options.vertical?i*n.slideWidth*-1+n.slideOffset:i*t*-1+r,!0===n.options.variableWidth&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===n.options.centerMode&&(o=n.slideCount<=n.options.slidesToShow||!1===n.options.infinite?n.$slideTrack.children(".slick-slide").eq(i):n.$slideTrack.children(".slick-slide").eq(i+n.options.slidesToShow+1),e=!0===n.options.rtl?o[0]?-1*(n.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,e+=(n.$list.width()-o.outerWidth())/2)),e},e.prototype.getOption=e.prototype.slickGetOption=function(i){return this.options[i]},e.prototype.getNavigableIndexes=function(){var i,e=this,t=0,o=0,s=[];for(!1===e.options.infinite?i=e.slideCount:(t=-1*e.options.slidesToScroll,o=-1*e.options.slidesToScroll,i=2*e.slideCount);t<i;)s.push(t),t=o+e.options.slidesToScroll,o+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return s},e.prototype.getSlick=function(){return this},e.prototype.getSlideCount=function(){var e,t,o=this;return t=!0===o.options.centerMode?o.slideWidth*Math.floor(o.options.slidesToShow/2):0,!0===o.options.swipeToSlide?(o.$slideTrack.find(".slick-slide").each(function(s,n){if(n.offsetLeft-t+i(n).outerWidth()/2>-1*o.swipeLeft)return e=n,!1}),Math.abs(i(e).attr("data-slick-index")-o.currentSlide)||1):o.options.slidesToScroll},e.prototype.goTo=e.prototype.slickGoTo=function(i,e){this.changeSlide({data:{message:"index",index:parseInt(i)}},e)},e.prototype.init=function(e){var t=this;i(t.$slider).hasClass("slick-initialized")||(i(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},e.prototype.initADA=function(){var e=this,t=Math.ceil(e.slideCount/e.options.slidesToShow),o=e.getNavigableIndexes().filter(function(i){return i>=0&&i<e.slideCount});e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==e.$dots&&(e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t){var s=o.indexOf(t);i(this).attr({role:"tabpanel",id:"slick-slide"+e.instanceUid+t,tabindex:-1}),-1!==s&&i(this).attr({"aria-describedby":"slick-slide-control"+e.instanceUid+s})}),e.$dots.attr("role","tablist").find("li").each(function(s){var n=o[s];i(this).attr({role:"presentation"}),i(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+e.instanceUid+s,"aria-controls":"slick-slide"+e.instanceUid+n,"aria-label":s+1+" of "+t,"aria-selected":null,tabindex:"-1"})}).eq(e.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var s=e.currentSlide,n=s+e.options.slidesToShow;s<n;s++)e.$slides.eq(s).attr("tabindex",0);e.activateADA()},e.prototype.initArrowEvents=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},i.changeSlide),i.$nextArrow.off("click.slick").on("click.slick",{message:"next"},i.changeSlide),!0===i.options.accessibility&&(i.$prevArrow.on("keydown.slick",i.keyHandler),i.$nextArrow.on("keydown.slick",i.keyHandler)))},e.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(i("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&i("li",e.$dots).on("mouseenter.slick",i.proxy(e.interrupt,e,!0)).on("mouseleave.slick",i.proxy(e.interrupt,e,!1))},e.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",i.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",i.proxy(e.interrupt,e,!1)))},e.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),i(document).on(e.visibilityChange,i.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),i(window).on("orientationchange.slick.slick-"+e.instanceUid,i.proxy(e.orientationChange,e)),i(window).on("resize.slick.slick-"+e.instanceUid,i.proxy(e.resize,e)),i("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),i(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),i(e.setPosition)},e.prototype.initUI=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.show(),i.$nextArrow.show()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.show()},e.prototype.keyHandler=function(i){var e=this;i.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===i.keyCode&&!0===e.options.accessibility?e.changeSlide({data:{message:!0===e.options.rtl?"next":"previous"}}):39===i.keyCode&&!0===e.options.accessibility&&e.changeSlide({data:{message:!0===e.options.rtl?"previous":"next"}}))},e.prototype.lazyLoad=function(){function e(e){i("img[data-lazy]",e).each(function(){var e=i(this),t=i(this).attr("data-lazy"),o=i(this).attr("data-srcset"),s=i(this).attr("data-sizes")||n.$slider.attr("data-sizes"),r=document.createElement("img");r.onload=function(){e.animate({opacity:0},100,function(){o&&(e.attr("srcset",o),s&&e.attr("sizes",s)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,t])})},r.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,t])},r.src=t})}var t,o,s,n=this;if(!0===n.options.centerMode?!0===n.options.infinite?s=(o=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(o=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),s=n.options.slidesToShow/2+1+2+n.currentSlide):(o=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,s=Math.ceil(o+n.options.slidesToShow),!0===n.options.fade&&(o>0&&o--,s<=n.slideCount&&s++)),t=n.$slider.find(".slick-slide").slice(o,s),"anticipated"===n.options.lazyLoad)for(var r=o-1,l=s,d=n.$slider.find(".slick-slide"),a=0;a<n.options.slidesToScroll;a++)r<0&&(r=n.slideCount-1),t=(t=t.add(d.eq(r))).add(d.eq(l)),r--,l++;e(t),n.slideCount<=n.options.slidesToShow?e(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?e(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&e(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},e.prototype.loadSlider=function(){var i=this;i.setPosition(),i.$slideTrack.css({opacity:1}),i.$slider.removeClass("slick-loading"),i.initUI(),"progressive"===i.options.lazyLoad&&i.progressiveLazyLoad()},e.prototype.next=e.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},e.prototype.orientationChange=function(){var i=this;i.checkResponsive(),i.setPosition()},e.prototype.pause=e.prototype.slickPause=function(){var i=this;i.autoPlayClear(),i.paused=!0},e.prototype.play=e.prototype.slickPlay=function(){var i=this;i.autoPlay(),i.options.autoplay=!0,i.paused=!1,i.focussed=!1,i.interrupted=!1},e.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&i(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},e.prototype.prev=e.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},e.prototype.preventDefault=function(i){i.preventDefault()},e.prototype.progressiveLazyLoad=function(e){e=e||1;var t,o,s,n,r,l=this,d=i("img[data-lazy]",l.$slider);d.length?(t=d.first(),o=t.attr("data-lazy"),s=t.attr("data-srcset"),n=t.attr("data-sizes")||l.$slider.attr("data-sizes"),(r=document.createElement("img")).onload=function(){s&&(t.attr("srcset",s),n&&t.attr("sizes",n)),t.attr("src",o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===l.options.adaptiveHeight&&l.setPosition(),l.$slider.trigger("lazyLoaded",[l,t,o]),l.progressiveLazyLoad()},r.onerror=function(){e<3?setTimeout(function(){l.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),l.$slider.trigger("lazyLoadError",[l,t,o]),l.progressiveLazyLoad())},r.src=o):l.$slider.trigger("allImagesLoaded",[l])},e.prototype.refresh=function(e){var t,o,s=this;o=s.slideCount-s.options.slidesToShow,!s.options.infinite&&s.currentSlide>o&&(s.currentSlide=o),s.slideCount<=s.options.slidesToShow&&(s.currentSlide=0),t=s.currentSlide,s.destroy(!0),i.extend(s,s.initials,{currentSlide:t}),s.init(),e||s.changeSlide({data:{message:"index",index:t}},!1)},e.prototype.registerBreakpoints=function(){var e,t,o,s=this,n=s.options.responsive||null;if("array"===i.type(n)&&n.length){s.respondTo=s.options.respondTo||"window";for(e in n)if(o=s.breakpoints.length-1,n.hasOwnProperty(e)){for(t=n[e].breakpoint;o>=0;)s.breakpoints[o]&&s.breakpoints[o]===t&&s.breakpoints.splice(o,1),o--;s.breakpoints.push(t),s.breakpointSettings[t]=n[e].settings}s.breakpoints.sort(function(i,e){return s.options.mobileFirst?i-e:e-i})}},e.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&i(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},e.prototype.resize=function(){var e=this;i(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=i(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},e.prototype.removeSlide=e.prototype.slickRemove=function(i,e,t){var o=this;if(i="boolean"==typeof i?!0===(e=i)?0:o.slideCount-1:!0===e?--i:i,o.slideCount<1||i<0||i>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(i).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},e.prototype.setCSS=function(i){var e,t,o=this,s={};!0===o.options.rtl&&(i=-i),e="left"==o.positionProp?Math.ceil(i)+"px":"0px",t="top"==o.positionProp?Math.ceil(i)+"px":"0px",s[o.positionProp]=i,!1===o.transformsEnabled?o.$slideTrack.css(s):(s={},!1===o.cssTransitions?(s[o.animType]="translate("+e+", "+t+")",o.$slideTrack.css(s)):(s[o.animType]="translate3d("+e+", "+t+", 0px)",o.$slideTrack.css(s)))},e.prototype.setDimensions=function(){var i=this;!1===i.options.vertical?!0===i.options.centerMode&&i.$list.css({padding:"0px "+i.options.centerPadding}):(i.$list.height(i.$slides.first().outerHeight(!0)*i.options.slidesToShow),!0===i.options.centerMode&&i.$list.css({padding:i.options.centerPadding+" 0px"})),i.listWidth=i.$list.width(),i.listHeight=i.$list.height(),!1===i.options.vertical&&!1===i.options.variableWidth?(i.slideWidth=Math.ceil(i.listWidth/i.options.slidesToShow),i.$slideTrack.width(Math.ceil(i.slideWidth*i.$slideTrack.children(".slick-slide").length))):!0===i.options.variableWidth?i.$slideTrack.width(5e3*i.slideCount):(i.slideWidth=Math.ceil(i.listWidth),i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0)*i.$slideTrack.children(".slick-slide").length)));var e=i.$slides.first().outerWidth(!0)-i.$slides.first().width();!1===i.options.variableWidth&&i.$slideTrack.children(".slick-slide").width(i.slideWidth-e)},e.prototype.setFade=function(){var e,t=this;t.$slides.each(function(o,s){e=t.slideWidth*o*-1,!0===t.options.rtl?i(s).css({position:"relative",right:e,top:0,zIndex:t.options.zIndex-2,opacity:0}):i(s).css({position:"relative",left:e,top:0,zIndex:t.options.zIndex-2,opacity:0})}),t.$slides.eq(t.currentSlide).css({zIndex:t.options.zIndex-1,opacity:1})},e.prototype.setHeight=function(){var i=this;if(1===i.options.slidesToShow&&!0===i.options.adaptiveHeight&&!1===i.options.vertical){var e=i.$slides.eq(i.currentSlide).outerHeight(!0);i.$list.css("height",e)}},e.prototype.setOption=e.prototype.slickSetOption=function(){var e,t,o,s,n,r=this,l=!1;if("object"===i.type(arguments[0])?(o=arguments[0],l=arguments[1],n="multiple"):"string"===i.type(arguments[0])&&(o=arguments[0],s=arguments[1],l=arguments[2],"responsive"===arguments[0]&&"array"===i.type(arguments[1])?n="responsive":void 0!==arguments[1]&&(n="single")),"single"===n)r.options[o]=s;else if("multiple"===n)i.each(o,function(i,e){r.options[i]=e});else if("responsive"===n)for(t in s)if("array"!==i.type(r.options.responsive))r.options.responsive=[s[t]];else{for(e=r.options.responsive.length-1;e>=0;)r.options.responsive[e].breakpoint===s[t].breakpoint&&r.options.responsive.splice(e,1),e--;r.options.responsive.push(s[t])}l&&(r.unload(),r.reinit())},e.prototype.setPosition=function(){var i=this;i.setDimensions(),i.setHeight(),!1===i.options.fade?i.setCSS(i.getLeft(i.currentSlide)):i.setFade(),i.$slider.trigger("setPosition",[i])},e.prototype.setProps=function(){var i=this,e=document.body.style;i.positionProp=!0===i.options.vertical?"top":"left","top"===i.positionProp?i.$slider.addClass("slick-vertical"):i.$slider.removeClass("slick-vertical"),void 0===e.WebkitTransition&&void 0===e.MozTransition&&void 0===e.msTransition||!0===i.options.useCSS&&(i.cssTransitions=!0),i.options.fade&&("number"==typeof i.options.zIndex?i.options.zIndex<3&&(i.options.zIndex=3):i.options.zIndex=i.defaults.zIndex),void 0!==e.OTransform&&(i.animType="OTransform",i.transformType="-o-transform",i.transitionType="OTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.MozTransform&&(i.animType="MozTransform",i.transformType="-moz-transform",i.transitionType="MozTransition",void 0===e.perspectiveProperty&&void 0===e.MozPerspective&&(i.animType=!1)),void 0!==e.webkitTransform&&(i.animType="webkitTransform",i.transformType="-webkit-transform",i.transitionType="webkitTransition",void 0===e.perspectiveProperty&&void 0===e.webkitPerspective&&(i.animType=!1)),void 0!==e.msTransform&&(i.animType="msTransform",i.transformType="-ms-transform",i.transitionType="msTransition",void 0===e.msTransform&&(i.animType=!1)),void 0!==e.transform&&!1!==i.animType&&(i.animType="transform",i.transformType="transform",i.transitionType="transition"),i.transformsEnabled=i.options.useTransform&&null!==i.animType&&!1!==i.animType},e.prototype.setSlideClasses=function(i){var e,t,o,s,n=this;if(t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(i).addClass("slick-current"),!0===n.options.centerMode){var r=n.options.slidesToShow%2==0?1:0;e=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i>=e&&i<=n.slideCount-1-e?n.$slides.slice(i-e+r,i+e+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+i,t.slice(o-e+1+r,o+e+2).addClass("slick-active").attr("aria-hidden","false")),0===i?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):i===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(i).addClass("slick-center")}else i>=0&&i<=n.slideCount-n.options.slidesToShow?n.$slides.slice(i,i+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+i:i,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-i<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"));"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},e.prototype.setupInfinite=function(){var e,t,o,s=this;if(!0===s.options.fade&&(s.options.centerMode=!1),!0===s.options.infinite&&!1===s.options.fade&&(t=null,s.slideCount>s.options.slidesToShow)){for(o=!0===s.options.centerMode?s.options.slidesToShow+1:s.options.slidesToShow,e=s.slideCount;e>s.slideCount-o;e-=1)t=e-1,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");for(e=0;e<o+s.slideCount;e+=1)t=e,i(s.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");s.$slideTrack.find(".slick-cloned").find("[id]").each(function(){i(this).attr("id","")})}},e.prototype.interrupt=function(i){var e=this;i||e.autoPlay(),e.interrupted=i},e.prototype.selectHandler=function(e){var t=this,o=i(e.target).is(".slick-slide")?i(e.target):i(e.target).parents(".slick-slide"),s=parseInt(o.attr("data-slick-index"));s||(s=0),t.slideCount<=t.options.slidesToShow?t.slideHandler(s,!1,!0):t.slideHandler(s)},e.prototype.slideHandler=function(i,e,t){var o,s,n,r,l,d=null,a=this;if(e=e||!1,!(!0===a.animating&&!0===a.options.waitForAnimate||!0===a.options.fade&&a.currentSlide===i))if(!1===e&&a.asNavFor(i),o=i,d=a.getLeft(o),r=a.getLeft(a.currentSlide),a.currentLeft=null===a.swipeLeft?r:a.swipeLeft,!1===a.options.infinite&&!1===a.options.centerMode&&(i<0||i>a.getDotCount()*a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else if(!1===a.options.infinite&&!0===a.options.centerMode&&(i<0||i>a.slideCount-a.options.slidesToScroll))!1===a.options.fade&&(o=a.currentSlide,!0!==t?a.animateSlide(r,function(){a.postSlide(o)}):a.postSlide(o));else{if(a.options.autoplay&&clearInterval(a.autoPlayTimer),s=o<0?a.slideCount%a.options.slidesToScroll!=0?a.slideCount-a.slideCount%a.options.slidesToScroll:a.slideCount+o:o>=a.slideCount?a.slideCount%a.options.slidesToScroll!=0?0:o-a.slideCount:o,a.animating=!0,a.$slider.trigger("beforeChange",[a,a.currentSlide,s]),n=a.currentSlide,a.currentSlide=s,a.setSlideClasses(a.currentSlide),a.options.asNavFor&&(l=(l=a.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(a.currentSlide),a.updateDots(),a.updateArrows(),!0===a.options.fade)return!0!==t?(a.fadeSlideOut(n),a.fadeSlide(s,function(){a.postSlide(s)})):a.postSlide(s),void a.animateHeight();!0!==t?a.animateSlide(d,function(){a.postSlide(s)}):a.postSlide(s)}},e.prototype.startLoad=function(){var i=this;!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&(i.$prevArrow.hide(),i.$nextArrow.hide()),!0===i.options.dots&&i.slideCount>i.options.slidesToShow&&i.$dots.hide(),i.$slider.addClass("slick-loading")},e.prototype.swipeDirection=function(){var i,e,t,o,s=this;return i=s.touchObject.startX-s.touchObject.curX,e=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(e,i),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&o>=0?!1===s.options.rtl?"left":"right":o<=360&&o>=315?!1===s.options.rtl?"left":"right":o>=135&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?o>=35&&o<=135?"down":"up":"vertical"},e.prototype.swipeEnd=function(i){var e,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1,!1;if(o.interrupted=!1,o.shouldClick=!(o.touchObject.swipeLength>10),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":e=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(e),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},e.prototype.swipeHandler=function(i){var e=this;if(!(!1===e.options.swipe||"ontouchend"in document&&!1===e.options.swipe||!1===e.options.draggable&&-1!==i.type.indexOf("mouse")))switch(e.touchObject.fingerCount=i.originalEvent&&void 0!==i.originalEvent.touches?i.originalEvent.touches.length:1,e.touchObject.minSwipe=e.listWidth/e.options.touchThreshold,!0===e.options.verticalSwiping&&(e.touchObject.minSwipe=e.listHeight/e.options.touchThreshold),i.data.action){case"start":e.swipeStart(i);break;case"move":e.swipeMove(i);break;case"end":e.swipeEnd(i)}},e.prototype.swipeMove=function(i){var e,t,o,s,n,r,l=this;return n=void 0!==i.originalEvent?i.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(e=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:i.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:i.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&r>4?(l.scrolling=!0,!1):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==i.originalEvent&&l.touchObject.swipeLength>4&&(l.swiping=!0,i.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,l.touchObject.edgeHit=!1,!1===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=e+o*s:l.swipeLeft=e+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=e+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},e.prototype.swipeStart=function(i){var e,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return t.touchObject={},!1;void 0!==i.originalEvent&&void 0!==i.originalEvent.touches&&(e=i.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==e?e.pageX:i.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==e?e.pageY:i.clientY,t.dragging=!0},e.prototype.unfilterSlides=e.prototype.slickUnfilter=function(){var i=this;null!==i.$slidesCache&&(i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.appendTo(i.$slideTrack),i.reinit())},e.prototype.unload=function(){var e=this;i(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},e.prototype.unslick=function(i){var e=this;e.$slider.trigger("unslick",[e,i]),e.destroy()},e.prototype.updateArrows=function(){var i=this;Math.floor(i.options.slidesToShow/2),!0===i.options.arrows&&i.slideCount>i.options.slidesToShow&&!i.options.infinite&&(i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===i.currentSlide?(i.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-i.options.slidesToShow&&!1===i.options.centerMode?(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):i.currentSlide>=i.slideCount-1&&!0===i.options.centerMode&&(i.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},e.prototype.updateDots=function(){var i=this;null!==i.$dots&&(i.$dots.find("li").removeClass("slick-active").end(),i.$dots.find("li").eq(Math.floor(i.currentSlide/i.options.slidesToScroll)).addClass("slick-active"))},e.prototype.visibility=function(){var i=this;i.options.autoplay&&(document[i.hidden]?i.interrupted=!0:i.interrupted=!1)},i.fn.slick=function(){var i,t,o=this,s=arguments[0],n=Array.prototype.slice.call(arguments,1),r=o.length;for(i=0;i<r;i++)if("object"==typeof s||void 0===s?o[i].slick=new e(o[i],s):t=o[i].slick[s].apply(o[i].slick,n),void 0!==t)return t;return o}});

var rtlValue = false;
if ($('html').attr('dir') == 'rtl') {
    rtlValue = true;
}

$('.js-hero-banner').each(function() {
    if ($(this).children().length == 1) {
        $(this).removeClass('js-hero-banner');
    }
});
$('.js-hero-banner').each(function() {
    let thisObj = $(this);
    thisObj.slick({
        lazyLoad: 'progressive',
        slidesToShow: 1,
        slidesToScroll: 1,
        autoplay: true,
        arrows: true,
        dots: true,
        rtl: rtlValue,
        autoplaySpeed: thisObj.attr('data-duration') + '000',
        prevArrow: '<div class="slick-nav prev-arrow"><i></i><svg><use xlink:href="#circle"></svg></div>',
        nextArrow: '<div class="slick-nav next-arrow"><i></i><svg><use xlink:href="#circle"></svg></div>',
    });
});

$('.slick-nav').on('click touch', function(e) {
    e.preventDefault();
    var arrow = $(this);
    if (!arrow.hasClass('animate')) {
        arrow.addClass('animate');
        setTimeout(() => {
            arrow.removeClass('animate');
        }, 1600);
    }
});


$('.js-collection-slider').each(function() {
    if ($(this).children('li').length <= 4) {
        $(this).removeClass('js-collection-slider');
    }
});
$(".js-collection-slider").slick({
    slidesToShow: 6,
    slidesToScroll: 1,
    autoplay: false,
    arrows: true,
    dots: false,
    rtl: rtlValue,
    autoplaySpeed: 2000,
    responsive: [{
            breakpoint: 1199,
            settings: {
                slidesToShow: 4,
                dots: false,
                arrows: false,
            }
        },
        {
            breakpoint: 991,
            settings: {
                slidesToShow: 3,
                arrows: false,
                dots: false,

            }
        },
        {
            breakpoint: 767,
            settings: {
                slidesToShow: 2,
                arrows: false,
                dots: false,

            }
        },
        {
            breakpoint: 480,
            settings: {
                slidesToShow: 2,
                arrows: false,
                dots: false,

            }
        }

    ]
});
$(".js-collection-slider-sm").slick({
    slidesToShow: 3,
    slidesToScroll: 1,
    autoplay: false,
    arrows: true,
    dots: false,
    rtl: rtlValue,
    autoplaySpeed: 2000,
    responsive: [{
            breakpoint: 1030,
            settings: {
                slidesToShow: 3,
                dots: false,
                arrows: false,
            }
        },
        {
            breakpoint: 800,
            settings: {
                slidesToShow: 2,
                arrows: false,
                dots: false,

            }
        },
        {
            breakpoint: 480,
            settings: {
                slidesToShow: 1,
                arrows: false,
                dots: false,

            }
        }
    ]
});
$('.yk-brandimages').each(function() {
    if ($(this).children('div').length <= 6) {
        $(this).removeClass('yk-brandimages');
    }
});
$(".yk-brandimages").slick({
    slidesToShow: 6,
    slidesToScroll: 1,
    autoplay: false,
    arrows: false,
    dots: false,
    rtl: rtlValue,
    autoplaySpeed: 2000,
    responsive: [{
            breakpoint: 1030,
            settings: {
                slidesToShow: 3,
                dots: false,


            }
        },
        {
            breakpoint: 800,
            settings: {
                slidesToShow: 2,
                arrows: false,
                dots: false,

            }
        },
        {
            breakpoint: 480,
            settings: {
                slidesToShow: 2,
                arrows: false,
                dots: false,

            }
        }

    ]
});

$(".js-slider-reviews").slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    autoplay: false,
    arrows: true,
    dots: true,
    rtl: rtlValue,
    autoplaySpeed: 2000,
    responsive: [{
        breakpoint: 600,
        settings: {
            arrows: false,
        }
    }]
});
$('.js-slider-testimonials').each(function() {
    if ($(this).children('.testimonials__item').length <= 3) {
        $(this).removeClass('js-slider-testimonials');
        $(this).addClass('testimonial-1-no-slider');
    }
});
$(".js-slider-testimonials").slick({
    slidesToShow: 3,
    slidesToScroll: 3,
    autoplay: false,
    arrows: true,
    dots: false,
    rtl: rtlValue,
    infinite: true,
    centerMode: true,
    centerPadding: 0,
    responsive: [{
            breakpoint: 1199,
            settings: {
                slidesToShow: 2,
                dots: true,
            }
        },
        {
            breakpoint: 800,
            settings: {
                slidesToShow: 2,
                dots: true,
            }
        },
        {
            breakpoint: 767,
            settings: {
                slidesToShow: 1,
                arrows: false,
                dots: true,
            }
        }

    ]
});
$('.yk-testimonialCollection2').each(function() {
    if ($(this).find('.yk-testimonials').children('.testimonials__item').length <= 2) {
        $(this).find('.slider-controls').remove();
    }
});

//Start of Common Carousel
var _carousel = $('.js-carousel');
_carousel.each(function() {

    var _this = $(this),
        _slidesToShow = (_this.data("slides")).toString().split(',');

    _this.slick({
        slidesToShow: parseInt(_slidesToShow.length > 0 ? _slidesToShow[0] : "3"),
        slidesToScroll: 1,
        //appendDots: '.slider-controls[data-href="#' + _this.attr("id") + '"]',
        centerMode: _this.data("mode"),
        arrows: _this.data("arrows"),
        vertical: _this.data("vertical"),
        infinite: _this.data("infinite"),
        prevArrow: (() => {
            return $('.prev-arrow[data-href="#' + _this.attr("id") + '"]')
        })(),
        nextArrow: (() => {
            return $('.next-arrow[data-href="#' + _this.attr("id") + '"]')
        })(),
        autoplay: false,
        dots: true,
        pauseOnHover: false,
        centerPadding: 0,
        adaptiveHeight: true,
        infinite: true,
        responsive: [{
                breakpoint: 1200,
                settings: {
                    slidesToShow: parseInt(parseInt(_slidesToShow.length > 1 ? _slidesToShow[1] : "2")),
                    vertical: false
                }
            },
            {
                breakpoint: 992,
                settings: {
                    slidesToShow: parseInt(parseInt(_slidesToShow.length > 2 ? _slidesToShow[2] : "1")),
                    vertical: false
                }
            },
            {
                breakpoint: 768,
                settings: {
                    slidesToShow: parseInt(parseInt(_slidesToShow.length > 3 ? _slidesToShow[3] : "1")),
                    vertical: false
                }
            },
            {
                breakpoint: 576,
                settings: {
                    slidesToShow: parseInt(parseInt(_slidesToShow.length > 4 ? _slidesToShow[4] : "1")),
                    vertical: false
                }
            }
        ]
    });
});
//End of Common Carousel

// blog slider

$('.blog-slider-for').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    arrows: false,
    fade: true,
    asNavFor: '.blog-slider-nav'
});
$('.blog-slider-nav').slick({
    slidesToShow: 1,
    slidesToScroll: 1,
    asNavFor: '.blog-slider-for',
    dots: false,
    focusOnSelect: true,
    responsive: [{
        breakpoint: 992,
        settings: {
            arrows: false,
            dots: true,
        }
    }]
});
(function () {
    setInputFilter = function (textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop", "textArea"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                } else {
                    this.value = "";
                }
            });
        });
    }
    setCardFormValidation = function () {
        setInputFilter(document.getElementById("name"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value);
        });
        setInputFilter(document.getElementById("number"), function (value) {
            return /^(\s*|\d+)$/.test(value) && (value.length <= 19)
        });
        setInputFilter(document.getElementById("exp_month"), function (value) {
            return /^\d*$/.test(value) && (value.length <= 2)
        });
        setInputFilter(document.getElementById("exp_year"), function (value) {
            return /^\d*$/.test(value) && (value.length <= 4)
        });
        setInputFilter(document.getElementById("cvv"), function (value) {
            return /^\d*$/.test(value)
        });

        if ($("#name").val() == '' && $("#number").val() == '' && $("#exp_month").val() == '' || $("#exp_year").val() == '' && $("#cvv").val() == '') {
            $("#YK-saveCards button[name='saveCardBtn']").attr("disabled", true);
        } else {
            $("#YK-saveCards button[name='saveCardBtn']").attr("disabled", false);
        }
    }
    setCardFormValidationTrigger = function () {
        $("input[type='text'], textarea, select").on("keyup", function () {
            if ($("#name").val() == '' || $("#number").val() == '' || $("#exp_month").val() == '' || $("#exp_year").val() == '' || $("#cvv").val() == '') {
                $("#YK-saveCards button[name='saveCardBtn']").attr("disabled", true);
            } else {
                $("#YK-saveCards button[name='saveCardBtn']").attr("disabled", false);
            }
        });
    }
    setAddressFormValidation = function () {
        setInputFilter(document.getElementById("addr_first_name"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value);
        });
        setInputFilter(document.getElementById("addr_last_name"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value);
        });
        setInputFilter(document.getElementById("addr_title"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value);
        });
        setInputFilter(document.getElementById("addr_city"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value)
        });
        setInputFilter(document.getElementById("addr_postal_code"), function (value) {
            return /^\d*$/.test(value)
        });

        if ($("#addr_first_name").val() == '' || $("#addr_last_name").val() == '' || $("#addr_title").val() == '' || $("#addr_city").val() == '' || $("#addr_postal_code").val() == '') {
            $("#YK-addAddress button[name='YK-saveaddress']").attr("disabled", true);
        } else {
            $("#YK-addAddress button[name='YK-saveaddress']").attr("disabled", false);
        }
    }
    setAddressFormTrigger = function (update = 0) {
        $("input[type='text'], textarea").on("keyup", function () {
            if ($("#addr_first_name").val() == '' || $("#addr_last_name").val() == '' || $("#addr_title").val() == '' || $("#addr_city").val() == '' || $("#addr_postal_code").val() == '') {
                if (update) {
                    $("#YK-addAddress button[name='YK-updateaddress']").attr("disabled", true);
                } else {
                    $("#YK-addAddress button[name='YK-saveaddress']").attr("disabled", true);
                }
            } else {
                if (update) {
                    $("#YK-addAddress button[name='YK-updateaddress']").attr("disabled", false);
                } else {
                    $("#YK-addAddress button[name='YK-saveaddress']").attr("disabled", false);
                }

            }
        });
    }
    setProfileFormValidation = function () {
        setInputFilter(document.getElementById("user_fname"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value);
        });
        setInputFilter(document.getElementById("user_lname"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value);
        });

        if ($("#user_fname").val() == '' || $("#user_lname").val() == '' || $("#user_email").val() == '') {
            $("#YK-personalDetails button[name='saveProfileBtn']").attr("disabled", true);
        } else {
            $("#YK-personalDetails button[name='saveProfileBtn']").attr("disabled", false);
        }
    }
    setProfileFormTrigger = function () {
        $("input[type='text'], textarea").on("keyup", function () {
            if ($("#user_fname").val() == '' || $("#user_lname").val() == '' || $("#user_email").val() == '') {
                $("#YK-personalDetails button[name='saveProfileBtn']").attr("disabled", true);
            } else {
                $("#YK-personalDetails button[name='saveProfileBtn']").attr("disabled", false);
            }
        });
    }
    setReviewFormValidation = function () {
        setInputFilter(document.getElementById("preview_title"), function (value) {
            return /^[a-zA-Z\s]*$/.test(value);
        });
        if ($("#preview_title").val() == '') {
            $("#dataModal").find('[name="submitReviewBtn"]').attr("disabled", true);
        } else {
            $("#dataModal").find('[name="submitReviewBtn"]').attr("disabled", false);
        }
    }
    setReviewFormTrigger = function () {
        $("input[type='text'], textarea").on("keyup", function () {
            if ($("#preview_title").val() == '') {
                $("#dataModal").find('[name="submitReviewBtn"]').attr("disabled", true);
            } else {
                $("#dataModal").find('[name="submitReviewBtn"]').attr("disabled", false);
            }
        });
    }
    setApplyCouponValidation = function () {
        setInputFilter(document.getElementById("cartCouponCode"), function (value) {
            return /^[a-zA-Z0-9\s]*$/.test(value);
        });
        if ($("#cartCouponCode").val() == '') {
            $("#dataModal").find('[name="ykApplyCoupon"]').attr("disabled", true);
        } else {
            $("#dataModal").find('[name="ykApplyCoupon"]').attr("disabled", false);
        }
    }
    setApplyCouponTrigger = function () {
        $("input[type='text'], textarea").on("keyup", function () {
            if ($("#cartCouponCode").val() == '') {
                $("#dataModal").find('[name="ykApplyCoupon"]').attr("disabled", true);
            } else {
                $("#dataModal").find('[name="ykApplyCoupon"]').attr("disabled", false);
                $("input:radio[name='coupon']").each(function (i) {
                    this.checked = false;
                });
            }
        });
    }
    setLoginValidation = function () {
        let conditionId = ($("#via").val() == "email") ? 'username' : 'user_phone_mask';
        if ($("#" + conditionId).val() == '' || $("#password").val() == '') {
            $("#dataModal").find('[name="loginBtn"]').attr("disabled", true);
        } else {
            $("#dataModal").find('[name="loginBtn"]').attr("disabled", false);
        }
    }
    setLoginTrigger = function () {
        let conditionId = ($("#via").val() == "email") ? 'username' : 'user_phone_mask';
        $("input[type='text'], [name='user_phone_mask'], textarea, input[type='password']").on("keyup", function () {
            if ($("#" + conditionId).val() == '' || $("#password").val() == '') {
                $("#dataModal").find('[name="loginBtn"]').attr("disabled", true);
            } else {
                $("#dataModal").find('[name="loginBtn"]').attr("disabled", false);
            }
        });
    }
    setGuestLoginValidation = function () {
        if ($("#username").val() == '' || $("#password").val() == '') {
            $('button[name="guestCheckoutLgn"]').attr("disabled", true);
        } else {
            $('button[name="guestCheckoutLgn"]').attr("disabled", false);
        }
    }
    setGuestLoginTrigger = function () {
        $("input[type='text'], textarea, input[type='password']").on("keyup", function () {
            if ($("#username").val() == '' || $("#password").val() == '') {
                $('button[name="guestCheckoutLgn"]').attr("disabled", true);
            } else {
                $('button[name="guestCheckoutLgn"]').attr("disabled", false);
            }
        });
    }
})();
(function() {
    if (productBackground == 1) {
        $('.js-fillcolor').fillColor();
    }
    var rtlValue = false;
    if ($('html').attr('dir') == 'rtl') {
        rtlValue = true;
    }

    $(document).on('click', '.YK-openSearchBar', function() {
        $(".main-search-bar").removeClass("d-none");
        var input = $('.YK-headerSearchInput');
        setTimeout(function() {
            input.trigger('focus');
            var tmpStr = input.val();
            input.val('').val(tmpStr);
        }, 200);
    });

    $('[data-toggle="tooltip"]').tooltip();
    $('[data-toggle="popover"]').popover();

    $(document).find('.yk-productCollectionLayout1 .yk-container, .yk-productCollectionLayout2 .yk-container, .yk-categoryCollectionLayout1 .yk-container').each(function() {
        $(this).find('.yk-link').attr('href', baseUrl + '/collection/' + $(this).attr('pageid') + '/' + $(this).attr('compid'));
    });

    $(document).on('click', '.view_gallery', function() {
        $(this).hide();
        let closestobj = $(this).closest('.product');
        closestobj.find('.product3D').addClass('flip180');
        closestobj.find('.product-front').css('display', 'none');
        closestobj.find('.product-back').css('display', 'block');
        if ($.trim(closestobj.find(".slider-quick").html()) == "") {
            closestobj.find('.js-flipLoader').show();
            $.ajax({
                url: baseUrl + '/product/get-gallery-images',
                type: "post",
                data: { 'product-id': $(this).data('productid'), 'variant-id': $(this).data('subrecordid'), 'prod-name': $(this).data('prodname') },
                success: function(res) {
                    closestobj.find('.js-flipLoader').hide();
                    closestobj.find(".slider-quick").html(res);
                    if (closestobj.find(".slider-quick picture").length > 1) {
                        closestobj.find(".slider-quick").slick({
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            autoplay: true,
                            autoplaySpeed: 1500,
                            arrows: false,
                            rtl: rtlValue,
                            dots: true,
                        });
                    }
                }
            });
        }
    });
    $(document).on('click', '.flip-back', function() {
        $("#view-gallery-" + $(this).data('id')).show();
        let closestobj = $(this).closest('.product');
        closestobj.find('.product3D').removeClass('flip180');
        closestobj.find('.product-front').css('display', 'block');
        closestobj.find('.product-back').css('display', 'none');
    });

    /** Add to cart */
    $(document).on('click', '.YK-add-to-cart', function() {
        NProgress.start();
        let productId = $(this).data('productid');
        let redirect = $(this).data('redirect');
        let productOptionId = $(this).data('optioncode') ? $(this).data('optioncode') : 0;

        addTocart(productId, '', redirect, 0, productOptionId);
    });
    if ($('.YK-darkMode').html() == "") {
        $('.YK-darkMode').remove();
    }

    /**/
    $(document).on('click', '.YK-closeSearchBar', function() {
        $('body').removeClass('main-search-bar--on');
    });
    $(document).on('click', '.YK-closeSlogan', function() {
        $('.YK-topHeader').remove();
    });
    if (typeof $.cookie(systemPrefix + 'ThemeStyle') != 'undefined') {
        if ($.cookie(systemPrefix + 'ThemeStyle') == 'light') {
            $('#yk-header-logo').attr('src', $("#yk-header-logo").attr('data-lite'));
        } else {
            if ($("#yk-header-logo").attr('data-dark') != "") {
                $('#yk-header-logo').attr('src', $("#yk-header-logo").attr('data-dark'));
            }
        }
    }
    /*toggle theme switch*/
    $('.YK-themeSwitch').on('click', function(e) {
        // $.removeCookie(systemPrefix + 'ThemeStyle');
        $.removeCookie(systemPrefix + 'ThemeStyle', { path: '/', domain: domain });
        $.removeCookie(systemPrefix + 'ThemeStyle', { path: '/', domain: '.' + domain });
        if ($(this).hasClass("dark")) {
            $('#yk-header-logo').attr('src', $("#yk-header-logo").attr('data-lite'));
            $('.YK-themeSwitch').removeClass('dark').addClass('light');
            $('html').attr('data-theme', 'light');
            $('.YK-themeSwitch svg use').attr('xlink:href', $('.YK-themeSwitch').data('light'));
            $('.YK-themeSwitch svg use').attr('href', $('.YK-themeSwitch').data('light'));
            $('.YK-mode').html('Dark Mode');
            $.cookie(systemPrefix + 'ThemeStyle', 'light', { path: '/', expires: 365 });
        } else {
            if ($("#yk-header-logo").attr('data-dark') != "") {
                $('#yk-header-logo').attr('src', $("#yk-header-logo").attr('data-dark'));
            }
            $('.YK-themeSwitch').removeClass('light').addClass('dark');
            $('html').attr('data-theme', 'dark');
            $('.YK-themeSwitch svg use').attr('xlink:href', $('.YK-themeSwitch').data('dark'));
            $('.YK-themeSwitch svg use').attr('href', $('.YK-themeSwitch').data('dark'));
            $('.YK-mode').html('Light Mode');
            $.cookie(systemPrefix + 'ThemeStyle', 'dark', { path: '/', expires: 365 });
        }
    });
    /*change currency*/
    $('.YK-switchCurrency [type="radio"]').on('click', function(e) {
        window.location.href = currentUrl + '?currency=' + $(this).val();
    });

  //  $('.YK-selectedLanguageFlag').attr('src', baseUrl + '/flags/' + userDefaultFlag + '.svg');

    /*on click of card image link to product detail*/
    $('.YK-productLink').on('click', function() {
        window.location.href = $(this).attr('data-href');
    });
    /*handle the newsletter submission*/
    $('.YK-agreeTerms').on('click', function(e) {
        if ($(this).is(":checked")) {
            $(this).closest('.form').find('button[name="contactform"]').removeAttr('disabled');
        } else {
            $(this).closest('.form').find('button[name="contactform"]').attr('disabled', '');
        }
    });
    $('.YK-subscribeNewsletter').attr('disabled', 'disabled');
    $(document).on('keyup', '.yk-newsletter input[type="email"], .yk-newsletterFullwidth input[type="email"], .yk-newsletterCollection2 input[type="email"], .yk-footer input[name="email"]', function(e) {
        var emailValue = $(this).val();
        if (emailValue == "") {
            $(this).closest('form').find('.YK-subscribeNewsletter').attr('disabled', 'disabled');
        } else {
            $(this).closest('form').find('.YK-subscribeNewsletter').removeAttr('disabled');
        }
    });
    $('.YK-subscribeNewsletter').on('click', function(e) {
        e.preventDefault();
        NProgress.start();
        let thisObj = $(this);
        var values = thisObj.closest('form').serialize();
        thisObj.closest('form').find('div.message').html('');
        $.ajax({
            url: baseUrl + '/newsletter',
            type: "post",
            data: values,
            success: function(res) {
                NProgress.done();
                if (res.status) {
                    // toastr.success(res.message);
                    $(".YK-subscribedModal").find(".YK-content").html('').html(res.message);
                    $(".YK-subscribedModal").modal("show");
                    thisObj.closest('form').find('input[name=email]').val('');
                } else {
                    toastr.error(res.message);
                }
            }
        });
    });

    blogSidebarContent = function(query = '') {
        $.get(baseUrl + '/blogs/load-sidebar-content?query=' + query, function(response) {
            $('.YK-blogSidebarContent').html(response);
        });
    };
    saveComments = function() {
            let obj = $('#YK-comment_form');
            obj.find('.invalid-feedback').remove();
            obj.find('input, textarea').removeClass('is-invalid');
            let commentData = obj.serializeArray();
            $.post(baseUrl + '/blog/comment/save', commentData, function(response) {
                if (response.status == true) {
                    obj.trigger("reset");
                    toastr.success(response.message);
                }
            }).fail(function(response) {
                let errors = response.responseJSON.errors;
                validateErrors(errors, obj);
            });

        }
        /*handle the contactform */
    $('.yk-contactForm input, .yk-contactForm textarea').removeAttr('readonly');
    $('form.yk-contactForm button[name="contactform"]').on('click', function(e) {
        e.preventDefault();
        let obj = $(this).closest('.yk-contactForm');
        obj.find('input,textarea,select').removeClass('is-invalid');
        obj.find('.invalid-feedback').remove();
        obj.find('button[name="contactform"]').addClass("gb-is-loading");
        var values = obj.find('input,textarea,select').serialize();
        NProgress.start();
        $.ajax({
            url: baseUrl + '/contact',
            type: "post",
            data: values,
            success: function(res) {
                NProgress.done();
                events.contactUs();
                if (!res.status) {
                    toastr.error(res.message);
                }
                toastr.success(res.message);
                obj.find('button[name="contactform"]').removeClass("gb-is-loading");
                obj[0].reset();
            },
            error: function(xhr, status, error) {
                NProgress.done();
                obj.find('button[name="contactform"]').removeClass("gb-is-loading");
                let errors = xhr.responseJSON.errors;
                validateErrors(errors, obj);
            }
        });
    });

    saveProfile = function() {
        let obj = $('#YK-personalDetails');
        obj.find('.invalid-feedback').remove();
        obj.find('input').removeClass('is-invalid');
        let submitBtn = obj.find('button[name="saveProfileBtn"]');
        loader(submitBtn);
        $.post(baseUrl + '/user/profile', obj.serializeArray(), function(response) {
            loader(submitBtn, true);
            if (response.status == true) {
                toastr.success(response.message);
            } else {
                toastr.error(response.message);
            }
        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    savePassword = function() {
        let obj = $('#YK-passwordDetails');
        $('.YK-comment_success').html('');
        obj.find('.invalid-feedback').remove();
        obj.find('input').removeClass('is-invalid');
        let passwordData = obj.serializeArray();
        $.post(baseUrl + '/user/password', passwordData, function(response) {
            if (response.status == true) {
                toastr.success(response.message);
            }
        }).fail(function(response) {
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    switchStatus = function(event, id) {
        let status = 0;
        if ($(event).is(":checked")) {
            status = 1;
        }
        let formData = {
            'addr_default': status,
            'addr_id': id
        }
        $.post(baseUrl + '/user/address/updateStatus', formData, function(response) {

        })
    }

    deleteAddress = function(id) {
        let formData = {
            'addr_id': id
        }
        $.post(baseUrl + '/user/address/delete', formData, function(response) {
            if (response.status == true) {
                toastr.success(response.message);
                $('#dataModal').modal("hide");
                $("#YK-Address-list").empty();
                $("#YK-Address-list").html(response.data);
                $('[data-toggle="tooltip"]').tooltip();
            } else {
                toastr.error(res.message);
            }
        })
    }
    updateAddress = function(id) {
        let obj = $('#YK-addAddress');
        let submitBtn = obj.find('button[name="YK-updateaddress"]');
        let formdata = obj.serializeArray();
        loader(submitBtn);
        $.post(baseUrl + '/user/update-address', formdata, function(response) {
            loader(submitBtn, true);
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            toastr.success(response.message);
            setTimeout(() => {
                window.location.href = baseUrl + "/user/address";
            }, 2000);
        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    validateErrors = function(errors, obj) {
        Object.keys(errors).forEach(key => {
            if (!obj.find('input[name="' + key + '"], textarea[name="' + key + '"], select[name="' + key + '"]').hasClass('is-invalid')) {
                if (key.indexOf('.') !== -1) {
                    let arr = key.split(".");
                    let index = arr[0] + '[' + arr[1] + ']';
                    obj.find('input[name="' + index + '"], textarea[name="' + index + '"], select[name="' + index + '"]').addClass('is-invalid');
                    obj.find('input[name="' + index + '"], textarea[name="' + index + '"], select[name="' + index + '"]').closest('div').append('<div class="invalid-feedback">' + errors[key][0] + '</div>');
                } else {
                    obj.find('input[name="' + key + '"], textarea[name="' + key + '"], select[name="' + key + '"]').addClass('is-invalid');
                    obj.find('input[name="' + key + '"], textarea[name="' + key + '"], select[name="' + key + '"]').closest('div').append('<div class="invalid-feedback">' + errors[key][0] + '</div>');
                }
            }
        });
    }
    getDownloadItems = function(id) {
        $.post(baseUrl + '/user/orders/get-dowload-items', { 'order-id': id }, function(response) {
            $("#dataModal").empty();
            $("#dataModal").html(response);
            $('#dataModal').modal("show");

        })
    }
    saveMessage = function(id, type = '') {
        let obj = $('#YK-message-' + id);
        obj.find('.invalid-feedback').remove();
        obj.find('input').removeClass('is-invalid');
        let comment = obj.find('input[name="comment"]');
        let submitBtn = obj.find('button[name="YK-postOrderMessage-' + id + '"]');
        loader(submitBtn);
        $.post(baseUrl + '/user/orders/comments', { 'record-id': id, 'comment': comment.val(), 'type': type }, function(response) {
            loader(submitBtn, true);
            loadComments(id, '', '', type);
            comment.val('');
            toastr.success('Success', response.message);

        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    getOrders = function(type, event = '', loadData = false, id = '') {
        let thisObj = $('.YK-loadMoreOrders');
        let loadId = thisObj.attr('data-last-id');
        if (event != "") {
            $(".YK-orderTabs").find('li').removeClass('active');
            $(event).closest('li').addClass('active');
            loadId = '';
        }

        thisObj.closest('.YK-loadMoreFooter').hide();
        let formData = {
            'lastid': loadId,
            'id': id,
        };
        NProgress.start();
        let postUrl1 = baseUrl + '/user/get-orders/' + type;
        $.post(postUrl1, formData, function(response) {
            NProgress.done();
            if (loadData == false) {
                $('.YK-orderListing').html(response.data.data);
            } else {
                $('.YK-orderListing').append(response.data.data);
            }
            thisObj.attr('data-last-id', response.data.lastId);
            floatingFormFix();
            if ($('.YK-orderListing li.YK-listing').length != response.data.total) {
                thisObj.closest('.YK-loadMoreFooter').show();
            }
            $('.noRecordFound').remove();
            $('.YK-listingBody').show();
            if ($('.YK-orderListing li.YK-listing').length == 0 && response.data.total == 0) {
                $('.YK-listingBody').hide();
                $('.YK-listing').append(response.data.data);
            }


        });

    }

    $(document).on('click', '.YK-loadMoreOrders', function(e) {
        let type = $('.YK-orderTabs').find('li.active a').attr('alt')
        getOrders(type, '', true);
    });

    getDigitalOrders = function(loadData = false, orderId = '', productId = '') {
        let thisObj = $('.YK-loadMoreDigitalOrders');
        let loadId = thisObj.attr('data-last-id');

        let sortBy = $("#YK-Sort-Name").attr('data-value');
        thisObj.closest('.YK-loadMoreFooter').hide();
        let formData = {
            'lastid': loadId,
            'order-id': orderId,
            'product-id': productId,
            'sortBy': sortBy,
        };
        NProgress.start();
        $.post(baseUrl + '/user/get-digtal-orders', formData, function(response) {
            NProgress.done();
            if (loadData == false) {
                $('.YK-digitalProductListing').html(response.data.data);
            } else {
                $('.YK-digitalProductListing').append(response.data.data);
            }
            thisObj.attr('data-last-id', $('li.YK-digitalListing').length);
            if ($('li.YK-digitalListing').length != response.data.total) {
                thisObj.closest('.YK-loadMoreFooter').show();
            }

            if ($('li.YK-digitalListing').length == 0 && response.data.total == 0) {
                $('.YK-filters').remove();
                $('.YK-listingBody').remove();
                $('.YK-listing').append(response.data.data);
            }

        });

    }

    $(document).on('click', '.YK-loadMoreDigitalOrders', function(e) {
        getDigitalOrders(true);
    });
    downloadFiles = function(orderId, productId) {
        let formData = {
            'order-id': orderId,
            'product-id': productId,
        };
        $.post(baseUrl + '/product/download/url', formData, function(response) {
            if (response.status == false) {
                toastr.error(response.message);
                return false;
            }
            $('#digitalListing-' + orderId + '-' + productId).html(response.data.data);
            window.location.href = response.data.url;
        });


    }
    updateNotes = function(event, id) {
        $.post(baseUrl + '/order/notes/' + id, { 'notes': $(event).val() }, function(response) {
            toastr.success('Success', response.message);
        })

    }

    orderConfirmation = function(event, id) {
        $.post(baseUrl + '/order/received', { 'order-id': id }, function(response) {
            $(event).closest('.YK-orderReceived').remove();
            toastr.success('Success', response.message);
        });

    }
    getBankForm = function() {
        let orderId = $('#YK-orderId').val();
        $.get(baseUrl + '/order/bank-form/' + orderId, function(response) {
            $("#dataModal").empty();
            $("#dataModal").html(response.data);
            $('#dataModal').modal("show");
            floatingFormFix();
        });

    }
    submitBankInformation = function() {

        let obj = $('#YK-bankInformation');
        obj.find('.invalid-feedback').remove();
        obj.find('input, textarea').removeClass('is-invalid');
        let formData = obj.serializeArray();
        formData.push({ name: 'order_id', value: $('#YK-orderId').val() });
        $.post(baseUrl + '/order/bank-form', formData, function(response) {
            if (response.status == true) {
                $('#dataModal').modal("hide");
                $('#YK-bankDetails').html(response.data);
            }
        }).fail(function(response) {
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });


    }
    $(document).on('click', '.YK-ordersTimeline .pagination a', function(e) {
        e.preventDefault();
        e.stopPropagation();
        var url = $(this).attr('href');
        var orderId = $(this).closest('.YK-ordersTimeline').attr('data-id');
        loadComments(orderId, url);
    });
    loadComments = function(id, url = '', event = '', type = '') {
        if (url == '') {
            url = baseUrl + '/user/orders/load-comments';
        }
        if ($(event).attr('aria-expanded') == "true") {
            return;
        }
        $.post(url, { 'order-id': id, 'type': type }, function(response) {
            $('#YK-comments-' + id).html(response.data);
        })
    }
    updateReturn = function() {

        let subTotal = 0;
        let tax = 0;
        let price = 0;
        let maxQty = 0;
        let selectedQty = 0;
        let discount = 0;
        let reward = 0;
        let gift = 0;
        let shipping = $('input[name="YK-shippingValue"]').val();
        let shippingStatus = $('input[name="YK-shippingStatus"]').val();
        let totalRewardAmount = $('input[name="YK-rewardAmount"]').val();
        let totalDiscountAmount = $('input[name="YK-discountAmount"]').val();

        $('.YK-productListing').find('input').each(function() {
            maxQty += parseFloat($(this).attr('max'));
            selectedQty += parseFloat($(this).val());
            if ($(this).hasClass('YK-CaneledProduct')) {
                return;
            }
            price = $(this).data('price') * $(this).val();
            discount += $(this).data('discount') * $(this).val();
            reward += $(this).data('reward') * $(this).val();
            gift += $(this).data('gift') * $(this).val();
            subTotal += parseFloat(price);
            tax += $(this).data('tax') * $(this).val();
            $(this).closest('li').find('.YK-price').html(price);
        });
        if (maxQty != selectedQty) {
            shipping = 0;
        }
        if (discount != 0 && totalDiscountAmount < discount) {
            discount = parseFloat(totalDiscountAmount);
        }
        if (reward != 0 && totalRewardAmount < reward) {
            reward = parseInt(totalRewardAmount);
        }
        $('.YK-subTotal').html(subTotal.toFixed(2));
        $('.YK-tax').html(tax.toFixed(2));
        $('.YK-discount').html(discount.toFixed(2));
        $('.YK-reward').html(reward.toFixed(2));
        $('.YK-shipping').html(shipping);
        $('.YK-gift').html(gift.toFixed(2));
        let total = (parseFloat(subTotal) + parseFloat(tax) + parseFloat(shipping) - discount - reward);
        if (shippingStatus == 1) {
            total = parseFloat(total) + parseFloat(gift);
        } else {
            total = total - gift;

        }
        if (total < 0) {
            total = 0;
        }
        $('.YK-total').html(total.toFixed(2));

    }
    increaseReturnQty = function(event) {

        let qtyobj = $(event).closest('.YK-quantity').find('.YK-qty');
        let qtyVal = qtyobj.val();
        if (qtyVal >= parseInt(qtyobj.attr('max'))) {
            return false;
        };
        let newVal = parseInt(qtyVal) + 1;
        qtyobj.val(newVal);
        $(event).closest('.YK-productListing').find('.YK-reasonForm').show();
        updateReturn();

    }

    decreaseReturnQty = function(event) {

        let qtyobj = $(event).closest('.YK-quantity').find('.YK-qty');
        let qtyVal = qtyobj.val();
        if (qtyVal <= parseInt(qtyobj.attr('min'))) {
            return false;
        };
        let newVal = parseInt(qtyVal) - 1;
        if (newVal == 0) {
            $(event).closest('.YK-productListing').find('.YK-reasonForm').hide();
        }

        qtyobj.val(newVal);
        updateReturn();

    }

    returnProcess = function(orderId, reasonType) {
        let obj = $('#YK-cancelRequest');
        let submitBtn = obj.find('button[name="YK-returnProcessBtn"]');
        loader(submitBtn);
        obj.find('.invalid-feedback').remove();
        obj.find('input, textarea').removeClass('is-invalid');
        $('.YK-commonErrors').html('');
        let returnItems = [];
        let returnQty = 0;
        let selectReason = '';
        let comment = $('.YK-comment').val();
        let shipping = 1;
        let maxQty = 0;
        let selectedQty = 0;
        $('.YK-productListing').each(function() {
            if ($(this).hasClass('YK-CaneledProduct')) {
                return;
            }
            maxQty += parseFloat($(this).find('.YK-qty').attr('max'));
            selectReason = $(this).find('.YK-selectReason').val();
            if ($(this).find('.YK-qty').val() != 0) {
                returnItems.push({ 'id': $(this).find('input').data('id'), 'qty': $(this).find('.YK-qty').val(), 'reason': selectReason });
                selectedQty += parseFloat($(this).find('.YK-qty').val());
            }
            returnQty += parseInt($(this).find('.YK-qty').val());
        });
        if (returnQty == 0) {
            toastr.error('Please enter product qty');
            return false;
        }

        if (maxQty != selectedQty) {
            shipping = 0;
        }
        let commentdata = obj.serializeArray();
        commentdata.push({ name: 'items', value: JSON.stringify(returnItems) });
        commentdata.push({ name: 'qty', value: returnQty });
        commentdata.push({ name: 'comment', value: comment });
        commentdata.push({ name: 'order-id', value: orderId });
        commentdata.push({ name: 'type', value: reasonType });
        commentdata.push({ name: 'shipping', value: shipping });
        $.post(baseUrl + '/user/order/return-items', commentdata, function(response) {
            if (response.status == true) {
                loader(submitBtn, true);
                toastr.success('Success', response.message);
                window.location.replace(baseUrl + '/user/order/cancel/summary/' + orderId);
            }
        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            if (errors['qty']) {
                $('.YK-commonErrors').html(errors['qty']);
            }
            validateErrors(errors, obj);
        });
    }

    quickViewProduct = function(id) {
        $.get(baseUrl + '/product/' + id, function(response) {
            if (response.status == true) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show");
            }
        })
    }
    openDeletePopup = function(id, type) {
        $.get(baseUrl + '/delete-popup/' + id + '/' + type, function(response) {
            if (response.status == true) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show");
            }
        });
    }
    deleteData = function(id, type) {
        switch (type) {
            case "cardDelete":
                deleteCard(id);
                break;
            case "addressDelete":
                deleteAddress(id);
                break;
            case "gdprdataDelete":
                deleteAddress(id);
                break;
        }
    }
    deleteCard = function(id) {
        NProgress.start();
        $('#dataModal').modal("hide");
        $.ajax({
            url: baseUrl + '/user/card/delete/' + id,
            type: 'DELETE',
            success: function(response) {
                NProgress.done();
                if (response.status == true) {
                    toastr.success(response.message);
                    $('.YK-savedCardsHtml').html(response.data);
                    $('[data-toggle="tooltip"]').tooltip();
                } else {
                    toastr.error(res.message);
                }
            }
        });
    }
    $(document).on('click', '.YK-showAddCardForm', function() {
        NProgress.start();
        $.get(baseUrl + '/user/savecard', function(response) {
            $(".YK-savedCardsHtml").html(response.data);
            $('[data-toggle="tooltip"]').tooltip();
            setCardFormValidation();
            setCardFormValidationTrigger();
            NProgress.done();
            floatingFormFix();
            creditCardValidate();
        });
    });
    $(document).on('click', '.YK-savedCardsCancel', function() {
        NProgress.start();
        $.get(baseUrl + '/user/cards-ajax', function(response) {
            $(".YK-savedCardsHtml").html(response.data);
            NProgress.done();
            $('[data-toggle="tooltip"]').tooltip();
        });
    });
    creditCardValidate = function() {
        $('#YK-saveCards #number').validateCreditCard(function(result) {
            if (result.length_valid && result.luhn_valid) {
                var cardType = result.card_type.name.toLowerCase();
                var cardUrl = $('#YK-validateCardType').data('url');
                console.log(cardType);
                if (cardType == 'visa' || cardType == 'mastercard' || cardType == 'amex' || cardType == 'discover') {
                    $('#YK-validateCardType svg use').attr('xlink:href', cardUrl + cardType);
                    $('#YK-validateCardType svg use').attr('href', cardUrl + cardType);
                } else {
                    $('#YK-validateCardType svg use').attr('xlink:href', cardUrl + 'cc-card');
                    $('#YK-validateCardType svg use').attr('href', cardUrl + 'cc-card');
                }
                // repeat for rest of card types
            } else {
                // just print an error
            }
        });
    }
    saveCard = function() {
        let obj = $('#YK-saveCards');
        obj.find('.invalid-feedback').remove();
        obj.find('input').removeClass('is-invalid');
        let submitBtn = obj.find('button[name="saveCardBtn"]');
        loader(submitBtn);
        let formdata = obj.serializeArray();
        $.post(baseUrl + '/user/savecard', formdata, function(response) {
            if (response.status == true) {
                toastr.success(response.message);
                $(".YK-savedCardsHtml").html(response.data);
                $('[data-toggle="tooltip"]').tooltip();
            } else {
                loader(submitBtn, true);
                toastr.error(response.message);
            }
        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    defaultCard = function(cardId, event) {
        event.disabled = true;
        NProgress.start();
        if (event.checked == false) {
            return;
        }
        let formdata = { cardId: cardId };
        $.post(baseUrl + '/user/defaultcard', formdata, function(response) {
            NProgress.done();
            if (response.status == true) {
                toastr.success(response.message);
                $('[data-toggle="tooltip"]').tooltip('dispose');
                $('.YK-savedCardsHtml').html(response.data);
                $('[data-toggle="tooltip"]').tooltip();
            } else if (response.status == false) {
                event.disabled = false;
                toastr.error('Something went wrong. Please try again.');
            }
        });
    }
    $(document).on('click', '.YK-checkLogin', function(e) {
        e.preventDefault();
        $.get(baseUrl + '/user/checklogin', function(response) {
            if (response.status == false) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show");
                setTimeout(function() { floatingFormFix(); }, 200);
            }
        });
    });
    sendReferralCode = function() {
        let obj = $('#YK-shareAndEarnForm');
        let submitBtn = obj.find('button[name="referralBtn"]');
        let formdata = obj.serializeArray();
        loader(submitBtn);
        $.post(baseUrl + '/user/send-referral', formdata, function(response) {
            $("#dataModal").empty();
            $("#dataModal").html(response.data);
            $('#dataModal').modal("show");
            setTimeout(() => {
                window.location.reload();
            }, 2000);
        });
    }
    saveReferralCode = function(element) {
        let obj = $(element);
        let code = obj.attr('data-code');
        let formData = {
            'ser_code': code
        }
        $.post(baseUrl + '/user/save-referral-code', formData, function(response) {
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
        });
    }
    generateRandomString = function(len) {
        if (typeof len == 'undefined') {
            len = 10;
        }
        let text = ""
        let chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890abcdefghijklmnopqrstuvwxyz"
        for (let i = 0; i < len; i++) {
            text += chars.charAt(Math.floor(Math.random() * chars.length))
        }
        return text
    }
    $(".js-fourColumn-slider").slick({
        slidesToShow: 6,
        slidesToScroll: 1,
        autoplay: false,
        arrows: true,
        dots: false,
        rtl: rtlValue,
        autoplaySpeed: 2000,
        responsive: [{
                breakpoint: 1030,
                settings: {
                    slidesToShow: 3,
                    dots: false,
                    arrows: false,
                }
            },
            {
                breakpoint: 800,
                settings: {
                    slidesToShow: 3,
                    arrows: false,
                    dots: false,

                }
            },
            {
                breakpoint: 480,
                settings: {
                    slidesToShow: 2,
                    arrows: false,
                    dots: false,

                }
            }

        ]
    });
    /*loader = function(obj, removeLoader = false) {
        if (removeLoader == false) {
            obj.attr("disabled", "disabled");
            obj.addClass("gb-is-loading");
        } else {
            obj.removeAttr("disabled");
            obj.removeClass('gb-is-loading');
        }
    }*/
    saveLocalization = function() {

            let obj = $('#YK-localizationForm');
            obj.find('.invalid-feedback').remove();
            obj.find('select').removeClass('is-invalid');
            let submitBtn = obj.find('button[name="saveLocalizationBtn"]');
            loader(submitBtn);
            $.post(baseUrl + '/user/localization', obj.find('select, input').serializeArray(), function(response) {
                loader(submitBtn, true);
                if (response.status == true) {
                    toastr.success(response.message);
                    window.location.reload();
                } else {
                    toastr.error(response.message);
                }
            }).fail(function(response) {
                loader(submitBtn, true);
                let errors = response.responseJSON.errors;
                validateErrors(errors, obj);
            });
        },
        setDefaultBillingAddress = function(el, id) {
            NProgress.start();
            let formData = {
                'addr_id': id,
                'type': 'defaultDeliveryAddress',
                'addr_billing_default': $(el).is(":checked")
            }
            $.post(baseUrl + '/user/update-address-status', formData, function(response) {
                NProgress.done();
                if (response.status == false) {
                    toastr.error(response.message);
                    return;
                }
                $('[data-toggle="tooltip"]').tooltip('dispose');
                $("#YK-Address-list").empty();
                $("#YK-Address-list").html(response.data);
                $('[data-toggle="tooltip"]').tooltip();
                toastr.success(response.message);
            });
        }
    setDefaultShippingAddress = function(el, id) {
        NProgress.start();
        let formData = {
            'addr_id': id,
            'type': 'defaultShippingAddress',
            'addr_shipping_default': $(el).is(":checked")
        }
        $.post(baseUrl + '/user/update-address-status', formData, function(response) {
            NProgress.done();
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            $('[data-toggle="tooltip"]').tooltip('dispose');
            $("#YK-Address-list").empty();
            $("#YK-Address-list").html(response.data);
            $('[data-toggle="tooltip"]').tooltip();
            toastr.success(response.message);
        });
    }
    AddressForm = function() {
        NProgress.start();
        $.get(baseUrl + '/user/add-address', function(response) {
            NProgress.done();
            $("#YK-Address-list").html(response.html);
            $('[data-toggle="tooltip"]').tooltip();
            setAddressFormValidation();
            setAddressFormTrigger();
            floatingFormFix();
        });
    }
    editAddress = function(id) {
        NProgress.start();
        $.get(baseUrl + '/user/address/' + id + '/edit', function(response) {
            NProgress.done();
            $("#YK-Address-list").empty();
            $("#YK-Address-list").html(response.html);
            $('[data-toggle="tooltip"]').tooltip();
            setAddressFormValidation();
            setAddressFormTrigger(true);
            floatingFormFix();
        });
    }
    cancelAddress = function() {
        NProgress.start();
        $.get(baseUrl + '/user/address-list', function(response) {
            NProgress.done();
            $("#YK-Address-list").html('');
            $("#YK-Address-list").html(response.data);
            $('[data-toggle="tooltip"]').tooltip();
        });
    }
    $(document).on("click", ".copyToClipboard", function() {
        let $temp = $("<input>");
        $("body").append($temp);
        let copyText = $(this).attr("data-val");
        $temp.val(copyText).select();
        document.execCommand("copy");
        $temp.remove();
        toastr.success("Copied to clipboard");
    });

    openAddOrEditReview = function(opId = 0, prodId = 0, page = '', prlId = 0) {
        window.deleteids = [];
        $.get(baseUrl + '/user/reviews/' + opId + '/' + prodId + '/' + prlId, function(response) {
            $(".YK-addOrEditReview").empty();
            if (response.status == true) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                var existingRating = $('#dataModal').find('.YK-selectRating').data('rating');
                if (existingRating != '') {
                    $('#dataModal').find('.YK-selectRating .YK-ratingItem:nth-child(' + Math.abs(existingRating - 6) + ')').addClass('active');
                }
                $('#dataModal').modal("show");
                new PerfectScrollbar($('#dataModal .modal-body')[0]);
                $('#dataModal').find('[name="submitReviewBtn"]').attr('data-page', page);
                setReviewFormValidation();
                setReviewFormTrigger();
                floatingFormFix();
            } else if (response.status == false) {
                toastr.error(response.message);
                setTimeout(() => {
                    window.location.href = baseUrl + '/user/reviews';
                }, 1000);
            }
        });
    }
    cancelReview = function() {
        $('#dataModal').modal("hide");
    }
    $(document).on("click", ".YK-selectRating .icon", function(event) {
        event.preventDefault();
        if ($(this).closest('.YK-selectRating').attr('data-readonly') == 1) {
            return false;
        }
        let selectRating = Math.abs($(this).index() - 5);
        $(this).closest('form').find('[name="preview_rating"]').val(selectRating);
        $(this).closest('.YK-selectRating').attr("data-rating", selectRating);
    });
    $(document).on('click', '.YK-loadMoreReviews', function(e) {
        getReviews(true);
    });
    $(document).on('click', '.YK-filterReviews a', function(e) {
        $('.YK-filterBy').text($(this).find('span').text());
        $('.YK-filterBy').attr('data-value', $(this).attr('data-value'));
        $('.YK-loadMoreReviews').attr('data-last-id', '');
        getReviews(false);
    });
    getReviews = function(loadMore = false) {
        NProgress.start();
        let thisObj = $('.YK-loadMoreReviews');
        let lastId = thisObj.attr('data-last-id');

        let formData = {
            'lastid': lastId,
            'filterby': $('.YK-filterBy').attr('data-value')
        };

        loader(thisObj);
        $.post(baseUrl + '/user/reviews/listing', formData, function(response) {
            loader(thisObj, true);
            NProgress.done();
            if (loadMore) {
                $('.YK-listReviews').append(response.data.data);
            } else {
                $('.YK-listReviews').html(response.data.data);
            }

            thisObj.attr('data-last-id', response.data.last_id);
            if (response.data.loadmore) {
                thisObj.closest('.YK-loadMoreFooter').show();
            } else {
                thisObj.closest('.YK-loadMoreFooter').hide();
            }
            $('.noRecordFound').remove();
            $('.YK-listingBody').show();
            if (response.data.norecords == true) {
                $('.YK-listingBody').remove();
                $('.YK-listing').append(response.data.data);
            }

        });
    }
    submitReview = function() {
        let obj = $('#YK-submitReviewForm');
        obj.find('.invalid-feedback').remove();
        obj.find('input,textarea').removeClass('is-invalid');
        let submitBtn = $('button[name="submitReviewBtn"]');
        loader(submitBtn);
        let page = submitBtn.attr("data-page");
        obj.find('[name="deleteids"]').val(window.deleteids.join(','));
        $.post(baseUrl + '/user/reviews', obj.find('textarea, input').serializeArray(), function(response) {
            loader(submitBtn, true);
            $('#dataModal').modal("hide");
            if (typeof page != 'undefined' && page != '') {
                if (page == 'productDetail') {
                    getReviews('', '1');
                } else if (page == 'orders') {
                    window.location.reload();
                }
            } else {
                $('.YK-listReviews').html(response.data);
            }

            if (response.status == true) {
                toastr.success(response.message);
            } else {
                toastr.error(response.message);
            }
        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    uploadImages = function() {
        let formData = new FormData();
        var totalfiles = document.getElementById('images').files.length;
        let imageIds = $('[name="imageIds"]').val();
        let imageIdsArr = imageIds.split(",");
        imageIdsArr = imageIdsArr.filter(item => item);
        let diff = 5 - (parseInt(imageIdsArr.length) + parseInt(totalfiles));
        if (diff < 0) {
            toastr.error('Max 5 images can be uploaded');
            return false;
        }
        formData.append("preview_id", $('[name="preview_id"]').val());
        let errorCount = 0;
        for (var index = 0; index < totalfiles; index++) {
            if (document.getElementById('images').files[index].size > 5 * 1024 * 1024) {
                errorCount = errorCount + 1;
            } else {
                formData.append("preview_image[]", document.getElementById('images').files[index]);
            }
        }
        if (errorCount > 0) {
            toastr.error('Some Images with size more than 5 Mb are skipped. Please upload images with size less than 5 MB');
        }
        if (totalfiles > errorCount) {
            let addPhotosBtn = $('.yk-addPhotoBtn');
            loader(addPhotosBtn);
            $.ajax({
                url: baseUrl + '/user/reviews/images',
                type: 'POST',
                enctype: 'multipart/form-data',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function(response) {
                    loader(addPhotosBtn, true);
                    let uploadedIds = $.parseJSON(response.data);
                    $('[name="imageIds"]').val(imageIds + ',' + uploadedIds.join(','));
                    for (var index = 0; index < uploadedIds.length; index++) {
                        var src = baseUrl + '/yokart/image/' + uploadedIds[index] + '/0/small';
                        $('ul.YK-uploadedImagesPreview').find('li:last').before(`<li class="remove-able"> <img src="` + src + `" alt="">
                        <button type="button" class="remove YK-removeReviewImage" data-id="` + uploadedIds[index] + `"><i class="fas fa-times"></i></button>
                    </li>`);
                    }
                }
            });
        }
    }
    window.deleteids = [];
    $(document).on('click', '.YK-removeReviewImage', function() {
        let thisObj = $(this);
        let imageId = thisObj.attr('data-id');
        let previewid = thisObj.attr('data-previewid');
        if (previewid != '') {
            window.deleteids.push(imageId);
            thisObj.closest('li').remove();
        } else {
            $.ajax({
                url: baseUrl + '/user/reviews/images/' + imageId,
                type: 'DELETE',
                success: function() {
                    let imageIds = $('[name="imageIds"]').val();
                    let imageIdsArr = imageIds.split(",");
                    var index = imageIdsArr.indexOf(imageId.toString());
                    if (index !== -1) imageIdsArr.splice(index, 1);
                    imageIdsArr = imageIdsArr.filter(function(v) { return v !== '' });
                    $('[name="imageIds"]').val(imageIdsArr.join(','));
                    thisObj.closest('li').remove();
                }
            });
        }
    });

    $(document).on('click', '.YK-helpful', function(e) {
        /* review helpful */
        let previewId = $(this).attr('data-id');
        var thisObj = $(this);
        $.ajax({
            url: baseUrl + '/product-reviews/helpful',
            type: "post",
            data: {
                id: previewId
            },
            success: function(res) {
                if (res.status == false && res.message != '') {
                    toastr.error(res.message);
                    return;
                }
                if (res.status == false && res.message == '') {
                    $("#dataModal").empty();
                    $("#dataModal").html(res.data);
                    $('#dataModal').modal("show");
                    setTimeout(function() { floatingFormFix(); }, 200);
                }
                if (res.status == true) {
                    thisObj.parent().html(res.data);
                }
            }
        });
    });
    $(document).on('click', '.YK-nothelpful', function(e) {
        /* review not helpful */
        let previewId = $(this).attr('data-id');
        var thisObj = $(this);
        $.ajax({
            url: baseUrl + '/product-reviews/nothelpful',
            type: "post",
            data: {
                id: previewId
            },
            success: function(res) {
                if (res.status == false && res.message != '') {
                    toastr.error(res.message);
                    return;
                }
                if (res.status == false && res.message == '') {
                    $("#dataModal").empty();
                    $("#dataModal").html(res.data);
                    $('#dataModal').modal("show");
                    setTimeout(function() { floatingFormFix(); }, 200);
                }
                if (res.status == true) {
                    thisObj.parent().html(res.data);
                }
            }
        });
    });

    $(document).on('click', '.YK-reviewErrorPopup', function() {
        $('#modalReviewError').modal('show');
    });
    $(document).on('keyup', '.form-floating input, .form-floating textarea', function() {
        if ($(this).val().length > 0) {
            $(this).addClass('filled')
        } else {
            $(this).removeClass('filled')
        }
    });
    $(document).on('click', '.form-floating select', function() {
        if ($(this).val() != '') {
            $(this).addClass('filled')
        } else {
            $(this).removeClass('filled')
        }
    });

    floatingFormFix = function() {
        $('.form-floating').find('input, textarea, select').each(function() {
            if (($(this).val() != null && $(this).val().length > 0) || $(this).val() != '') {
                $(this).addClass('filled')
            } else {
                $(this).removeClass('filled')
            }
        });
    }
    floatingFormFix();

    // $(document).on('click', '.YK-productReviewList .YK-pagination', function (e) {
    //     e.preventDefault();
    //     paginateReviewProduct($(this).attr('href'));
    //     $('html, body').animate({
    //         scrollTop: $(".YK-productReviewList").offset().top
    //     }, 1000);
    // });
    ykMiniCart = function(close = false) {
        NProgress.start();
        $.post(baseUrl + '/cart/quick-view', function(response) {
            NProgress.done();
            $('.YK-miniCart').html(response);
        });
    }
    $('.YK-MiniCartHeader .dropdown-menu').on('click', function(e) {
        e.stopPropagation();
    });

    // paginateReviewProduct = function (pagination) {
    //     NProgress.start();
    //     $.get(pagination, function (response) {
    //         NProgress.done();
    //         $(".YK-addOrEditReview").empty();
    //         $('.YK-productReviewList').html(response.data);
    //     });
    // }
    seeReviewProduct = function() {
        NProgress.start();
        let formData = {
            'showRecords': $(".Yk-showRecords").val()
        };
        $.post(baseUrl + '/user/show-review-products', formData, function(response) {
            NProgress.done();
            $(".YK-addOrEditReview").empty();
            $('.YK-productReviewList').html(response.data);
        });
    }
    $('[data-toggle="popover"]').popover();


    getFavouriteProduct = function(loadMore = false, fiters = false) {
        NProgress.start();
        let thisObj = $('.YK-loadMoreFavourite');
        let loadId = thisObj.attr('data-last-id');
        if (fiters == true) {
            loadId = '';
        }
        let formData = {
            'sortBy': $("#YK-Sort-Name").attr('data-value'),
            'last-id': loadId
        };
        loader(thisObj);
        $.post(baseUrl + '/user/favorite', formData, function(response) {
            loader(thisObj, true);
            NProgress.done();
            if (loadMore != false) {
                $('.YK-favouriteList').append(response.data.html);
            } else {
                $('.YK-favouriteList').html(response.data.html);
            }

            thisObj.attr('data-last-id', $('.product').length);
            if ($('.product').length < response.data.total) {
                thisObj.closest('.YK-loadMoreFooter').show();
            } else {
                thisObj.closest('.YK-loadMoreFooter').hide();
            }
            $('.noRecordFound').hide();
            $('.YK-listingBody').show();
            if (response.data.total == 0) {
                $('.YK-filters').remove();
                $('.YK-listingBody').hide();
                $('.YK-listing').append(response.data.html);
            }
        });
    }
    $(document).on('click', '.YK-loadMoreFavourite', function(e) {
        getFavouriteProduct(true);
    });

    $(document).on('click', ".YK-fav-option li a", function(e) {
        $("#YK-Sort-Name").text($(this).text());
        $("#YK-Sort-Name").attr('data-value', $(this).attr('data-value'));
        getFavouriteProduct(false, true);
    });
    requestDeleteMyData = function() {
        NProgress.start();
        let submitBtn = $('button[name="YK-deleteAccountBtn"]');
        loader(submitBtn);
        $.ajax({
            url: baseUrl + '/user/requestremovegdprdata',
            type: "GET",
            success: function(res) {
                NProgress.done();
                loader(submitBtn, true);
                if (res.status == true) {
                    $("#removeUserData").empty();
                    $('#removeUserData').modal("hide");
                    toastr.success(res.message);
                    window.location.href = baseUrl;
                } else {
                    toastr.error(res.message);
                }
            }
        });
    }
    requestMyData = function() {
            NProgress.start();
            $.ajax({
                url: baseUrl + '/user/requestgdprdata',
                type: "GET",
                success: function(res) {
                    NProgress.done();
                    if (res.status == true) {
                        $("#dataModal").empty();
                        $("#dataModal").html(res.data);
                        $('#dataModal').modal("show");
                    }
                }
            });
        }
        /** Address Save */
    saveUserAddress = function() {
        let obj = $('#YK-addAddress');
        let formdata = obj.serializeArray();
        let submitBtn = obj.find('button[name="YK-saveaddress"]');
        loader(submitBtn);
        $.post(baseUrl + '/user/add-address', formdata, function(response) {
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            toastr.success(response.message);
            $("#YK-Address-list").empty();
            $("#YK-Address-list").html(response.data);
            $('[data-toggle="tooltip"]').tooltip();
        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }

    updateUserAddress = function() {
        let obj = $('#YK-addAddress');
        let submitBtn = obj.find('button[name="YK-updateaddress"]');
        loader(submitBtn);
        let formdata = obj.serializeArray();
        $.post(baseUrl + '/user/update-address', formdata, function(response) {
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            toastr.success(response.message);
            $("#YK-Address-list").empty();
            $("#YK-Address-list").html(response.data);
            $('[data-toggle="tooltip"]').tooltip();
        }).fail(function(response) {
            loader(submitBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    getStates = function() {
        $('.YK-state_id').html('');
        let country_id = $('.YK-country_id').val();
        $.post(baseUrl + '/checkout/get-states', {
            'country-id': country_id
        }, function(response) {
            Object.keys(response.data).forEach(key => {
                $('.YK-state_id').append(new Option(response.data[key], key));
            });
        });
    }



    getRewardPointsListing = function(loadData = false) {
        let thisObj = $('.YK-loadMoreRewardPoints');
        let loadId = thisObj.attr('data-last-id');
        let formData = {
            'lastid': loadId,
            'filterby': $('.YK-filterBy').attr('data-value')
        };
        NProgress.start();
        loader(thisObj);
        let rewardPointUrl = baseUrl + '/user/reward-points';
        $.post(rewardPointUrl, formData, function(response) {
            loader(thisObj, true);
            NProgress.done();
            if (parseInt(response.data.total) == 0) {
                $('.YK-notFoundTemplate').removeClass('d-none').addClass('d-flex');
                $('.YK-dataFoundTemplate').addClass('d-none');
            } else {
                $('.YK-notFoundTemplate').addClass('d-none').removeClass('d-flex');
                $('.YK-dataFoundTemplate').removeClass('d-none');
            }
            if (loadData == false) {
                $('.YK-rewardPointsTimeline').html(response.data.html);
            } else {
                $('.YK-rewardPointsTimeline').append(response.data.html);
            }
            thisObj.attr('data-last-id', response.data.id);
            if ($('.YK-rewardPointsTimeline li.YK-uniqueRecord').length != response.data.total) {
                thisObj.closest('.YK-rewardPointsFooter').show();
            } else {
                thisObj.closest('.YK-rewardPointsFooter').hide();
            }
        });
    }

    $(document).on('click', '.YK-loadMoreRewardPoints', function(e) {
        getRewardPointsListing(true);
    });

    $(document).on('click', '.YK-filterRewardPoints a', function(e) {
        $('.YK-filterBy').text($(this).find('span').text());
        $('.YK-filterBy').attr('data-value', $(this).attr('data-value'));
        $('.YK-loadMoreRewardPoints').attr('data-last-id', '');
        getRewardPointsListing(false);
    });

    $(document).on("keyup", "#askQuestion input[type='text'], #askQuestion textarea", function() {
        if ($("#subject").val() == '' || $("#description").val() == '') {
            $("button[name='submitQuestionBtn']").attr("disabled", true);
        } else {
            $("button[name='submitQuestionBtn']").attr("disabled", false);
        }
    });
    $(document).on("click", ".YK-loadMoreCoupons", function() {
        getDiscountCoupons(true);
    });

    getDiscountCoupons = function(loadMore = false) {
        NProgress.start();
        let thisObj = $('.YK-loadMoreCoupons');
        let lastId = thisObj.attr('data-last-id');
        let formData = {
            'lastid': lastId
        };
        loader(thisObj);
        $.post(baseUrl + '/user/coupons', formData, function(response) {
            loader(thisObj, true);
            NProgress.done();
            if (loadMore) {
                $('.YK-list-coupons').append(response.data.data);
            } else {
                $('.YK-list-coupons').html(response.data.data);
            }

            thisObj.attr('data-last-id', response.data.last_id);
            if (response.data.loadmore) {
                thisObj.closest('.YK-loadMoreFooter').show();
            } else {
                thisObj.closest('.YK-loadMoreFooter').hide();
            }

            $('.YK-listingBody').show();
            if (response.data.norecords == true) {
                $('.YK-loadMoreFooter').remove();
                $('.YK-listingBody').remove();
                $('.YK-listing').append(response.data.data);
            }
        });
    }

    $(document).on("click", ".YK-toggleOrderRewardPoints", function() {
        $(this).closest('.YK-uniqueRecord').find('ul.YK-orderRewardPoints').slideToggle('slow');
        if ($(this).hasClass('fas fa-angle-down')) {
            $(this).removeClass('fas fa-angle-down').addClass('fas fa-angle-up');
        } else {
            $(this).removeClass('fas fa-angle-up').addClass('fas fa-angle-down');
        }
    });

    $(document).on("click", ".YK-loadMoreInvites", function() {
        getReferralInvites(true);
    });

    getReferralInvites = function(loadMore = false) {
        NProgress.start();
        let thisObj = $('.YK-loadMoreInvites');
        let lastId = thisObj.attr('data-last-id');
        let formData = {
            'lastid': lastId
        };
        loader(thisObj);
        $.post(baseUrl + '/user/share-earn/ajax', formData, function(response) {
            loader(thisObj, true);
            NProgress.done();
            if (loadMore) {
                $('.YK-referralInvites').append(response.data.data);
            } else {
                $('.YK-referralInvites').html(response.data.data);
            }

            thisObj.attr('data-last-id', response.data.last_id);
            if (response.data.loadmore) {
                thisObj.closest('.YK-loadMoreFooter').show();
            } else {
                thisObj.closest('.YK-loadMoreFooter').hide();
            }
        });
    }
})();
(function () {
    var currentRequest = null;
    cartUpdate = function (event, id, qty) {
        $.post(baseUrl + '/cart/update', {
            'cartId': id,
            'qty': qty
        }, function (response) {
            if (response.status == false) {
                event.val(response.data);
                toastr.error(response.message);
                return false;
            }
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });
        });
    };
    cartItemRemove = function (event, id) {
        NProgress.start();
        $.post(baseUrl + '/cart/item-remove', {
            'id': id,
        }, function (response) {
            Object.keys(response.data).forEach(key => {
                if (key == 'shipping' || key == 'pickup') {
                    if (response.data[key] == true) {
                        $('.YK-' + key).prop("disabled", false);
                        $('.YK-' + key).next('label').removeClass('disabled');
                    } else {
                        $('.YK-' + key).next('label').addClass('disabled');
                        $('.YK-' + key).prop("disabled", true);
                    }

                    return;
                }
                $('.YK-' + key).html(response.data[key]);
                if (response.data.cartItems == 0) {
                    window.location.reload();
                }
            });
            NProgress.done();
            $(event).closest('.YK-cartloop').remove();
        });
    };
    moveToCart = function (event, id) {
        NProgress.start();
        let shipType = $('input[name="shippingType"]:checked').val();
        $.post(baseUrl + '/product/move-to-cart', {
            'id': id,
            'ship-type': shipType
        }, function (response) {
            if (response.status == false) {
                toastr.error(response.message);
                NProgress.done();
                return false;
            }
            toastr.success(response.message);
            if ($(".YK-cartProducts ul li").length == 0) {
                NProgress.done();
                $(event).closest('.YK-cartloop').remove();
                window.location.reload();
            }
            Object.keys(response.data).forEach(key => {
                if (key == 'shipping' || key == 'pickup') {
                    if (response.data[key] == true) {
                        $('.YK-' + key).prop("disabled", false);
                        $('.YK-' + key).next('label').removeClass('disabled');
                    } else {
                        $('.YK-' + key).next('label').addClass('disabled');
                        $('.YK-' + key).prop("disabled", true);
                    }

                    return;
                }
                $('.YK-' + key).html(response.data[key]);
            });
            NProgress.done();
            $(event).closest('.YK-cartloop').remove();
        });
    };

    switchShipping = function (shipType = '') {
        if (shipType == "") {
            shipType = $('input[name="shippingType"]:checked').val();
        }
        NProgress.start();
        $.post(baseUrl + '/cart/shippingUpdate/' + shipType, function (response) {
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });
            $("input[name=shippingType][value='" + shipType + "']").prop("checked", true);
            NProgress.done();

        });
    }
    savedItemRemove = function (event, id) {
        $.post(baseUrl + '/saved/product/remove', {
            'id': id,
        }, function (response) {
            $(event).closest('.YK-cartloop').remove();
            if ($(".YK-savedLater li").length == 0) {
                window.location.reload();
            }
        });
    };
    removeCoupon = function (pageType) {
        let formData = {
            'page-type': pageType
        };
        $.post(baseUrl + '/cart/coupon-remove', formData, function (response) {
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });
        });
    };
    increaseQty = function (event, cartid = '') {
        let qtyobj = $(event).closest('.YK-quantity').find('.YK-qty');
        let decobj = $(event).closest('.YK-quantity').find('.decrease');
        let qtyVal = qtyobj.val();
        if ($(decobj).hasClass('disabled')) {
            $(decobj).removeClass("disabled");
        }
        if (qtyVal >= parseInt(qtyobj.attr('max'))) {
            return false;
        };
        let newVal = parseInt(qtyVal) + 1;
        if (newVal == parseInt(qtyobj.attr('max'))) {
            $(event).addClass("disabled");
        }
        qtyobj.val(newVal);
        if (cartid != '') {
            cartUpdate(qtyobj, cartid, newVal);
        }
    }

    decreaseQty = function (event, cartid = '') {
        let qtyobj = $(event).closest('.YK-quantity').find('.YK-qty');
        let incobj = $(event).closest('.YK-quantity').find('.increase');
        let qtyVal = qtyobj.val();
        if ($(incobj).hasClass('disabled')) {
            $(incobj).removeClass("disabled");
        }
        if (qtyVal <= parseInt(qtyobj.attr('min'))) {
            return false;
        };
        let newVal = parseInt(qtyVal) - 1;
        if (newVal == parseInt(qtyobj.attr('min'))) {
            $(event).addClass("disabled");
        }
        qtyobj.val(newVal);
        if (cartid != '') {
            cartUpdate(qtyobj, cartid, newVal);
        }
    }
    removeReward = function () {

        $.post(baseUrl + '/checkout/remove-reward-points', function (response) {
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            $("#YK-rewardPoints").show();
            $('input[name="points"]').val('');
            $('.YK-PaymentMethod').show();
            $('.nav-payments').show();
            $('.earn-points').show();
            $('#YK-paymentGateway').val("Stripe");
            $('.yk-yayBlock').hide();
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });
        })


    }

    addTocart = function (id, event = '', listing = true, fav = 0, prodOptionCode = 0) {
        
        let redirect = false;
        let generateVar = false;
        let formData = {
            'prodId': id,
            'optionCode': prodOptionCode
        };

        let submitBtn = $('button[name="YK-addToCartBtn"]');
        loader(submitBtn);
        if (event) {
            let shippingType = $("input[name='deliveryType']:checked").val();
            let qty = $(event).closest('.js-add-to-cartloop').find('.YK-qty').val();
            if (qty == '') {
                qty = 1;
            }
            Object.assign(formData, {
                'qty': qty,
                'shippingType': shippingType,
            });
            generateVar = true;
        }
        if (listing == false) {
            redirect = true;
        }
        Object.assign(formData, {
            'generateVar': generateVar,
        });
        if (fav == 1) {
            updateFavourite(event, id, varientCode, fav);
        }
        $.post(baseUrl + '/product/add-to-cart', formData, function (response) {
            NProgress.done();

            if (response.status == false) {
                toastr.error('Errors', response.message);
                loader(submitBtn, true);
                return false;
            }
            events.addToCart({
                content_name: response.data.currentItem.content_name,
                currency: response.data.currentItem.currency,
                value: response.data.currentItem.value
            });
            if (redirect == true) {
                setTimeout(function () {
                    window.location.replace(baseUrl + '/cart');
                }, 1000);
            }else{
                $('.YK-shoppingCart').click();
       
            }
            loader(submitBtn, true);
            toastr.success(response.message);
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });
        });
    };

    varifyShipping = function (productId) {
        let obj = $('#YK-zipcode');
        obj.find('input').removeClass('is-invalid');
        obj.find('.invalid-feedback').remove();

        let varientCode = [];
        if ($(".YK-varient input[type='radio']").length != 0) {
            varientCode.push(productId);
            $(".YK-varient input[type='radio']:checked").each(function () {
                varientCode.push($(this).val());
            });
        }
        let formData = obj.serializeArray();
        formData.push({
            name: 'prod-id',
            value: productId
        }, {
            name: 'varient-code',
            value: varientCode
        });
        $.post(baseUrl + '/product/validate-shipping', formData, function (response) {
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            $('.YK-addTocartHtml').html(response.data.addToCartHtml);

        }).fail(function (response) {
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    };
    getTimeSlots = function (date, address) {

        $.post(baseUrl + '/checkout/pickup-time-slots', {
            'date': date,
            'addrerss': address
        }, function (response) {
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });
        });
    };
    addNewAddress = function (event) {
        if ($('.YK-oldAddress').hasClass('active')) {
            $('.YK-newAddress').show();
            $('.YK-oldAddress').removeClass('active');
            $('.YK-oldAddress').hide();
            $(event).find('.YK-addTxt').html($(event).data('old'));
        } else {
            $('.YK-newAddress').hide();
            $('.YK-oldAddress').addClass('active');
            $('.YK-oldAddress').show();
            $(event).find('.YK-addTxt').html($(event).data('new'));
        }

    };
    setPickupAddress = function (id) {
        let addressobj = $('input[name="pickupValues"]:checked');
        let addressDay = $('input[name="pickupDays"]:checked');
        let addressTime = $('input[name="pickupTime"]:checked');
        let selectedDate = $('#selectedDate').val();
        let address = addressobj.closest('li').find('.YK-address-detail').html();
        $('.YK-pickupAddress').html(address);
        $.post(baseUrl + '/checkout/set-pickup-address', {
            'address-id': addressobj.val(),
            'date': selectedDate,
            'day-id': addressDay.val(),
            'time': addressTime.val()
        }, function (response) {
            $("#dataModal").empty();
            $('#dataModal').modal("hide");
        });
    };
    $('a.askquestion').on('click mousedown mouseup', function () {
        $(this).trigger("mouseleave");
    });
    askQuestions = function (id, code, event = '') {
        NProgress.start();
        $.get(baseUrl + '/product/' + id + '/'+code+'/ask-questions', function (response) {
            NProgress.done();
            if (response.status == true) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show"); 
                setTimeout(function () {
                    floatingFormFix();
                }, 200); 
            }
        });
    };
    updateFavourite = function (event = '', id, code = '', fav = 0) {
        if (fav == 1) {
            $(event).closest('.YK-productListing').remove();
        }
        NProgress.start();
        $.post(baseUrl + '/product/favourite', {
            'id': id,
            'code': code
        }, function (response) {
            NProgress.done();
            if (response.status == true) {
                if ($(event).closest('button').hasClass('active')) {
                    $(event).closest('button').removeClass('active');
                } else {
                    $(event).closest('button').addClass('active');
                    events.addToWishList({
                        content_name: response.data.product.prod_name,
                        currency: response.data.product.currency,
                        value: response.data.product.prod_price
                    });
                }
                if ($('.YK-favAjaxlist .YK-favouriteList').length) {
                    if ($('.YK-favouriteList .YK-productListing').length == 0) {
                        $('.YK-listingBody').remove();
                        $('.YK-favAjaxlist .noRecordFound').show();
                    }
                }
            }
            if (response.status == false) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show");
                setTimeout(function () {
                    floatingFormFix();
                }, 200);
            }
        })
    };
    savedForLater = function (event, id, cartId = 0, code = '') {
        NProgress.start();
        $.post(baseUrl + '/product/saved-for-later  ', {
            'id': id,
            'code': code
        }, function (response) {
            if (response.status == true) {
                if (cartId != 0) {
                    cartItemRemove(event, cartId);
                }

                toastr.success(response.message);
                Object.keys(response.data).forEach(key => {
                    $('.YK-' + key).html(response.data[key]);
                });
                NProgress.done();
                $(event).closest('.YK-cartloop').remove();
                if ($('.YK-tempProducts').find('.YK-cartloop').length == 0) {
                    $('.YK-tempProducts').html('');
                }
            }
            if (response.status == false) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show");
                setTimeout(function () {
                    floatingFormFix();
                }, 200);
                NProgress.done();
            }
        })
    };
    deleteTempProducts = function () {
        NProgress.start();
        $.post(baseUrl + '/error/products/remove/', function (response) {
            toastr.success(response.message);
            $('.YK-tempProducts').html('');
            NProgress.done();
        });
    };
    giftItemMessage = function (event, id) {

        let obj = $(event).closest('li').find('.YK-GiftItem');
        if (obj.hasClass('active')) {
            obj.removeClass('active');
            $('#YK-cartId').val(id);
            updateGiftItem(false);
        } else {
            $.get(baseUrl + '/cart/gift-messages/' + id, function (response) {
                $("#dataModal").empty();
                $("#dataModal").html(response);
                $('#dataModal').modal("show");
            });
        }


    };
    updateGiftItem = function (validate = true) {
        let obj = $('#Yk-GiftWrap-From');
        obj.find('input').removeClass('is-invalid');
        obj.find('.invalid-feedback').remove();

        let formData = obj.serializeArray();
        $.post(baseUrl + '/cart/gift-items/' + validate, formData, function (response) {
            if (response.status == true) {
                $('#dataModal').modal("hide");
                Object.keys(response.data).forEach(key => {
                    $('.YK-' + key).html(response.data[key]);
                });
                obj.find("input[type=text], textarea").val("");
                if (validate == true) {
                    $('#YK-GiftItem-' + $('#YK-cartId').val().split('|').join('-')).addClass('active');

                }
            }
        }).fail(function (response) {
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    };

    getFilters = function (filterType = '', filterValue = '', disableTags = '') {
        let searchKeyword = $('input[name="s"]').val();
        let filters = $('#YK-filtersForm').serializeArray();
        filters.push({
            name: 'search-items',
            value: searchKeyword
        });
        if (filterType && filterValue) {
            filters.push({
                name: filterType,
                value: filterValue
            }, {
                name: "searchedBy",
                value: disableTags
            });
        }
        $.post(baseUrl + '/product/filters', filters, function (response) {
            $('.YK-sidebar').html(response);
        });
    };


    filterProducts = function ($event = '', filter = false, pagination = '', optionType = '') {
        let searchKeyword = $('input[name="s"]').val();

        if ($event && filter == false) {
            $($event).closest('li.YK-varient').toggleClass('is--active');
        }
        var searchedId = 0;
        var lastFilter = '';
        if ($event && filter == true) {
            searchedId = $($event).attr('data-id');
            if ($($event).prop("checked") == false) {
                lastFilter = $($event).attr('data-type');
                if (lastFilter == "brands") {

                    $('input[name="brands[' + $($event).val() + ']"]').prop("checked", false);
                } else {
                    $('input[id="option-' + $($event).attr('data-title') + '"').prop("checked", false);
                }

            }
        }

        if (optionType) {
            lastFilter = optionType;
        }
        let rangeValue = '';
        if (parseInt($('input[name="priceFilterMinValue"]').val()) != $('input[name="priceFilterMinValue"]').attr('data-defaultvalue') || parseInt($('input[name="priceFilterMaxValue"]').val()) != $('input[name="priceFilterMaxValue"]').attr('data-defaultvalue')) {
            rangeValue = [$('input[name="priceFilterMinValue"]').val(), $('input[name="priceFilterMaxValue"]').val()];
        }

        let postUrl = baseUrl + '/products';
        if (pagination != "") {
            postUrl = pagination;
        }

        let filters = $('#YK-filtersForm').serializeArray();


        filters.push({
            name: 'showRecords',
            value: $('.Yk-showRecords').val()
        }, {
            name: 'listview',
            value: $('.YK-listview.active').attr('data-num')
        }, {
            name: 'moreFilters',
            value: filter
        }, {
            name: 'sortBy',
            value: $('select[name="sortBy"]').val()
        }, {
            name: 'price-range',
            value: rangeValue
        }, {
            name: 'search-items',
            value: searchKeyword
        }, {
            name: 'search-id',
            value: searchedId
        }, {
            name: 'last-filters',
            value: lastFilter
        });
        if (filter == true) {
            let moreFilters = $('#YK-morefilters').serializeArray();
            filters = filters.concat(moreFilters);
        }


        currentRequest = $.ajax({
            type: 'POST',
            data: filters,
            url: postUrl,
            beforeSend: function () {
                if (currentRequest != null) {
                    currentRequest.abort();
                }
            },
            success: function (response) {
                Object.keys(response).forEach(key => {
                    $('.YK-' + key).html(response[key]);
                });

                if (productBackground == 1) {
                    $('.js-fillcolor').fillColor();
                }
            }
        });

    };
    updateQueryStringParameter = function (url, key, value) {
        let re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
        let separator = url.indexOf('?') !== -1 ? "&" : "?";
        if (url.match(re)) {
            return url.replace(re, '$1' + key + "=" + value + '$2');
        } else {
            return url + separator + key + "=" + value;
        }
    };
    $(document).on('click', '.YK-productSection .YK-pagination', function (e) {
        e.preventDefault();
        filterProducts('', '', $(this).attr('href'));
        $('html, body').animate({
            scrollTop: $(".YK-listingRightContainer").offset().top - 100
        }, 1000);
    });
    getVarient = function (varientCode) {
  
        let productId = $('.YK-productId').val();
       
        $.post(baseUrl + '/product/product-varient-price', {
            'varientCode': varientCode,
            'product-id': productId,
        }, function (response) {
            $('.YK-price').html(response.data.price);
            if (response.data.sliderHtml) {
                destroyCarousel();
                $('.YK-image-slider').html(response.data.sliderHtml);
            }
            $('.YK-addTocartHtml').html(response.data.addToCartHtml);
            if (response.data.oldprice == 0) {
                $('.YK-oldprice').html('');
            } else {
                $('.YK-oldprice').html('<del>' + response.data.oldprice + '</del>');
            }
            $('.YK-oldprice del').html(response.data.oldprice);
            window.__sharethis__.initialize();
        });
    };
    destroyCarousel = function ($event) {
        if ($('.slider-for').hasClass('slick-initialized')) {
            $('.slider-for').slick('destroy');
        }
    };
   /*$(document).on('change', '.js-selectCountry', function () {
        let thisObj = $(this).closest('.YK-checkoutForm');
        let country_id = thisObj.find('.YK-country_id').val();
        getStates("", "", country_id);
        $.post(baseUrl + '/checkout/get-states', {
            'country-id': country_id
        }, function (response) {
            $('.YK-state_id').html('');
            Object.keys(response.data).forEach(key => {
                thisObj.find('.YK-state_id').append(new Option(response.data[key], key));
            });
        });
    });*/
    
    getStates = function (type = "", digital = "", thisObj = '') {
    
        let country_id = $('.YK-country_id').val();
        if(thisObj){
            country_id = $(thisObj).val();
        }
        $.post(baseUrl + '/checkout/get-states', {
            'country-id': country_id
        }, function (response) {
            $('.YK-state_id').html('');
            Object.keys(response.data).forEach(key => {
                $('.YK-state_id').append(new Option(response.data[key], key));
            });
        });
        calculateDigitalTax('', type, digital);      
    };

    calShippingTax = function () {
        $.post(baseUrl + '/checkout/cal-shipping-tax', {
            'country-id': $('.YK-country_id').val(),
            'state-id': $('.YK-state_id').val()
        }, function (response) {
            Object.keys(response).forEach(key => {
                $('.YK-' + key).html(response[key]);
            });
        });
    };
    $(document).on('click', '.YK-timeSlots li', function () {
        $("#checkoutProceed").removeClass("disabled");
        if(!(typeof $('input[name="pickupSlot"]:checked').val() === "undefined")) {
            $("#checkoutProceed").attr("disabled", false);
        }
    });
    saveAddress = function (type) {
        let continueBtn = $('button[id="checkoutProceed"]');
        loader(continueBtn);
        let obj = $('#YK-' + type);
        obj.find('input').removeClass('is-invalid');
        $('.YK-shipping-lists').removeClass('is-invalid');
        obj.find('.invalid-feedback').remove();
        let address = obj.find('input,select').serializeArray();
        let selectedAddress = false;
        let addressForm = false;
        if ($('.YK-oldAddress').hasClass('active')) {
            selectedAddress = true;
        }
        if ($('.yk-address-form').hasClass('d-block')) {
            addressForm = true;
        }
        address.push({
            name: 'selectedAddress',
            value: selectedAddress
        }, {
            name: 'addressForm',
            value: addressForm
        })
        $.post(baseUrl + '/checkout/address/save', address, function (response) {

            loader(continueBtn, true);
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            $('input[name="edited_addr_id"]').val(response.data.addressId);
            $('input[name="selected_address_id"]').val(response.data.addressId);
            if(isDigitalProduct == "1"){
                paymentSection(response.data.addressId);
            } else {
                $("#deliveryStep").removeClass('is-active').addClass('is-active');
                $('.YK-deliveryStep').removeClass('active');
                $('.yk-agreeTerms').hide();
                $('.YK-shippingInfo').html(response.data.shippingInfo);
                $('.YK-shippingInfo').addClass('active');
                $('.YK-cartInfo').html(response.data.cartInfo);
                if (response.data.shippingCount > 0) {
                    $("#checkoutProceed").addClass("disabled");
                    $("#checkoutProceed").attr("disabled", true);
                }
            }
        }).fail(function (response) {
            loader(continueBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }
    productImages = function () {
        let varientId = $(".Yk-color-varient:checked").val();
        let productId = $('.YK-productId').val();
        $.post(baseUrl + '/product/get-images', {
            'product-id': productId,
            'varient-id': varientId,
        },
        function (response) {
            $('.YK-image-slider').html(response);
            if (productBackground == 1) {
                $('.js-fillcolor').fillColor();
            }
        });
    }

    cartSummary = function () {
        $.get(baseUrl + '/checkout/cart-summary', function (response) {
            $('.YK-cartInfo').html(response);
        });
    }
    updateShipping = function () {
        $('.YK-shippingErrors').find('.invalid-feedback').remove();
        $('.YK-shipping-lists').removeClass('is-invalid');
        let shippingRecords = [];
        $('.YK-shippings').each(function () {
            let shippingKey = $(this).find('.YK-selectedShipping').find(':selected').data('key');
            let shippingName = $(this).find('.YK-selectedShipping').find(':selected').data('name');
            let shippingVal = $(this).find('.YK-selectedShipping').val();
            if (shippingVal) {
                shippingRecords.push({
                    'name': 'shipping-attributes[' + shippingKey + '][' + shippingName + ']',
                    'value': shippingVal
                }, {
                    'name': 'shipping-val[]',
                    'value': shippingVal
                });
            }
        });

        $.post(baseUrl + '/checkout/shipping-update', shippingRecords, function (response) {
            $('.YK-cartInfo').html(response);
            $("#checkoutProceed").attr("disabled", false);
            $("#checkoutProceed").removeClass("disabled");
        });
    }
    var jsPaymentClient;
    var component;
    $.getScript('https://2pay-js.2checkout.com/v1/2pay.js', function() {  
        jsPaymentClient = new  TwoPayClient(twoCheckoutSellerId);    
        component = jsPaymentClient.components.create('card');
    });

    twoCheckoutForm = function(){
        setTimeout(() => {
            $("#YK-saveCard").html("");
            let nameDiv = '<div class="row"><div class="col-md-12"><div class="form-group form-floating__group">';
            nameDiv += '<input type="text" name="name" class="form-control form-floating__field" placeholder="" id="name">';
            nameDiv += '<label class="form-floating__label">Card Holder Name</label>';
            nameDiv += '</div></div></div>';
            $("#YK-saveCard").prepend(nameDiv);
            $('#checkoutProceed').removeAttr('disabled');
            component.mount('#YK-saveCard');
        }, 1000);        
    }     
    twoCheckoutRequest = function(orderData) {
        const billingDetails = {
            name: document.querySelector('#name').value
        };      
        jsPaymentClient.tokens.generate(component, billingDetails).then((response) => {
            orderData.push({
                name: 'token',
                value: response.token
            });
            placeOrderRequest(orderData);
        }).catch((error) => {
            console.error(error);
        });
    }
    placeOrder = async function (redirect = 0) {
        let continueBtn = $('button[id="checkoutProceed"]');
        if (redirect == 0) {
            loader(continueBtn);
        }
        let paymentType = $('#YK-paymentGateway').val();
        if (paymentType == '') {
            toastr.error('please select payment method');
            return false;
        }
        $('#YK-' + paymentType).find('input').removeClass('is-invalid');
        $('#YK-' + paymentType).find('.invalid-feedback').remove();
        let obj = $('#YK-placeOrder');
        obj.find('input,select').removeClass('is-invalid');
        obj.find('.invalid-feedback').remove();

        let orderData = obj.serializeArray();

        let selectedCards = false;
        if ($('.YK-oldCards').hasClass('active') && redirect == 0) {
            selectedCards = true;
        }
        orderData.push({
            name: 'selectedCards',
            value: selectedCards
        }, {
            name: 'redirect',
            value: redirect
        });
        if(paymentType=='TwoCheckout'){
            twoCheckoutRequest(orderData);
        }else{
            placeOrderRequest(orderData, obj);
        }                  
    }
    placeOrderRequest = function(orderData, obj=''){
        let continueBtn = $('button[id="checkoutProceed"]');
        $.post(baseUrl + '/order', orderData, function (response) {
            loader(continueBtn, true);
            events.purchase({
                currency: response.data.currency,
                value: response.data.value
            });
            if (response.status == false) {
                if (response.data.method == "redirect") {
                    window.location.href = response.data.url;
                    return;
                } else {
                    toastr.error(response.message);
                    window.location.href = response.data.url;
                    return;
                }
            }
            $("#yk-step3").removeClass('is-active').addClass('is-active');
            orderSuccessPage(response.data.orderId);
        }).fail(function (response) {
            loader(continueBtn, true);
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
            Object.keys(errors).forEach(key => {
                $('input[name="[' + key + ']"]').addClass('is-invalid');
                $('input[name="[' + key + ']').closest('div').append('<div class="invalid-feedback">' + errors[key][0] + '</div>');

            });
        });
    }
    validateErrors = function (errors, obj) {
        Object.keys(errors).forEach(key => {

            if (!obj.find('input[name="' + key + '"], textarea[name="' + key + '"]').hasClass('is-invalid')) {
                obj.find('input[name="' + key + '"], textarea[name="' + key + '"], select[name="' + key + '"]').addClass('is-invalid');
                obj.find('input[name="' + key + '"], textarea[name="' + key + '"], select[name="' + key + '"]').closest('div').append('<div class="invalid-feedback">' + errors[key][0] + '</div>');
                obj.find('.invalid-feedback').show();
            }
        });
    }
    couponApplied = function (pageType) {


        let obj = $('#YK-coupon-code');
        obj.find('input,select').removeClass('is-invalid');
        obj.find('.invalid-feedback').remove();
        let formData = {
            'page-type': pageType,
            'coupon-code': obj.find('[name="coupon-code"]').val(),
        };
        $.post(baseUrl + '/cart/coupon', formData, function (response) {
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            $('#dataModal').modal("hide");
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });
        }).fail(function (response) {
            let errors = response.responseJSON.errors;

            validateErrors(errors, obj);

        });
    }
    applyRewardPoints = function () {

        let obj = $('#YK-placeOrder');
        obj.find('input,select').removeClass('is-invalid');
        obj.find('.invalid-feedback').remove();
        $.post(baseUrl + '/checkout/apply-reward-points', {
            'points': obj.find('[name="points"]').val()
        }, function (response) {
            if (response.status == false) {
                toastr.error(response.message);
                return;
            }
            if (response.data.total == 0) {
                $('.YK-PaymentMethod').hide();
                $('.nav-payments').hide();
                $('#YK-paymentGateway').val("rewards");
                $('.yk-yayBlock').show();
            }
            if (response.data.canEarn == '0') {
                $(".earn-points").hide();
            }
            delete response.data.total;
            delete response.data.canEarn;
            $("#YK-rewardPoints").hide();
            Object.keys(response.data).forEach(key => {
                $('.YK-' + key).html(response.data[key]);
            });

            $('#checkoutProceed').prop('disabled', false);
        }).fail(function (response) {
            let errors = response.responseJSON.errors;

            validateErrors(errors, obj);

        });
    }
    getCoupons = function (pageType) {
        let formData = {
            'page-type': pageType
        };
        $.post(baseUrl + '/cart/get-coupons', formData, function (response) {
            if (response.status == true) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show");
                setApplyCouponValidation();
                setApplyCouponTrigger();
            }
        });
    };
    selectedCoupon = function () {
        $('[name="coupon-code"]').val($('[name="coupon"]:checked').val());
        $("button[name='ykApplyCoupon']").removeAttr('disabled');
    }
    billingAddress = function () {
        let billingAddress = $('input[name="billing-address"]:checked').val();
        if (billingAddress) {
            $('#YK-billingAddress').html("");
            $('#YK-billingAddress').hide();
            return false;
        }
        NProgress.start();

        $.get(baseUrl + '/checkout/get-billing-address', function (response) {
            if (response.status == true) {

                $('#YK-billingAddress').html(response.data.html);
                $('YK-cartInfo').html(response.data.cartInfo);
                $('#YK-billingAddress').show();
                floatingFormFix();
                $("#YK-billingAddress").find('input[name="addr_id"]').val(response.data.defaultAddressId);
                $("#checkoutProceed").attr("disabled", false);
                NProgress.done();
            }
        });
    }
    calculateDigitalTax = function (addressId = '', type = '', digital = false) {
        if(digital == false){
            return;
        }
        let countryId = ''; 
        let stateId = '';
        if(addressId == "" && type == ""){
            countryId = $('.YK-country_id').val();
            stateId = $('.YK-state_id').val()
        }
       
        let formData = {
            'address-id': addressId,
            'country-id': countryId,
            'state-id': stateId,
        };
        $.post(baseUrl + '/checkout/update-tax', formData,function (response) {
            if (response.status == true) {
                Object.keys(response.data).forEach(key => {
                    $('.YK-' + key).html(response.data[key]);
                });
                    
            }
        });
    }
    previousStep = function (current, previous, previousToPrevious = "") {
        let addrid = $('.YK-selectedAddress').attr('data-addrid');
        $('.YK-' + current).removeClass('active');
        $('.YK-' + current).html('');
        if (previous != "deliveryStep") {
            $('.YK-' + previous).addClass('active');
            $("#" + current).removeClass('is-active');
        }        
        
        if ($('.YK-' + previous).hasClass('active')) {
            $('#' + previous).removeClass('is-active').addClass('is-active');
        }
        if (previousToPrevious != "") {
            $('.YK-' + previousToPrevious).removeClass('active');
        }

        if ($('.yk-address-form').hasClass('d-block')) {
            $('#YK-shippingAddress').find('[name="edited_addr_id"]').val(addrid);
        }
        if (previous == "deliveryStep") {
            checkoutFirstStep();
            // editCheckoutAddress($('input[name="edited_addr_id"]').val());
            // $('.yk-agreeTerms').show();
        }
        $('#checkoutProceed').text('Continue');
        $('#checkoutProceed').removeClass('disabled');
        $('#checkoutProceed').attr('disabled', false);
    }
    addNewCard = function () {
            $.get(baseUrl + '/checkout/add-card-popup', function (response) {
                if (response.status == true) {
                    let attributeValue = $('.nav-payments').find('li a.active').attr('href');
                    let creditCardObj = $('.YK-paymentInfo .YK-PaymentMethod ' + attributeValue);
                    creditCardObj.find('.YK-oldCards').hide();
                    creditCardObj.find('.YK-oldCards').removeClass('active');
                    creditCardObj.find('.YK-addNewCardForm').html(response.data);
                    creditCardObj.find('.YK-addNewCardForm').show();
                    $('.YK-addNewCardButton').hide();
                    $('.YK-discardNewCardButton').show();
                    setCheckoutCardFormValidation();
                    setCheckoutCardFormValidationTrigger();
                } else {
                    toastr.error(response.message);
                }
            });
        },
        displayCardListing = function () {
            let creditCardObj = $('.YK-paymentInfo .YK-PaymentMethod #credit');
            creditCardObj.find('.YK-oldCards').show();
            creditCardObj.find('.YK-oldCards').addClass('active');
            creditCardObj.find('.YK-addNewCardForm').html('');
            creditCardObj.find('.YK-addNewCardForm').hide();
            $('.YK-discardNewCardButton').hide();
            $('.YK-addNewCardButton').show();
        },
        saveNewCard = function () {
            let obj = $("#YK-saveCard");
            obj.find('input').removeClass('is-invalid');
            $('.YK-shipping-lists').removeClass('is-invalid');
            obj.find('.invalid-feedback').remove();
            let card = obj.find('input').serializeArray();
            $.post(baseUrl + '/user/savecard', card, function (response) {
                if (response.status == false) {
                    toastr.error(response.message);
                    return;
                }
                $("#dataModal").empty();
                $('#dataModal').modal("hide");
                $("#step1").removeClass('is-active').addClass('is-active');
                $('.YK-deliveryStep').removeClass('active');
                $('.YK-shippingInfo').html(response.data.shippingInfo);
                $('.YK-shippingInfo').addClass('active');
                $('.YK-cartInfo').html(response.data.cartInfo);
            }).fail(function (response) {
                let errors = response.responseJSON.errors;
                validateErrors(errors, obj);
            });
        },
        paymentSection = function (id) {
            let continueBtn = $('button[id="checkoutProceed"]');
            loader(continueBtn);
            let shippings = $('.YK-shippings').find('select').serializeArray();
            let address = $('input[name="pickupValues"]:checked').val();
            let pickupSlot = $('input[name="pickupSlot"]:checked').val();
            let selectedDate = $('#selectedDate').val();

            shippings.push({
                name: 'shippings',
                value: shippings.length
            }, {
                name: 'address',
                value: id
            }, {
                name: 'shippings',
                value: shippings.length
            }, {
                name: 'shipping-address',
                value: address
            }, {
                name: 'pickupSlot',
                value: pickupSlot
            }, {
                name: 'selectedDate',
                value: selectedDate
            });

            $.post(baseUrl + '/checkout/payment-section', shippings, function (response) {
                loader(continueBtn, true);
                if (response.status == false) {
                    toastr.error(response.message);
                    return;
                }

                if(isDigitalProduct == "1"){
                    $("#deliveryStep").removeClass('is-active').addClass('is-active');
                    $('.YK-deliveryStep').removeClass('active');
                    $('.yk-agreeTerms').hide();
                }

                $("#shippingInfo").removeClass('is-active').addClass('is-active');
                $('.YK-shippingInfo').removeClass('active');

                $('.YK-paymentInfo').html(response.data.html);
                $('.YK-total').html(response.data.total);
                $('.YK-paymentInfo').addClass('active');
                $("#checkoutProceed").text("Place Order");
                $('.YK-addNewCardForm').hide();
                if (typeof $("input[name='card-id']:checked").val() == 'undefined' && $(".YK-oldAddress li").length > 0) {
                    $("input[name='addr_id']").eq(0).prop('checked', true);
                }
                if ($(".payment-card").length > 0) {
                    $("#checkoutProceed").attr('disabled', false);
                } else {
                    $("#checkoutProceed").attr('disabled', true);
                }
                if (response.data.totalPrice == 0) {
                    $('.YK-PaymentMethod').hide();
                    $('.nav-payments').hide();
                    $('#YK-paymentGateway').val("rewards");
                }
            });
        }
    cardFormValidate = function (paymentType) {
        var cardValid = 0;
        let cardNumber = $('input[name="' + paymentType + '[number]"]');

        cardNumber.validateCreditCard(function (result) {
            if (result.valid) {
                cardValid = 1;
            } else {
                cardValid = 0;
            }
        });
        let cardName = $('input[name="' + paymentType + '[name]"]');
        let expMonth = $('input[name="' + paymentType + '[exp_month]"]');
        let expYear = $('input[name="' + paymentType + '[exp_year]"]');
        let cardCvv = $('input[name="' + paymentType + '[cvv]"]');
        var currentYear = new Date().getFullYear();
        let regName = /^[a-z ,.'-]+$/i;
        let regMonth = /^01|02|03|04|05|06|07|08|09|10|11|12$/;
        let regCVV = /^[0-9]{3,3}$/;
        if (cardValid == 0) {
            cardNumber.addClass('is-invalid');
            cardNumber.closest('div').append('<div class="invalid-feedback">Card number not valid</div>');
            return false;
        } else if (!regMonth.test(expMonth.val())) {
            expMonth.addClass('is-invalid');
            expMonth.closest('div').append('<div class="invalid-feedback">Card month not valid</div>');
            return false;
        } else if (expYear.val() == '' || currentYear > expYear.val()) {
            expYear.addClass('is-invalid');
            expYear.closest('div').append('<div class="invalid-feedback">Card year not valid</div>');
            return false;
        } else if (!regCVV.test(cardCvv.val())) {
            cardCvv.addClass('is-invalid');
            cardCvv.closest('div').append('<div class="invalid-feedback">Card cvv not valid</div>');
            return false;
        } else if (!regName.test(cardName.val())) {
            cardName.addClass('is-invalid');
            cardName.closest('div').append('<div class="invalid-feedback">Card name is required</div>');
            return false;
        } else {
            return true;
        }
    }
    validateQty = function (event) {
        let obj = $(event);
        let val = parseInt(obj.val());
        if (val > obj.attr('max')) {
            $(event).val(obj.attr('max'));
            return false;
        } else if (val < obj.attr('min')) {
            $(event).val(obj.attr('min'));
            return false;
        }
    }
    orderSuccessPage = function (id) {
        window.location.replace(baseUrl + '/order/success/' + id);
    }
    $(document).ready(function () {
        $("#checkoutBtn").attr("disabled", "disabled");
    });
    removeFiltersByTags = function (type, value) {
        if (type == "option") {
            $('input[id="' + type + '-' + value + '"').prop("checked", false);
        } else {
            $('input[name="' + type + '[' + value + ']"]').prop("checked", false);
        }
        filterProducts();
    }
    removePriceFilter = function () {
        let minPriceObj = $('input[name="priceFilterMinValue"]');
        let maxPriceObj = $('input[name="priceFilterMaxValue"]');
        minPriceObj.val(minPriceObj.attr('data-defaultvalue'));
        maxPriceObj.val(maxPriceObj.attr('data-defaultvalue'));

        stepsSlider.noUiSlider.set([minPriceObj.attr('data-defaultvalue'), maxPriceObj.attr('data-defaultvalue')]);

        //
        filterProducts();
    }
    clearFilters = function () {
        $('#YK-filtersForm').find('input[type="checkbox"]').prop("checked", false);
        removePriceFilter();
    }
    loadFilters = function (type, id = 0, searchType = '') {
        let searchKeyword = $('input[name="s"]').val();

        let filters = $('#YK-filtersForm').serializeArray();

        filters.push({
            name: 'search-items',
            value: searchKeyword
        }, {
            name: 'search-id',
            value: id
        }, {
            name: 'search-type',
            value: searchType
        });
        $.post(baseUrl + '/products/filters/' + type, filters, function (response) {
            if (response.status == true) {
                $("#dataModal").empty();
                $("#dataModal").html(response.data);
                $('#dataModal').modal("show");
            } else {
                toastr.error(response.message);
            }
        });
    }
    twoCheckoutPaymentRequest = function(orderId, paymentMethod, formData) {
        const billingDetails = {
            name: document.querySelector('#name').value
        };      
        jsPaymentClient.tokens.generate(component, billingDetails).then((response) => {
            formData.push({
                name: 'token',
                value: response.token
            });
            makeOrderPaymentRequest(orderId, paymentMethod, formData);
        }).catch((error) => {
            console.error(error);
        });
    }
    makeOrderPayment = function (orderId, paymentMethod, amount) {
        let obj = $('#YK-paymentForm');
        obj.find('.invalid-feedback').remove();
        obj.find('input, textarea').removeClass('is-invalid');
        let formData = obj.serializeArray();
        formData.push({
            name: 'amount',
            value: amount
        });
        if(paymentMethod=='TwoCheckout'){
            twoCheckoutPaymentRequest(orderId, paymentMethod, formData);
        }else{
            makeOrderPaymentRequest(orderId, paymentMethod, formData, obj);    
        }    
    }
    makeOrderPaymentRequest = function(orderId, paymentMethod, formData, obj=''){
        
        $.post(baseUrl + '/make/' + paymentMethod + '/payment/' + orderId, formData, function (response) {
            if (response.status == false) {
                toastr.error(response.message);
                return false;
            }
            events.purchase({
                currency: response.data.currency,
                value: response.data.value
            });
            orderSuccessPage(response.data.orderId);
        }).fail(function (response) {
            let errors = response.responseJSON.errors;
            validateErrors(errors, obj);
        });
    }

    $(document).on('mouseenter', '.bfilter-js li', function (e) {
        e.preventDefault();
        $('.brandList-js').addClass('filter-directory_disabled');
        $('.filter-directory_list_title').addClass('filter-directory_disabled');
        $('.b-' + $(this).attr('data-item').toLowerCase()).removeClass('filter-directory_disabled');
        lbl = $(this).attr('data-item');
        $('.filter-directory_list_title').each(function () {
            txt = $(this).attr('data-item').trim().toUpperCase();
            if (txt == lbl.toUpperCase()) {
                $(this).removeClass('filter-directory_disabled');
            }
        });

        if (typeof $('.filter-directory_list_title:not(.filter-directory_disabled)').position() != 'undefined') {
            $("#YKbrandfiltersListing").stop().animate({
                scrollLeft: 0
            }, 0);
            var offset = $('.filter-directory_list_title:not(.filter-directory_disabled)').position().left;
            $("#YKbrandfiltersListing").stop().animate({
                scrollLeft: offset - 20
            }, 0);
        }
    });

    $(document).on('mouseleave', '.bfilter-js li', function () {
        $('.brandList-js').removeClass('filter-directory_disabled');
        $('.filter-directory_list_title').removeClass('filter-directory_disabled');
    });

    $(document).on('click', '.bfilter-js li', function (e) {
        e.preventDefault();
        $(".filter-directory_list").animate({
            scrollLeft: $("#" + $(this).attr('data-item').toLowerCase()).position().left
        }, 1000);
    });
    autoKeywordSearch = function (keyword) {
            keyword = keyword.toUpperCase();
            var myarray = [];
            $('.filter-directory_list li').each(function () {
                txt = $(this).text().trim().toUpperCase();
                if (txt.indexOf(keyword) > -1) {
                    caption = $(this).attr('data-caption');
                    if (typeof caption !== 'undefined') {
                        myarray.push(caption.toUpperCase());
                    }
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
            myarray = $.unique(myarray);
            $('.filter-directory_list_title').each(function () {
                txt = $(this).attr('data-item').trim().toUpperCase();
                if ($.inArray(txt, myarray) >= 0) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        },
        $(document).on('click', '.YK-PaymentGatewaySection', function (e) {
            if ($(this).find('#paycash-tab').hasClass('active')) {
                $(".yk-continueBtn").addClass("disabled");
                $(".yk-continueBtn").attr("disabled", true);
            } else {
                $(".yk-continueBtn").removeClass("disabled");
                $(".yk-continueBtn").removeAttr("disabled");
            }
        });
    requestOtp = function () {
            console.log('>>>>>', $('#YK-placeOrder').serializeArray());
            let submitBtn = $('#requestOtpBtn');
            loader(submitBtn);
            let addressId = $("input[name='address-id']").val();
            $.post(baseUrl + '/checkout/request-otp', {
                'address-id': addressId
            }, function (response) {
                loader(submitBtn, true);
                if (response.status == true) {
                    $(".YK-Request-Otp").hide();
                    $(".YK-optSentMessage").text(response.data);
                    $(".YK-Verify-Otp").show();
                    $(".YK-resendOtp").hide();
                    timeCounter(20);
                    toastr.success(response.message);
                } else {
                    toastr.error(response.message);
                }
            });
        },
        resendOtpRequest = function () {
            let submitBtn = $('#resendOtpBtn');
            loader(submitBtn);
            let addressId = $("input[name='address-id']").val();
            $.post(baseUrl + '/checkout/resent-request-otp', {
                'address-id': addressId
            }, function (response) {
                loader(submitBtn, true);
                if (response.status == true) {
                    $(".YK-Request-Otp").hide();
                    $(".YK-resendOtp").hide();
                    $(".YK-Verify-Otp").show();
                    floatingFormFix();
                    timeCounter(20);
                    toastr.success(response.message);
                } else {
                    toastr.error(response.message);
                }
            });
        },
        verifyOtp = function () {
            let submitBtn = $('#verifyOtpBtn');
            loader(submitBtn);
            let addressId = $("input[name='address-id']").val();
            let otp = $('.otp-inputs input').map(function () {
                return $(this).val();
            }).get().join('');
            $.post(baseUrl + '/checkout/verify-otp', {
                'address-id': addressId,
                'otp': otp
            }, function (response) {
                loader(submitBtn, true);
                if (response.status == true) {
                    $("#YK-cod").val(1);
                    $(".YK-orderButton").prop('disabled', false);
                    $("#verifyOtpBtn").hide();
                    $("#resendOtpBtn").hide();

                    $(".YK-Verify-Otp").addClass('d-none');
                    $(".YK-OTPSuccessMessage").text(response.message);
                    $(".YK-otpVerifiedSuccess").removeClass('d-none');

                    $("#otpValue").prop("disabled", true);
                    $(".yk-continueBtn").removeClass("disabled");
                    $(".yk-continueBtn").removeAttr("disabled");

                } else {
                    $('.otp-inputs').find('input').val('');
                    $('.otp-inputs').find('input').removeClass('filled');
                    $('.otp-inputs').find('input:first').focus();
                    toastr.error(response.message);
                }
            });
        },
        timeCounter = function (counter) {
            $('#time').text(counter);
            var interval = setInterval(function () {
                counter--;
                if (counter <= 0) {
                    clearInterval(interval);
                    $("#timer").hide();
                    $(".YK-resendOtp").show();

                    return;
                } else {
                    $('#time').text(counter);
                }
            }, 1000);
        },
        /*loader = function(obj, removeLoader = false) {
            if (removeLoader == false) {
                obj.attr("disabled", "disabled");
                //obj.addClass("spinner spinner--sm spinner--light");
                obj.addClass("gb-is-loading");
            } else {
                obj.removeAttr("disabled");
                obj.removeClass('gb-is-loading');
                //obj.removeClass('spinner spinner--sm spinner--light');
            }
        }*/
        addAddressPopup = function () {
            if ($(".yk-address-form").hasClass('d-none')) {
                $('.YK-oldAddress').removeClass('active');
                $(".yk-address-form").removeClass('d-none');
                $(".list-addresses").hide();
                $(".yk-address-form").addClass('d-block');
            }
            if ($(".yk-closeAddressPopup").hasClass('d-none')) {
                $(".yk-closeAddressPopup").removeClass('d-none');
                $(".yk-addAddressPopup").addClass('d-none');
            }
            $(".yk-address-form").find('input,select').val('');
            $(".yk-address-form").find('input[name="addr_phone_country_code"]').val(defaultCountry);
            iti.setCountry(defaultCountry);
            $('.iti__selected-flag').find('.countryCode').remove();
            setTimeout(() => {
                $('ul.iti__country-list li.iti__country#iti-item-' + defaultCountry).click();
            }, 500);

            if ($(".YK-paymentInfo").hasClass('active')) {
                $("#YK-billingAddress").find('input[name="addr_id"]').val("");
            }

            floatingFormFix();
        },
        continueCheckoutForm = function () {
            /*$('.yk-agreeTerms').hide();*/
            if ($(".YK-deliveryStep").hasClass('active')) {
                saveAddress('shippingAddress')
            } else if ($(".YK-shippingInfo").hasClass('active')) {
                paymentSection($('.YK-selectedAddress').attr('data-addrid'));
            } else if ($(".YK-paymentInfo").hasClass('active')) {
                placeOrder();
            }
        },
        editCheckoutAddress = function (addressId) {
            $.get(baseUrl + '/checkout/get-addressform/' + addressId, function (response) {
                if (response.status == true) {
                    $('.YK-oldAddress').removeClass('active');
                    $(".yk-address-form").removeClass('d-none');
                    $(".list-addresses").hide();
                    $(".yk-address-form").find('input[name="addr_first_name"]').val(response.data.addr_first_name);
                    $(".yk-address-form").find('input[name="addr_last_name"]').val(response.data.addr_last_name);
                    $(".yk-address-form").find('input[name="addr_email"]').val(response.data.addr_email);
                    $(".yk-address-form").find('input[name="edited_addr_id"]').val(response.data.addr_id);

                    if ($(".YK-paymentInfo").hasClass('active')) {
                        $("#YK-billingAddress").find('input[name="addr_id"]').val(response.data.addr_id);
                    }

                    if (response.data.phonecountry != null && response.data.addr_phone != '') {
                        let countrycode = response.data.phonecountry.country_code.toLowerCase();
                        iti.setCountry(countrycode);
                        iti.setNumber(response.data.addr_phone);
                        $("#addr_phone").val(response.data.addr_phone);
                        $('.iti__selected-flag').find('.countryCode').remove();
                        setTimeout(() => {
                            $('ul.iti__country-list li.iti__country#iti-item-' + countrycode).click();
                        }, 500);
                    }
                    $(".yk-address-form").find('input[name="addr_title"]').val(response.data.addr_title);
                    $(".yk-address-form").find('input[name="addr_address1"]').val(response.data.addr_address1);
                    $(".yk-address-form").find('input[name="addr_address2"]').val(response.data.addr_address2);
                    $(".yk-address-form").find('select[name="addr_country_id"]').val(response.data.addr_country_id);
                    $('.YK-state_id').html('');
                    Object.keys(response.data.states).forEach(key => {
                        $('.YK-state_id').append(new Option(response.data.states[key], key));
                    });

                    $(".yk-address-form").find('select[name="addr_state_id"]').val(response.data.addr_state_id);
                    $(".yk-address-form").find('input[name="addr_city"]').val(response.data.addr_city);
                    $(".yk-address-form").find('input[name="addr_postal_code"]').val(response.data.addr_postal_code);

                    $(".yk-address-form").addClass('d-block');
                    floatingFormFix();
                    if ($(".yk-closeAddressPopup").hasClass('d-none')) {
                        $(".yk-closeAddressPopup").removeClass('d-none');
                        $(".yk-addAddressPopup").addClass('d-none');
                    }
                } else {
                    toastr.error(response.message);
                }
            });
        },

        updatePaymentMethod = function (orderId) {

            $.post(baseUrl + '/order/payment-url', {
                'order_id': orderId
            }, function (response) {
                console.log(response);
                if (response.status == true) {
                    window.open(response.data.url, "_self");
                }

            });
        }

        checkoutFirstStep = function () {
            $.get(baseUrl + '/checkout/get', function (response) {
                $("#shippingInfo").removeClass('is-active');
                $("#deliveryStep").addClass('is-active');

                $('.YK-deliveryStep').html(response.data.html);
                $('.YK-deliveryStep').addClass('active');
                $('.YK-shippingInfo').removeClass('active');
                $('.YK-oldAddress').removeClass('active').addClass('active');
                let selectedAddr = $('input[name="selected_address_id"]').val();
                $("input[name=addr_id]").removeAttr('checked');
                $("input[name=addr_id][value=" + selectedAddr + "]").prop("checked", true)
                
                $('.YK-oldAddress').find('li').removeClass('selected');
                $('.YK-editAddress-' + selectedAddr).closest('li').addClass('selected');
                $('.yk-agreeTerms').show();
            });
        }

    $(document).on('click', '.YK-addressSelected', function () {
        $('.YK-addressItem').removeClass('selected');
        $('.YK-addressItem').find('.YK-actions').addClass('d-none');
        $(this).closest('.YK-addressItem').addClass('selected');
        $(this).closest('.YK-addressItem').find('.YK-actions').removeClass('d-none');
        $('input[name="selected_address_id"]').val($(this).val());
    });
    $(document).on('click', '.yk-backBtn', function () {
        let currentActive = $('.yk-stepOuter').find('.yk-step.active');
        if (currentActive.is(":first-child")) {
            window.location.href = baseUrl + '/cart';
            return false;
        } else if (currentActive.is(":nth-child(2)")) {
            let addrid = $('.YK-selectedAddress').attr('data-addrid');
            if ($('.yk-address-form').hasClass('d-block')) {
                $('#YK-shippingAddress').find('[name="edited_addr_id"]').val(addrid);
            }
        }
        if ($("#" + currentActive.prev().attr('data-step')).hasClass('is-active')) {
            $("#" + currentActive.prev().attr('data-step')).removeClass('is-active');
            $(".progress-step").removeClass('is-active');
            $("#" + currentActive.prev().attr('data-step')).addClass('is-active');
        }
        if (currentActive.prev().attr('data-step') == "deliveryStep" || currentActive.prev().attr('data-step') == "shippingInfo") {
            $("#checkoutProceed").text("Continue");
        }
        console.log(currentActive.prev().attr('data-step'));
        if (currentActive.prev().attr('data-step') == "deliveryStep") {
            checkoutFirstStep();
            // editCheckoutAddress($('input[name="edited_addr_id"]').val());
        }
        let prevElement = '';
        if (currentActive.prev().hasClass('yk-step')) {
            prevElement = currentActive.prev();
        } else {
            prevElement = currentActive.prev().prev();
        }
        if (currentActive.prev().attr('data-step') != "deliveryStep") {
            prevElement.addClass('active');
            currentActive.removeClass('active');
        }
        
        $('#checkoutProceed').removeClass('disabled');
        $('#checkoutProceed').attr('disabled', false);
    });
    $(document).on('click', '.yk-closeAddressPopup', function () {
        if ($(".yk-addAddressPopup").hasClass('d-none')) {
            $(".yk-addAddressPopup").removeClass('d-none');
            $(".yk-closeAddressPopup").addClass('d-none');
            $(".list-addresses").show();
            if ($(".yk-address-form").hasClass('d-block')) {
                $(".yk-address-form").removeClass('d-block');
                $(".yk-address-form").addClass('d-none');
            }
            $('.YK-oldAddress').addClass('active');
            $(".yk-address-form").find('input[name="addr_first_name"]').val('');
            $(".yk-address-form").find('input[name="addr_last_name"]').val('');
            $(".yk-address-form").find('input[name="addr_email"]').val('');
            $(".yk-address-form").find('input[name="addr_phone"]').val('');
            $(".yk-address-form").find('input[name="addr_title"]').val('');
            $(".yk-address-form").find('input[name="addr_address1"]').val('');
            $(".yk-address-form").find('input[name="addr_address2"]').val('');
            $(".yk-address-form").find('select[name="addr_country_id"]').val('');
            $(".yk-address-form").find('select[name="addr_state_id"]').val('');
            $(".yk-address-form").find('input[name="addr_city"]').val('');
            $(".yk-address-form").find('input[name="addr_postal_code"]').val('');
            if ($(".YK-paymentInfo").hasClass('active')) {
                $("#YK-billingAddress").find('input[name="addr_id"]').val($("#YK-billingAddress").find('input[name="addr_id"]:checked').attr("attr-val"));
            }
            floatingFormFix();
        }
    });
    
    

})();
/* 
STARTS triggers & toggles[

data-trigger => value = target element id to be opened
data-target-close => value = target element id to be closed
data-close-on-click-outside => value 

*/

$('body').on('click', '*[data-trigger]', function() {
    var targetElmId = $(this).data('trigger');
    var elmToggleClass = targetElmId + '--on';
    if ($('body').hasClass(elmToggleClass)) {
        $('body').removeClass(elmToggleClass);
    } else {
        $('body').addClass(elmToggleClass);
    }
});
$('body').on('click', '*[data-target-close]', function() {
    var targetElmId = $(this).data('target-close');
    $('body').toggleClass(targetElmId + '--on');
});

$('body').mouseup(function(event) {

    if ($(event.target).data('trigger') != '' && typeof $(event.target).data('trigger') !== typeof undefined) {
        event.preventDefault();
        return;
    }

    $('body').find('*[data-close-on-click-outside]').each(function(idx, elm) {
        var slctr = $(elm);
        if (!slctr.is(event.target) && !$.contains(slctr[0], event.target)) {
            $('body').removeClass(slctr.data('close-on-click-outside') + '--on');
        }
    });
});

/*
] ENDS triggers & toggles
*/



/* begin:tabs */
$(document).ready(function() {
    $(window).bind('hashchange', function(event) {
        var url = window.location.href.split('#')[0];
        window.history.pushState({}, document.title, url);
    });

    $('.js-tabs li a').on('click', function() {
        var tabId = $(this).attr("href")
            .replace("#", "");
        $(this).closest('section').find("li").removeClass("active");
        $(this).closest('section').find('.content-data').removeClass("active");
        $(this).closest("li").addClass("active");
        $("#" + tabId).addClass("active");
        moveToTargetDiv(this);
        return false;
    });
});

function moveToTargetDiv(liElm) {

    var out = $(liElm).parent().parent();
    var tar = $(liElm);
    var x = out.width();
    var y = tar.outerWidth(true);
    var z = tar.index();
    var q = 0;
    var m = out.find('li');

    for (var i = 0; i < z; i++) {
        q += $(m[i]).outerWidth(true) + 4;
    }

    out.animate({
        scrollLeft: Math.max(0, q)
    }, 800);
    return false;
}

/* for fixed header */

$(window).scroll(function() {
    body_height = $("#body").position();
    scroll_position = $(window).scrollTop();
    if (typeof body_height != 'undefined') {
        if (body_height.top < scroll_position)
            $("body").addClass("header-fixed");
        else
            $("body").removeClass("header-fixed");
    }
});


/*Back to Top */
var btn = $('#back-top');

$(window).scroll(function() {
    if ($(window).scrollTop() > 300) {
        btn.addClass('show');
    } else {
        btn.removeClass('show');
    }
});

btn.on('click', function(e) {
    e.preventDefault();
    $('html, body').animate({ scrollTop: 0 }, '300');
});



$(function() {
    $(document).on('click', '.YK-animatedBtn', function() {
        var thisObj = $(this);
        thisObj.addClass('active');
        setTimeout(() => {
            thisObj.removeClass('active');
            thisObj.addClass('finished');
        }, 2000);
    });
    // $('.select-fancy').niceSelect();
})
loader = function(obj, removeLoader = false) {
    if (removeLoader == false) {
        obj.attr("disabled", "disabled");
        obj.addClass("gb-is-loading");
    } else {
        obj.removeAttr("disabled");
        obj.removeClass('gb-is-loading');
    }
}
    !function(e){e(["jquery"],function(e){return function(){function t(e,t,n){return g({type:O.error,iconClass:m().iconClasses.error,message:e,optionsOverride:n,title:t})}function n(t,n){return t||(t=m()),v=e("#"+t.containerId),v.length?v:(n&&(v=d(t)),v)}function o(e,t,n){return g({type:O.info,iconClass:m().iconClasses.info,message:e,optionsOverride:n,title:t})}function s(e){C=e}function i(e,t,n){return g({type:O.success,iconClass:m().iconClasses.success,message:e,optionsOverride:n,title:t})}function a(e,t,n){return g({type:O.warning,iconClass:m().iconClasses.warning,message:e,optionsOverride:n,title:t})}function r(e,t){var o=m();v||n(o),u(e,o,t)||l(o)}function c(t){var o=m();return v||n(o),t&&0===e(":focus",t).length?void h(t):void(v.children().length&&v.remove())}function l(t){for(var n=v.children(),o=n.length-1;o>=0;o--)u(e(n[o]),t)}function u(t,n,o){var s=!(!o||!o.force)&&o.force;return!(!t||!s&&0!==e(":focus",t).length)&&(t[n.hideMethod]({duration:n.hideDuration,easing:n.hideEasing,complete:function(){h(t)}}),!0)}function d(t){return v=e("<div/>").attr("id",t.containerId).addClass(t.positionClass),v.appendTo(e(t.target)),v}function p(){return{tapToDismiss:!0,toastClass:"toast",containerId:"toast-container",debug:!1,showMethod:"fadeIn",showDuration:300,showEasing:"swing",onShown:void 0,hideMethod:"fadeOut",hideDuration:1e3,hideEasing:"swing",onHidden:void 0,closeMethod:!1,closeDuration:!1,closeEasing:!1,closeOnHover:!0,extendedTimeOut:1e3,iconClasses:{error:"toast-error",info:"toast-info",success:"toast-success",warning:"toast-warning"},iconClass:"toast-info",positionClass:"toast-top-right",timeOut:5e3,titleClass:"toast-title",messageClass:"toast-message",escapeHtml:!1,target:"body",closeHtml:'<button type="button">&times;</button>',closeClass:"toast-close-button",newestOnTop:!0,preventDuplicates:!1,progressBar:!1,progressClass:"toast-progress",rtl:!1}}function f(e){C&&C(e)}function g(t){function o(e){return null==e&&(e=""),e.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function s(){c(),u(),d(),p(),g(),C(),l(),i()}function i(){var e="";switch(t.iconClass){case"toast-success":case"toast-info":e="polite";break;default:e="assertive"}I.attr("aria-live",e)}function a(){E.closeOnHover&&I.hover(H,D),!E.onclick&&E.tapToDismiss&&I.click(b),E.closeButton&&j&&j.click(function(e){e.stopPropagation?e.stopPropagation():void 0!==e.cancelBubble&&e.cancelBubble!==!0&&(e.cancelBubble=!0),E.onCloseClick&&E.onCloseClick(e),b(!0)}),E.onclick&&I.click(function(e){E.onclick(e),b()})}function r(){I.hide(),I[E.showMethod]({duration:E.showDuration,easing:E.showEasing,complete:E.onShown}),E.timeOut>0&&(k=setTimeout(b,E.timeOut),F.maxHideTime=parseFloat(E.timeOut),F.hideEta=(new Date).getTime()+F.maxHideTime,E.progressBar&&(F.intervalId=setInterval(x,10)))}function c(){t.iconClass&&I.addClass(E.toastClass).addClass(y)}function l(){E.newestOnTop?v.prepend(I):v.append(I)}function u(){if(t.title){var e=t.title;E.escapeHtml&&(e=o(t.title)),M.append(e).addClass(E.titleClass),I.append(M)}}function d(){if(t.message){var e=t.message;E.escapeHtml&&(e=o(t.message)),B.append(e).addClass(E.messageClass),I.append(B)}}function p(){E.closeButton&&(j.addClass(E.closeClass).attr("role","button"),I.prepend(j))}function g(){E.progressBar&&(q.addClass(E.progressClass),I.prepend(q))}function C(){E.rtl&&I.addClass("rtl")}function O(e,t){if(e.preventDuplicates){if(t.message===w)return!0;w=t.message}return!1}function b(t){var n=t&&E.closeMethod!==!1?E.closeMethod:E.hideMethod,o=t&&E.closeDuration!==!1?E.closeDuration:E.hideDuration,s=t&&E.closeEasing!==!1?E.closeEasing:E.hideEasing;if(!e(":focus",I).length||t)return clearTimeout(F.intervalId),I[n]({duration:o,easing:s,complete:function(){h(I),clearTimeout(k),E.onHidden&&"hidden"!==P.state&&E.onHidden(),P.state="hidden",P.endTime=new Date,f(P)}})}function D(){(E.timeOut>0||E.extendedTimeOut>0)&&(k=setTimeout(b,E.extendedTimeOut),F.maxHideTime=parseFloat(E.extendedTimeOut),F.hideEta=(new Date).getTime()+F.maxHideTime)}function H(){clearTimeout(k),F.hideEta=0,I.stop(!0,!0)[E.showMethod]({duration:E.showDuration,easing:E.showEasing})}function x(){var e=(F.hideEta-(new Date).getTime())/F.maxHideTime*100;q.width(e+"%")}var E=m(),y=t.iconClass||E.iconClass;if("undefined"!=typeof t.optionsOverride&&(E=e.extend(E,t.optionsOverride),y=t.optionsOverride.iconClass||y),!O(E,t)){T++,v=n(E,!0);var k=null,I=e("<div/>"),M=e("<div/>"),B=e("<div/>"),q=e("<div/>"),j=e(E.closeHtml),F={intervalId:null,hideEta:null,maxHideTime:null},P={toastId:T,state:"visible",startTime:new Date,options:E,map:t};return s(),r(),a(),f(P),E.debug&&console&&console.log(P),I}}function m(){return e.extend({},p(),b.options)}function h(e){v||(v=n()),e.is(":visible")||(e.remove(),e=null,0===v.children().length&&(v.remove(),w=void 0))}var v,C,w,T=0,O={error:"error",info:"info",success:"success",warning:"warning"},b={clear:r,remove:c,error:t,getContainer:n,info:o,options:{},subscribe:s,success:i,version:"2.1.3",warning:a};return b}()})}("function"==typeof define&&define.amd?define:function(e,t){"undefined"!=typeof module&&module.exports?module.exports=t(require("jquery")):window.toastr=t(window.jQuery)});
/*! jQuery Validation Plugin - v1.19.2 - 5/23/2020
 * https://jqueryvalidation.org/
 * Copyright (c) 2020 Jörn Zaefferer; Licensed MIT */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof module&&module.exports?module.exports=a(require("jquery")):a(jQuery)}(function(a){a.extend(a.fn,{validate:function(b){if(!this.length)return void(b&&b.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing."));var c=a.data(this[0],"validator");return c?c:(this.attr("novalidate","novalidate"),c=new a.validator(b,this[0]),a.data(this[0],"validator",c),c.settings.onsubmit&&(this.on("click.validate",":submit",function(b){c.submitButton=b.currentTarget,a(this).hasClass("cancel")&&(c.cancelSubmit=!0),void 0!==a(this).attr("formnovalidate")&&(c.cancelSubmit=!0)}),this.on("submit.validate",function(b){function d(){var d,e;return c.submitButton&&(c.settings.submitHandler||c.formSubmitted)&&(d=a("<input type='hidden'/>").attr("name",c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)),!(c.settings.submitHandler&&!c.settings.debug)||(e=c.settings.submitHandler.call(c,c.currentForm,b),d&&d.remove(),void 0!==e&&e)}return c.settings.debug&&b.preventDefault(),c.cancelSubmit?(c.cancelSubmit=!1,d()):c.form()?c.pendingRequest?(c.formSubmitted=!0,!1):d():(c.focusInvalid(),!1)})),c)},valid:function(){var b,c,d;return a(this[0]).is("form")?b=this.validate().form():(d=[],b=!0,c=a(this[0].form).validate(),this.each(function(){b=c.element(this)&&b,b||(d=d.concat(c.errorList))}),c.errorList=d),b},rules:function(b,c){var d,e,f,g,h,i,j=this[0],k="undefined"!=typeof this.attr("contenteditable")&&"false"!==this.attr("contenteditable");if(null!=j&&(!j.form&&k&&(j.form=this.closest("form")[0],j.name=this.attr("name")),null!=j.form)){if(b)switch(d=a.data(j.form,"validator").settings,e=d.rules,f=a.validator.staticRules(j),b){case"add":a.extend(f,a.validator.normalizeRule(c)),delete f.messages,e[j.name]=f,c.messages&&(d.messages[j.name]=a.extend(d.messages[j.name],c.messages));break;case"remove":return c?(i={},a.each(c.split(/\s/),function(a,b){i[b]=f[b],delete f[b]}),i):(delete e[j.name],f)}return g=a.validator.normalizeRules(a.extend({},a.validator.classRules(j),a.validator.attributeRules(j),a.validator.dataRules(j),a.validator.staticRules(j)),j),g.required&&(h=g.required,delete g.required,g=a.extend({required:h},g)),g.remote&&(h=g.remote,delete g.remote,g=a.extend(g,{remote:h})),g}}});var b=function(a){return a.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")};a.extend(a.expr.pseudos||a.expr[":"],{blank:function(c){return!b(""+a(c).val())},filled:function(c){var d=a(c).val();return null!==d&&!!b(""+d)},unchecked:function(b){return!a(b).prop("checked")}}),a.validator=function(b,c){this.settings=a.extend(!0,{},a.validator.defaults,b),this.currentForm=c,this.init()},a.validator.format=function(b,c){return 1===arguments.length?function(){var c=a.makeArray(arguments);return c.unshift(b),a.validator.format.apply(this,c)}:void 0===c?b:(arguments.length>2&&c.constructor!==Array&&(c=a.makeArray(arguments).slice(1)),c.constructor!==Array&&(c=[c]),a.each(c,function(a,c){b=b.replace(new RegExp("\\{"+a+"\\}","g"),function(){return c})}),b)},a.extend(a.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",pendingClass:"pending",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:a([]),errorLabelContainer:a([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(a){this.lastActive=a,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,a,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(a)))},onfocusout:function(a){this.checkable(a)||!(a.name in this.submitted)&&this.optional(a)||this.element(a)},onkeyup:function(b,c){var d=[16,17,18,20,35,36,37,38,39,40,45,144,225];9===c.which&&""===this.elementValue(b)||a.inArray(c.keyCode,d)!==-1||(b.name in this.submitted||b.name in this.invalid)&&this.element(b)},onclick:function(a){a.name in this.submitted?this.element(a):a.parentNode.name in this.submitted&&this.element(a.parentNode)},highlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).addClass(c).removeClass(d):a(b).addClass(c).removeClass(d)},unhighlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).removeClass(c).addClass(d):a(b).removeClass(c).addClass(d)}},setDefaults:function(b){a.extend(a.validator.defaults,b)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date (ISO).",number:"Please enter a valid number.",digits:"Please enter only digits.",equalTo:"Please enter the same value again.",maxlength:a.validator.format("Please enter no more than {0} characters."),minlength:a.validator.format("Please enter at least {0} characters."),rangelength:a.validator.format("Please enter a value between {0} and {1} characters long."),range:a.validator.format("Please enter a value between {0} and {1}."),max:a.validator.format("Please enter a value less than or equal to {0}."),min:a.validator.format("Please enter a value greater than or equal to {0}."),step:a.validator.format("Please enter a multiple of {0}.")},autoCreateRanges:!1,prototype:{init:function(){function b(b){var c="undefined"!=typeof a(this).attr("contenteditable")&&"false"!==a(this).attr("contenteditable");if(!this.form&&c&&(this.form=a(this).closest("form")[0],this.name=a(this).attr("name")),d===this.form){var e=a.data(this.form,"validator"),f="on"+b.type.replace(/^validate/,""),g=e.settings;g[f]&&!a(this).is(g.ignore)&&g[f].call(e,this,b)}}this.labelContainer=a(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||a(this.currentForm),this.containers=a(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var c,d=this.currentForm,e=this.groups={};a.each(this.settings.groups,function(b,c){"string"==typeof c&&(c=c.split(/\s/)),a.each(c,function(a,c){e[c]=b})}),c=this.settings.rules,a.each(c,function(b,d){c[b]=a.validator.normalizeRule(d)}),a(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",b).on("click.validate","select, option, [type='radio'], [type='checkbox']",b),this.settings.invalidHandler&&a(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler)},form:function(){return this.checkForm(),a.extend(this.submitted,this.errorMap),this.invalid=a.extend({},this.errorMap),this.valid()||a(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var a=0,b=this.currentElements=this.elements();b[a];a++)this.check(b[a]);return this.valid()},element:function(b){var c,d,e=this.clean(b),f=this.validationTargetFor(e),g=this,h=!0;return void 0===f?delete this.invalid[e.name]:(this.prepareElement(f),this.currentElements=a(f),d=this.groups[f.name],d&&a.each(this.groups,function(a,b){b===d&&a!==f.name&&(e=g.validationTargetFor(g.clean(g.findByName(a))),e&&e.name in g.invalid&&(g.currentElements.push(e),h=g.check(e)&&h))}),c=this.check(f)!==!1,h=h&&c,c?this.invalid[f.name]=!1:this.invalid[f.name]=!0,this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),a(b).attr("aria-invalid",!c)),h},showErrors:function(b){if(b){var c=this;a.extend(this.errorMap,b),this.errorList=a.map(this.errorMap,function(a,b){return{message:a,element:c.findByName(b)[0]}}),this.successList=a.grep(this.successList,function(a){return!(a.name in b)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){a.fn.resetForm&&a(this.currentForm).resetForm(),this.invalid={},this.submitted={},this.prepareForm(),this.hideErrors();var b=this.elements().removeData("previousValue").removeAttr("aria-invalid");this.resetElements(b)},resetElements:function(a){var b;if(this.settings.unhighlight)for(b=0;a[b];b++)this.settings.unhighlight.call(this,a[b],this.settings.errorClass,""),this.findByName(a[b].name).removeClass(this.settings.validClass);else a.removeClass(this.settings.errorClass).removeClass(this.settings.validClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(a){var b,c=0;for(b in a)void 0!==a[b]&&null!==a[b]&&a[b]!==!1&&c++;return c},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(a){a.not(this.containers).text(""),this.addWrapper(a).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{a(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").trigger("focus").trigger("focusin")}catch(b){}},findLastActive:function(){var b=this.lastActive;return b&&1===a.grep(this.errorList,function(a){return a.element.name===b.name}).length&&b},elements:function(){var b=this,c={};return a(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function(){var d=this.name||a(this).attr("name"),e="undefined"!=typeof a(this).attr("contenteditable")&&"false"!==a(this).attr("contenteditable");return!d&&b.settings.debug&&window.console&&console.error("%o has no name assigned",this),e&&(this.form=a(this).closest("form")[0],this.name=d),this.form===b.currentForm&&(!(d in c||!b.objectLength(a(this).rules()))&&(c[d]=!0,!0))})},clean:function(b){return a(b)[0]},errors:function(){var b=this.settings.errorClass.split(" ").join(".");return a(this.settings.errorElement+"."+b,this.errorContext)},resetInternals:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=a([]),this.toHide=a([])},reset:function(){this.resetInternals(),this.currentElements=a([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(a){this.reset(),this.toHide=this.errorsFor(a)},elementValue:function(b){var c,d,e=a(b),f=b.type,g="undefined"!=typeof e.attr("contenteditable")&&"false"!==e.attr("contenteditable");return"radio"===f||"checkbox"===f?this.findByName(b.name).filter(":checked").val():"number"===f&&"undefined"!=typeof b.validity?b.validity.badInput?"NaN":e.val():(c=g?e.text():e.val(),"file"===f?"C:\\fakepath\\"===c.substr(0,12)?c.substr(12):(d=c.lastIndexOf("/"),d>=0?c.substr(d+1):(d=c.lastIndexOf("\\"),d>=0?c.substr(d+1):c)):"string"==typeof c?c.replace(/\r/g,""):c)},check:function(b){b=this.validationTargetFor(this.clean(b));var c,d,e,f,g=a(b).rules(),h=a.map(g,function(a,b){return b}).length,i=!1,j=this.elementValue(b);"function"==typeof g.normalizer?f=g.normalizer:"function"==typeof this.settings.normalizer&&(f=this.settings.normalizer),f&&(j=f.call(b,j),delete g.normalizer);for(d in g){e={method:d,parameters:g[d]};try{if(c=a.validator.methods[d].call(this,j,b,e.parameters),"dependency-mismatch"===c&&1===h){i=!0;continue}if(i=!1,"pending"===c)return void(this.toHide=this.toHide.not(this.errorsFor(b)));if(!c)return this.formatAndAdd(b,e),!1}catch(k){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+b.id+", check the '"+e.method+"' method.",k),k instanceof TypeError&&(k.message+=".  Exception occurred when checking element "+b.id+", check the '"+e.method+"' method."),k}}if(!i)return this.objectLength(g)&&this.successList.push(b),!0},customDataMessage:function(b,c){return a(b).data("msg"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase())||a(b).data("msg")},customMessage:function(a,b){var c=this.settings.messages[a];return c&&(c.constructor===String?c:c[b])},findDefined:function(){for(var a=0;a<arguments.length;a++)if(void 0!==arguments[a])return arguments[a]},defaultMessage:function(b,c){"string"==typeof c&&(c={method:c});var d=this.findDefined(this.customMessage(b.name,c.method),this.customDataMessage(b,c.method),!this.settings.ignoreTitle&&b.title||void 0,a.validator.messages[c.method],"<strong>Warning: No message defined for "+b.name+"</strong>"),e=/\$?\{(\d+)\}/g;return"function"==typeof d?d=d.call(this,c.parameters,b):e.test(d)&&(d=a.validator.format(d.replace(e,"{$1}"),c.parameters)),d},formatAndAdd:function(a,b){var c=this.defaultMessage(a,b);this.errorList.push({message:c,element:a,method:b.method}),this.errorMap[a.name]=c,this.submitted[a.name]=c},addWrapper:function(a){return this.settings.wrapper&&(a=a.add(a.parent(this.settings.wrapper))),a},defaultShowErrors:function(){var a,b,c;for(a=0;this.errorList[a];a++)c=this.errorList[a],this.settings.highlight&&this.settings.highlight.call(this,c.element,this.settings.errorClass,this.settings.validClass),this.showLabel(c.element,c.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(a=0;this.successList[a];a++)this.showLabel(this.successList[a]);if(this.settings.unhighlight)for(a=0,b=this.validElements();b[a];a++)this.settings.unhighlight.call(this,b[a],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return a(this.errorList).map(function(){return this.element})},showLabel:function(b,c){var d,e,f,g,h=this.errorsFor(b),i=this.idOrName(b),j=a(b).attr("aria-describedby");h.length?(h.removeClass(this.settings.validClass).addClass(this.settings.errorClass),h.html(c)):(h=a("<"+this.settings.errorElement+">").attr("id",i+"-error").addClass(this.settings.errorClass).html(c||""),d=h,this.settings.wrapper&&(d=h.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(d):this.settings.errorPlacement?this.settings.errorPlacement.call(this,d,a(b)):d.insertAfter(b),h.is("label")?h.attr("for",i):0===h.parents("label[for='"+this.escapeCssMeta(i)+"']").length&&(f=h.attr("id"),j?j.match(new RegExp("\\b"+this.escapeCssMeta(f)+"\\b"))||(j+=" "+f):j=f,a(b).attr("aria-describedby",j),e=this.groups[b.name],e&&(g=this,a.each(g.groups,function(b,c){c===e&&a("[name='"+g.escapeCssMeta(b)+"']",g.currentForm).attr("aria-describedby",h.attr("id"))})))),!c&&this.settings.success&&(h.text(""),"string"==typeof this.settings.success?h.addClass(this.settings.success):this.settings.success(h,b)),this.toShow=this.toShow.add(h)},errorsFor:function(b){var c=this.escapeCssMeta(this.idOrName(b)),d=a(b).attr("aria-describedby"),e="label[for='"+c+"'], label[for='"+c+"'] *";return d&&(e=e+", #"+this.escapeCssMeta(d).replace(/\s+/g,", #")),this.errors().filter(e)},escapeCssMeta:function(a){return a.replace(/([\\!"#$%&'()*+,.\/:;<=>?@\[\]^`{|}~])/g,"\\$1")},idOrName:function(a){return this.groups[a.name]||(this.checkable(a)?a.name:a.id||a.name)},validationTargetFor:function(b){return this.checkable(b)&&(b=this.findByName(b.name)),a(b).not(this.settings.ignore)[0]},checkable:function(a){return/radio|checkbox/i.test(a.type)},findByName:function(b){return a(this.currentForm).find("[name='"+this.escapeCssMeta(b)+"']")},getLength:function(b,c){switch(c.nodeName.toLowerCase()){case"select":return a("option:selected",c).length;case"input":if(this.checkable(c))return this.findByName(c.name).filter(":checked").length}return b.length},depend:function(a,b){return!this.dependTypes[typeof a]||this.dependTypes[typeof a](a,b)},dependTypes:{"boolean":function(a){return a},string:function(b,c){return!!a(b,c.form).length},"function":function(a,b){return a(b)}},optional:function(b){var c=this.elementValue(b);return!a.validator.methods.required.call(this,c,b)&&"dependency-mismatch"},startRequest:function(b){this.pending[b.name]||(this.pendingRequest++,a(b).addClass(this.settings.pendingClass),this.pending[b.name]=!0)},stopRequest:function(b,c){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[b.name],a(b).removeClass(this.settings.pendingClass),c&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(a(this.currentForm).submit(),this.submitButton&&a("input:hidden[name='"+this.submitButton.name+"']",this.currentForm).remove(),this.formSubmitted=!1):!c&&0===this.pendingRequest&&this.formSubmitted&&(a(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(b,c){return c="string"==typeof c&&c||"remote",a.data(b,"previousValue")||a.data(b,"previousValue",{old:null,valid:!0,message:this.defaultMessage(b,{method:c})})},destroy:function(){this.resetForm(),a(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur").find(".validate-lessThan-blur").off(".validate-lessThan").removeClass("validate-lessThan-blur").find(".validate-lessThanEqual-blur").off(".validate-lessThanEqual").removeClass("validate-lessThanEqual-blur").find(".validate-greaterThanEqual-blur").off(".validate-greaterThanEqual").removeClass("validate-greaterThanEqual-blur").find(".validate-greaterThan-blur").off(".validate-greaterThan").removeClass("validate-greaterThan-blur")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(b,c){b.constructor===String?this.classRuleSettings[b]=c:a.extend(this.classRuleSettings,b)},classRules:function(b){var c={},d=a(b).attr("class");return d&&a.each(d.split(" "),function(){this in a.validator.classRuleSettings&&a.extend(c,a.validator.classRuleSettings[this])}),c},normalizeAttributeRule:function(a,b,c,d){/min|max|step/.test(c)&&(null===b||/number|range|text/.test(b))&&(d=Number(d),isNaN(d)&&(d=void 0)),d||0===d?a[c]=d:b===c&&"range"!==b&&(a[c]=!0)},attributeRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)"required"===c?(d=b.getAttribute(c),""===d&&(d=!0),d=!!d):d=f.attr(c),this.normalizeAttributeRule(e,g,c,d);return e.maxlength&&/-1|2147483647|524288/.test(e.maxlength)&&delete e.maxlength,e},dataRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)d=f.data("rule"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase()),""===d&&(d=!0),this.normalizeAttributeRule(e,g,c,d);return e},staticRules:function(b){var c={},d=a.data(b.form,"validator");return d.settings.rules&&(c=a.validator.normalizeRule(d.settings.rules[b.name])||{}),c},normalizeRules:function(b,c){return a.each(b,function(d,e){if(e===!1)return void delete b[d];if(e.param||e.depends){var f=!0;switch(typeof e.depends){case"string":f=!!a(e.depends,c.form).length;break;case"function":f=e.depends.call(c,c)}f?b[d]=void 0===e.param||e.param:(a.data(c.form,"validator").resetElements(a(c)),delete b[d])}}),a.each(b,function(d,e){b[d]=a.isFunction(e)&&"normalizer"!==d?e(c):e}),a.each(["minlength","maxlength"],function(){b[this]&&(b[this]=Number(b[this]))}),a.each(["rangelength","range"],function(){var c;b[this]&&(a.isArray(b[this])?b[this]=[Number(b[this][0]),Number(b[this][1])]:"string"==typeof b[this]&&(c=b[this].replace(/[\[\]]/g,"").split(/[\s,]+/),b[this]=[Number(c[0]),Number(c[1])]))}),a.validator.autoCreateRanges&&(null!=b.min&&null!=b.max&&(b.range=[b.min,b.max],delete b.min,delete b.max),null!=b.minlength&&null!=b.maxlength&&(b.rangelength=[b.minlength,b.maxlength],delete b.minlength,delete b.maxlength)),b},normalizeRule:function(b){if("string"==typeof b){var c={};a.each(b.split(/\s/),function(){c[this]=!0}),b=c}return b},addMethod:function(b,c,d){a.validator.methods[b]=c,a.validator.messages[b]=void 0!==d?d:a.validator.messages[b],c.length<3&&a.validator.addClassRules(b,a.validator.normalizeRule(b))},methods:{required:function(b,c,d){if(!this.depend(d,c))return"dependency-mismatch";if("select"===c.nodeName.toLowerCase()){var e=a(c).val();return e&&e.length>0}return this.checkable(c)?this.getLength(b,c)>0:void 0!==b&&null!==b&&b.length>0},email:function(a,b){return this.optional(b)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)},url:function(a,b){return this.optional(b)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[\/?#]\S*)?$/i.test(a)},date:function(){var a=!1;return function(b,c){return a||(a=!0,this.settings.debug&&window.console&&console.warn("The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`.")),this.optional(c)||!/Invalid|NaN/.test(new Date(b).toString())}}(),dateISO:function(a,b){return this.optional(b)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(a)},number:function(a,b){return this.optional(b)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)},digits:function(a,b){return this.optional(b)||/^\d+$/.test(a)},minlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d},maxlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e<=d},rangelength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d[0]&&e<=d[1]},min:function(a,b,c){return this.optional(b)||a>=c},max:function(a,b,c){return this.optional(b)||a<=c},range:function(a,b,c){return this.optional(b)||a>=c[0]&&a<=c[1]},step:function(b,c,d){var e,f=a(c).attr("type"),g="Step attribute on input type "+f+" is not supported.",h=["text","number","range"],i=new RegExp("\\b"+f+"\\b"),j=f&&!i.test(h.join()),k=function(a){var b=(""+a).match(/(?:\.(\d+))?$/);return b&&b[1]?b[1].length:0},l=function(a){return Math.round(a*Math.pow(10,e))},m=!0;if(j)throw new Error(g);return e=k(d),(k(b)>e||l(b)%l(d)!==0)&&(m=!1),this.optional(c)||m},equalTo:function(b,c,d){var e=a(d);return this.settings.onfocusout&&e.not(".validate-equalTo-blur").length&&e.addClass("validate-equalTo-blur").on("blur.validate-equalTo",function(){a(c).valid()}),b===e.val()},remote:function(b,c,d,e){if(this.optional(c))return"dependency-mismatch";e="string"==typeof e&&e||"remote";var f,g,h,i=this.previousValue(c,e);return this.settings.messages[c.name]||(this.settings.messages[c.name]={}),i.originalMessage=i.originalMessage||this.settings.messages[c.name][e],this.settings.messages[c.name][e]=i.message,d="string"==typeof d&&{url:d}||d,h=a.param(a.extend({data:b},d.data)),i.old===h?i.valid:(i.old=h,f=this,this.startRequest(c),g={},g[c.name]=b,a.ajax(a.extend(!0,{mode:"abort",port:"validate"+c.name,dataType:"json",data:g,context:f.currentForm,success:function(a){var d,g,h,j=a===!0||"true"===a;f.settings.messages[c.name][e]=i.originalMessage,j?(h=f.formSubmitted,f.resetInternals(),f.toHide=f.errorsFor(c),f.formSubmitted=h,f.successList.push(c),f.invalid[c.name]=!1,f.showErrors()):(d={},g=a||f.defaultMessage(c,{method:e,parameters:b}),d[c.name]=i.message=g,f.invalid[c.name]=!0,f.showErrors(d)),i.valid=j,f.stopRequest(c,j)}},d)),"pending")}}});var c,d={};return a.ajaxPrefilter?a.ajaxPrefilter(function(a,b,c){var e=a.port;"abort"===a.mode&&(d[e]&&d[e].abort(),d[e]=c)}):(c=a.ajax,a.ajax=function(b){var e=("mode"in b?b:a.ajaxSettings).mode,f=("port"in b?b:a.ajaxSettings).port;return"abort"===e?(d[f]&&d[f].abort(),d[f]=c.apply(this,arguments),d[f]):c.apply(this,arguments)}),a});
!function(n,e){"function"==typeof define&&define.amd?define(e):"object"==typeof exports?module.exports=e():n.NProgress=e()}(this,function(){function n(n,e,t){return e>n?e:n>t?t:n}function e(n){return 100*(-1+n)}function t(n,t,r){var i;return i="translate3d"===c.positionUsing?{transform:"translate3d("+e(n)+"%,0,0)"}:"translate"===c.positionUsing?{transform:"translate("+e(n)+"%,0)"}:{"margin-left":e(n)+"%"},i.transition="all "+t+"ms "+r,i}function r(n,e){var t="string"==typeof n?n:o(n);return t.indexOf(" "+e+" ")>=0}function i(n,e){var t=o(n),i=t+e;r(t,e)||(n.className=i.substring(1))}function s(n,e){var t,i=o(n);r(n,e)&&(t=i.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function o(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function a(n){n&&n.parentNode&&n.parentNode.removeChild(n)}var u={};u.version="0.2.0";var c=u.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};u.configure=function(n){var e,t;for(e in n)t=n[e],void 0!==t&&n.hasOwnProperty(e)&&(c[e]=t);return this},u.status=null,u.set=function(e){var r=u.isStarted();e=n(e,c.minimum,1),u.status=1===e?null:e;var i=u.render(!r),s=i.querySelector(c.barSelector),o=c.speed,a=c.easing;return i.offsetWidth,l(function(n){""===c.positionUsing&&(c.positionUsing=u.getPositioningCSS()),f(s,t(e,o,a)),1===e?(f(i,{transition:"none",opacity:1}),i.offsetWidth,setTimeout(function(){f(i,{transition:"all "+o+"ms linear",opacity:0}),setTimeout(function(){u.remove(),n()},o)},o)):setTimeout(n,o)}),this},u.isStarted=function(){return"number"==typeof u.status},u.start=function(){u.status||u.set(0);var n=function(){setTimeout(function(){u.status&&(u.trickle(),n())},c.trickleSpeed)};return c.trickle&&n(),this},u.done=function(n){return n||u.status?u.inc(.3+.5*Math.random()).set(1):this},u.inc=function(e){var t=u.status;return t?("number"!=typeof e&&(e=(1-t)*n(Math.random()*t,.1,.95)),t=n(t+e,0,.994),u.set(t)):u.start()},u.trickle=function(){return u.inc(Math.random()*c.trickleRate)},function(){var n=0,e=0;u.promise=function(t){return t&&"resolved"!==t.state()?(0===e&&u.start(),n++,e++,t.always(function(){e--,0===e?(n=0,u.done()):u.set((n-e)/n)}),this):this}}(),u.render=function(n){if(u.isRendered())return document.getElementById("nprogress");i(document.documentElement,"nprogress-busy");var t=document.createElement("div");t.id="nprogress",t.innerHTML=c.template;var r,s=t.querySelector(c.barSelector),o=n?"-100":e(u.status||0),l=document.querySelector(c.parent);return f(s,{transition:"all 0 linear",transform:"translate3d("+o+"%,0,0)"}),c.showSpinner||(r=t.querySelector(c.spinnerSelector),r&&a(r)),l!=document.body&&i(l,"nprogress-custom-parent"),l.appendChild(t),t},u.remove=function(){s(document.documentElement,"nprogress-busy"),s(document.querySelector(c.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&a(n)},u.isRendered=function(){return!!document.getElementById("nprogress")},u.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var l=function(){function n(){var t=e.shift();t&&t(n)}var e=[];return function(t){e.push(t),1==e.length&&n()}}(),f=function(){function n(n){return n.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(n,e){return e.toUpperCase()})}function e(n){var e=document.body.style;if(n in e)return n;for(var t,r=i.length,s=n.charAt(0).toUpperCase()+n.slice(1);r--;)if(t=i[r]+s,t in e)return t;return n}function t(t){return t=n(t),s[t]||(s[t]=e(t))}function r(n,e,r){e=t(e),n.style[e]=r}var i=["Webkit","O","Moz","ms"],s={};return function(n,e){var t,i,s=arguments;if(2==s.length)for(t in e)i=e[t],void 0!==i&&e.hasOwnProperty(t)&&r(n,t,i);else r(n,s[1],s[2])}}();return u});
/*!
 * perfect-scrollbar v1.4.0
 * (c) 2018 Hyunje Jun
 * @license MIT
 */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.PerfectScrollbar=e()}(this,function(){"use strict";function v(t){return getComputedStyle(t)}function d(t,e){for(var i in e){var l=e[i];"number"==typeof l&&(l+="px"),t.style[i]=l}return t}function f(t){var e=document.createElement("div");return e.className=t,e}var i="undefined"!=typeof Element&&(Element.prototype.matches||Element.prototype.webkitMatchesSelector||Element.prototype.mozMatchesSelector||Element.prototype.msMatchesSelector);function s(t,e){if(!i)throw new Error("No element matching method supported");return i.call(t,e)}function r(t){t.remove?t.remove():t.parentNode&&t.parentNode.removeChild(t)}function n(t,e){return Array.prototype.filter.call(t.children,function(t){return s(t,e)})}var m={main:"ps",element:{thumb:function(t){return"ps__thumb-"+t},rail:function(t){return"ps__rail-"+t},consuming:"ps__child--consume"},state:{focus:"ps--focus",clicking:"ps--clicking",active:function(t){return"ps--active-"+t},scrolling:function(t){return"ps--scrolling-"+t}}},o={x:null,y:null};function Y(t,e){var i=t.element.classList,l=m.state.scrolling(e);i.contains(l)?clearTimeout(o[e]):i.add(l)}function X(t,e){o[e]=setTimeout(function(){return t.isAlive&&t.element.classList.remove(m.state.scrolling(e))},t.settings.scrollingThreshold)}var l=function(t){this.element=t,this.handlers={}},t={isEmpty:{configurable:!0}};l.prototype.bind=function(t,e){void 0===this.handlers[t]&&(this.handlers[t]=[]),this.handlers[t].push(e),this.element.addEventListener(t,e,!1)},l.prototype.unbind=function(e,i){var l=this;this.handlers[e]=this.handlers[e].filter(function(t){return!(!i||t===i)||(l.element.removeEventListener(e,t,!1),!1)})},l.prototype.unbindAll=function(){for(var t in this.handlers)this.unbind(t)},t.isEmpty.get=function(){var e=this;return Object.keys(this.handlers).every(function(t){return 0===e.handlers[t].length})},Object.defineProperties(l.prototype,t);var p=function(){this.eventElements=[]};function b(t){if("function"==typeof window.CustomEvent)return new CustomEvent(t);var e=document.createEvent("CustomEvent");return e.initCustomEvent(t,!1,!1,void 0),e}p.prototype.eventElement=function(e){var t=this.eventElements.filter(function(t){return t.element===e})[0];return t||(t=new l(e),this.eventElements.push(t)),t},p.prototype.bind=function(t,e,i){this.eventElement(t).bind(e,i)},p.prototype.unbind=function(t,e,i){var l=this.eventElement(t);l.unbind(e,i),l.isEmpty&&this.eventElements.splice(this.eventElements.indexOf(l),1)},p.prototype.unbindAll=function(){this.eventElements.forEach(function(t){return t.unbindAll()}),this.eventElements=[]},p.prototype.once=function(t,e,i){var l=this.eventElement(t),r=function(t){l.unbind(e,r),i(t)};l.bind(e,r)};var e=function(t,e,i,l,r){var n;if(void 0===l&&(l=!0),void 0===r&&(r=!1),"top"===e)n=["contentHeight","containerHeight","scrollTop","y","up","down"];else{if("left"!==e)throw new Error("A proper axis should be provided");n=["contentWidth","containerWidth","scrollLeft","x","left","right"]}!function(t,e,i,l,r){var n=i[0],o=i[1],s=i[2],a=i[3],c=i[4],h=i[5];void 0===l&&(l=!0);void 0===r&&(r=!1);var u=t.element;t.reach[a]=null,u[s]<1&&(t.reach[a]="start");u[s]>t[n]-t[o]-1&&(t.reach[a]="end");e&&(u.dispatchEvent(b("ps-scroll-"+a)),e<0?u.dispatchEvent(b("ps-scroll-"+c)):0<e&&u.dispatchEvent(b("ps-scroll-"+h)),l&&(Y(d=t,f=a),X(d,f)));var d,f;t.reach[a]&&(e||r)&&u.dispatchEvent(b("ps-"+a+"-reach-"+t.reach[a]))}(t,i,n,l,r)};function g(t){return parseInt(t,10)||0}var w={isWebKit:"undefined"!=typeof document&&"WebkitAppearance"in document.documentElement.style,supportsTouch:"undefined"!=typeof window&&("ontouchstart"in window||window.DocumentTouch&&document instanceof window.DocumentTouch),supportsIePointer:"undefined"!=typeof navigator&&navigator.msMaxTouchPoints,isChrome:"undefined"!=typeof navigator&&/Chrome/i.test(navigator&&navigator.userAgent)},y=function(t){var e=t.element,i=Math.floor(e.scrollTop),l=e.getBoundingClientRect();t.containerWidth=Math.ceil(l.width),t.containerHeight=Math.ceil(l.height),t.contentWidth=e.scrollWidth,t.contentHeight=e.scrollHeight,e.contains(t.scrollbarXRail)||(n(e,m.element.rail("x")).forEach(function(t){return r(t)}),e.appendChild(t.scrollbarXRail)),e.contains(t.scrollbarYRail)||(n(e,m.element.rail("y")).forEach(function(t){return r(t)}),e.appendChild(t.scrollbarYRail)),!t.settings.suppressScrollX&&t.containerWidth+t.settings.scrollXMarginOffset<t.contentWidth?(t.scrollbarXActive=!0,t.railXWidth=t.containerWidth-t.railXMarginWidth,t.railXRatio=t.containerWidth/t.railXWidth,t.scrollbarXWidth=a(t,g(t.railXWidth*t.containerWidth/t.contentWidth)),t.scrollbarXLeft=g((t.negativeScrollAdjustment+e.scrollLeft)*(t.railXWidth-t.scrollbarXWidth)/(t.contentWidth-t.containerWidth))):t.scrollbarXActive=!1,!t.settings.suppressScrollY&&t.containerHeight+t.settings.scrollYMarginOffset<t.contentHeight?(t.scrollbarYActive=!0,t.railYHeight=t.containerHeight-t.railYMarginHeight,t.railYRatio=t.containerHeight/t.railYHeight,t.scrollbarYHeight=a(t,g(t.railYHeight*t.containerHeight/t.contentHeight)),t.scrollbarYTop=g(i*(t.railYHeight-t.scrollbarYHeight)/(t.contentHeight-t.containerHeight))):t.scrollbarYActive=!1,t.scrollbarXLeft>=t.railXWidth-t.scrollbarXWidth&&(t.scrollbarXLeft=t.railXWidth-t.scrollbarXWidth),t.scrollbarYTop>=t.railYHeight-t.scrollbarYHeight&&(t.scrollbarYTop=t.railYHeight-t.scrollbarYHeight),function(t,e){var i={width:e.railXWidth},l=Math.floor(t.scrollTop);e.isRtl?i.left=e.negativeScrollAdjustment+t.scrollLeft+e.containerWidth-e.contentWidth:i.left=t.scrollLeft;e.isScrollbarXUsingBottom?i.bottom=e.scrollbarXBottom-l:i.top=e.scrollbarXTop+l;d(e.scrollbarXRail,i);var r={top:l,height:e.railYHeight};e.isScrollbarYUsingRight?e.isRtl?r.right=e.contentWidth-(e.negativeScrollAdjustment+t.scrollLeft)-e.scrollbarYRight-e.scrollbarYOuterWidth:r.right=e.scrollbarYRight-t.scrollLeft:e.isRtl?r.left=e.negativeScrollAdjustment+t.scrollLeft+2*e.containerWidth-e.contentWidth-e.scrollbarYLeft-e.scrollbarYOuterWidth:r.left=e.scrollbarYLeft+t.scrollLeft;d(e.scrollbarYRail,r),d(e.scrollbarX,{left:e.scrollbarXLeft,width:e.scrollbarXWidth-e.railBorderXWidth}),d(e.scrollbarY,{top:e.scrollbarYTop,height:e.scrollbarYHeight-e.railBorderYWidth})}(e,t),t.scrollbarXActive?e.classList.add(m.state.active("x")):(e.classList.remove(m.state.active("x")),t.scrollbarXWidth=0,t.scrollbarXLeft=0,e.scrollLeft=0),t.scrollbarYActive?e.classList.add(m.state.active("y")):(e.classList.remove(m.state.active("y")),t.scrollbarYHeight=0,t.scrollbarYTop=0,e.scrollTop=0)};function a(t,e){return t.settings.minScrollbarLength&&(e=Math.max(e,t.settings.minScrollbarLength)),t.settings.maxScrollbarLength&&(e=Math.min(e,t.settings.maxScrollbarLength)),e}function c(e,t){var i=t[0],l=t[1],r=t[2],n=t[3],o=t[4],s=t[5],a=t[6],c=t[7],h=t[8],u=e.element,d=null,f=null,p=null;function b(t){u[a]=d+p*(t[r]-f),Y(e,c),y(e),t.stopPropagation(),t.preventDefault()}function g(){X(e,c),e[h].classList.remove(m.state.clicking),e.event.unbind(e.ownerDocument,"mousemove",b)}e.event.bind(e[o],"mousedown",function(t){d=u[a],f=t[r],p=(e[l]-e[i])/(e[n]-e[s]),e.event.bind(e.ownerDocument,"mousemove",b),e.event.once(e.ownerDocument,"mouseup",g),e[h].classList.add(m.state.clicking),t.stopPropagation(),t.preventDefault()})}var W={"click-rail":function(i){i.event.bind(i.scrollbarY,"mousedown",function(t){return t.stopPropagation()}),i.event.bind(i.scrollbarYRail,"mousedown",function(t){var e=t.pageY-window.pageYOffset-i.scrollbarYRail.getBoundingClientRect().top>i.scrollbarYTop?1:-1;i.element.scrollTop+=e*i.containerHeight,y(i),t.stopPropagation()}),i.event.bind(i.scrollbarX,"mousedown",function(t){return t.stopPropagation()}),i.event.bind(i.scrollbarXRail,"mousedown",function(t){var e=t.pageX-window.pageXOffset-i.scrollbarXRail.getBoundingClientRect().left>i.scrollbarXLeft?1:-1;i.element.scrollLeft+=e*i.containerWidth,y(i),t.stopPropagation()})},"drag-thumb":function(t){c(t,["containerWidth","contentWidth","pageX","railXWidth","scrollbarX","scrollbarXWidth","scrollLeft","x","scrollbarXRail"]),c(t,["containerHeight","contentHeight","pageY","railYHeight","scrollbarY","scrollbarYHeight","scrollTop","y","scrollbarYRail"])},keyboard:function(n){var o=n.element;n.event.bind(n.ownerDocument,"keydown",function(t){if(!(t.isDefaultPrevented&&t.isDefaultPrevented()||t.defaultPrevented)&&(s(o,":hover")||s(n.scrollbarX,":focus")||s(n.scrollbarY,":focus"))){var e,i=document.activeElement?document.activeElement:n.ownerDocument.activeElement;if(i){if("IFRAME"===i.tagName)i=i.contentDocument.activeElement;else for(;i.shadowRoot;)i=i.shadowRoot.activeElement;if(s(e=i,"input,[contenteditable]")||s(e,"select,[contenteditable]")||s(e,"textarea,[contenteditable]")||s(e,"button,[contenteditable]"))return}var l=0,r=0;switch(t.which){case 37:l=t.metaKey?-n.contentWidth:t.altKey?-n.containerWidth:-30;break;case 38:r=t.metaKey?n.contentHeight:t.altKey?n.containerHeight:30;break;case 39:l=t.metaKey?n.contentWidth:t.altKey?n.containerWidth:30;break;case 40:r=t.metaKey?-n.contentHeight:t.altKey?-n.containerHeight:-30;break;case 32:r=t.shiftKey?n.containerHeight:-n.containerHeight;break;case 33:r=n.containerHeight;break;case 34:r=-n.containerHeight;break;case 36:r=n.contentHeight;break;case 35:r=-n.contentHeight;break;default:return}n.settings.suppressScrollX&&0!==l||n.settings.suppressScrollY&&0!==r||(o.scrollTop-=r,o.scrollLeft+=l,y(n),function(t,e){var i=Math.floor(o.scrollTop);if(0===t){if(!n.scrollbarYActive)return!1;if(0===i&&0<e||i>=n.contentHeight-n.containerHeight&&e<0)return!n.settings.wheelPropagation}var l=o.scrollLeft;if(0===e){if(!n.scrollbarXActive)return!1;if(0===l&&t<0||l>=n.contentWidth-n.containerWidth&&0<t)return!n.settings.wheelPropagation}return!0}(l,r)&&t.preventDefault())}})},wheel:function(b){var g=b.element;function t(t){var e,i,l,r=(i=(e=t).deltaX,l=-1*e.deltaY,void 0!==i&&void 0!==l||(i=-1*e.wheelDeltaX/6,l=e.wheelDeltaY/6),e.deltaMode&&1===e.deltaMode&&(i*=10,l*=10),i!=i&&l!=l&&(i=0,l=e.wheelDelta),e.shiftKey?[-l,-i]:[i,l]),n=r[0],o=r[1];if(!function(t,e,i){if(!w.isWebKit&&g.querySelector("select:focus"))return!0;if(!g.contains(t))return!1;for(var l=t;l&&l!==g;){if(l.classList.contains(m.element.consuming))return!0;var r=v(l);if([r.overflow,r.overflowX,r.overflowY].join("").match(/(scroll|auto)/)){var n=l.scrollHeight-l.clientHeight;if(0<n&&!(0===l.scrollTop&&0<i||l.scrollTop===n&&i<0))return!0;var o=l.scrollWidth-l.clientWidth;if(0<o&&!(0===l.scrollLeft&&e<0||l.scrollLeft===o&&0<e))return!0}l=l.parentNode}return!1}(t.target,n,o)){var s,a,c,h,u,d,f,p=!1;b.settings.useBothWheelAxes?b.scrollbarYActive&&!b.scrollbarXActive?(o?g.scrollTop-=o*b.settings.wheelSpeed:g.scrollTop+=n*b.settings.wheelSpeed,p=!0):b.scrollbarXActive&&!b.scrollbarYActive&&(n?g.scrollLeft+=n*b.settings.wheelSpeed:g.scrollLeft-=o*b.settings.wheelSpeed,p=!0):(g.scrollTop-=o*b.settings.wheelSpeed,g.scrollLeft+=n*b.settings.wheelSpeed),y(b),(p=p||(s=n,a=o,c=Math.floor(g.scrollTop),h=0===g.scrollTop,u=c+g.offsetHeight===g.scrollHeight,d=0===g.scrollLeft,f=g.scrollLeft+g.offsetWidth===g.scrollWidth,!(Math.abs(a)>Math.abs(s)?h||u:d||f)||!b.settings.wheelPropagation))&&!t.ctrlKey&&(t.stopPropagation(),t.preventDefault())}}void 0!==window.onwheel?b.event.bind(g,"wheel",t):void 0!==window.onmousewheel&&b.event.bind(g,"mousewheel",t)},touch:function(s){if(w.supportsTouch||w.supportsIePointer){var a=s.element,c={},h=0,u={},i=null;w.supportsTouch?(s.event.bind(a,"touchstart",t),s.event.bind(a,"touchmove",e),s.event.bind(a,"touchend",l)):w.supportsIePointer&&(window.PointerEvent?(s.event.bind(a,"pointerdown",t),s.event.bind(a,"pointermove",e),s.event.bind(a,"pointerup",l)):window.MSPointerEvent&&(s.event.bind(a,"MSPointerDown",t),s.event.bind(a,"MSPointerMove",e),s.event.bind(a,"MSPointerUp",l)))}function d(t,e){a.scrollTop-=e,a.scrollLeft-=t,y(s)}function f(t){return t.targetTouches?t.targetTouches[0]:t}function p(t){return!(t.pointerType&&"pen"===t.pointerType&&0===t.buttons||(!t.targetTouches||1!==t.targetTouches.length)&&(!t.pointerType||"mouse"===t.pointerType||t.pointerType===t.MSPOINTER_TYPE_MOUSE))}function t(t){if(p(t)){var e=f(t);c.pageX=e.pageX,c.pageY=e.pageY,h=(new Date).getTime(),null!==i&&clearInterval(i)}}function e(t){if(p(t)){var e=f(t),i={pageX:e.pageX,pageY:e.pageY},l=i.pageX-c.pageX,r=i.pageY-c.pageY;if(function(t,e,i){if(!a.contains(t))return!1;for(var l=t;l&&l!==a;){if(l.classList.contains(m.element.consuming))return!0;var r=v(l);if([r.overflow,r.overflowX,r.overflowY].join("").match(/(scroll|auto)/)){var n=l.scrollHeight-l.clientHeight;if(0<n&&!(0===l.scrollTop&&0<i||l.scrollTop===n&&i<0))return!0;var o=l.scrollLeft-l.clientWidth;if(0<o&&!(0===l.scrollLeft&&e<0||l.scrollLeft===o&&0<e))return!0}l=l.parentNode}return!1}(t.target,l,r))return;d(l,r),c=i;var n=(new Date).getTime(),o=n-h;0<o&&(u.x=l/o,u.y=r/o,h=n),function(t,e){var i=Math.floor(a.scrollTop),l=a.scrollLeft,r=Math.abs(t),n=Math.abs(e);if(r<n){if(e<0&&i===s.contentHeight-s.containerHeight||0<e&&0===i)return 0===window.scrollY&&0<e&&w.isChrome}else if(n<r&&(t<0&&l===s.contentWidth-s.containerWidth||0<t&&0===l))return!0;return!0}(l,r)&&t.preventDefault()}}function l(){s.settings.swipeEasing&&(clearInterval(i),i=setInterval(function(){s.isInitialized?clearInterval(i):u.x||u.y?Math.abs(u.x)<.01&&Math.abs(u.y)<.01?clearInterval(i):(d(30*u.x,30*u.y),u.x*=.8,u.y*=.8):clearInterval(i)},10))}}},h=function(t,e){var i=this;if(void 0===e&&(e={}),"string"==typeof t&&(t=document.querySelector(t)),!t||!t.nodeName)throw new Error("no element is specified to initialize PerfectScrollbar");for(var l in(this.element=t).classList.add(m.main),this.settings={handlers:["click-rail","drag-thumb","keyboard","wheel","touch"],maxScrollbarLength:null,minScrollbarLength:null,scrollingThreshold:1e3,scrollXMarginOffset:0,scrollYMarginOffset:0,suppressScrollX:!1,suppressScrollY:!1,swipeEasing:!0,useBothWheelAxes:!1,wheelPropagation:!0,wheelSpeed:1},e)i.settings[l]=e[l];this.containerWidth=null,this.containerHeight=null,this.contentWidth=null,this.contentHeight=null;var r,n,o=function(){return t.classList.add(m.state.focus)},s=function(){return t.classList.remove(m.state.focus)};this.isRtl="rtl"===v(t).direction,this.isNegativeScroll=(n=t.scrollLeft,t.scrollLeft=-1,r=t.scrollLeft<0,t.scrollLeft=n,r),this.negativeScrollAdjustment=this.isNegativeScroll?t.scrollWidth-t.clientWidth:0,this.event=new p,this.ownerDocument=t.ownerDocument||document,this.scrollbarXRail=f(m.element.rail("x")),t.appendChild(this.scrollbarXRail),this.scrollbarX=f(m.element.thumb("x")),this.scrollbarXRail.appendChild(this.scrollbarX),this.scrollbarX.setAttribute("tabindex",0),this.event.bind(this.scrollbarX,"focus",o),this.event.bind(this.scrollbarX,"blur",s),this.scrollbarXActive=null,this.scrollbarXWidth=null,this.scrollbarXLeft=null;var a=v(this.scrollbarXRail);this.scrollbarXBottom=parseInt(a.bottom,10),isNaN(this.scrollbarXBottom)?(this.isScrollbarXUsingBottom=!1,this.scrollbarXTop=g(a.top)):this.isScrollbarXUsingBottom=!0,this.railBorderXWidth=g(a.borderLeftWidth)+g(a.borderRightWidth),d(this.scrollbarXRail,{display:"block"}),this.railXMarginWidth=g(a.marginLeft)+g(a.marginRight),d(this.scrollbarXRail,{display:""}),this.railXWidth=null,this.railXRatio=null,this.scrollbarYRail=f(m.element.rail("y")),t.appendChild(this.scrollbarYRail),this.scrollbarY=f(m.element.thumb("y")),this.scrollbarYRail.appendChild(this.scrollbarY),this.scrollbarY.setAttribute("tabindex",0),this.event.bind(this.scrollbarY,"focus",o),this.event.bind(this.scrollbarY,"blur",s),this.scrollbarYActive=null,this.scrollbarYHeight=null,this.scrollbarYTop=null;var c,h,u=v(this.scrollbarYRail);this.scrollbarYRight=parseInt(u.right,10),isNaN(this.scrollbarYRight)?(this.isScrollbarYUsingRight=!1,this.scrollbarYLeft=g(u.left)):this.isScrollbarYUsingRight=!0,this.scrollbarYOuterWidth=this.isRtl?(c=this.scrollbarY,g((h=v(c)).width)+g(h.paddingLeft)+g(h.paddingRight)+g(h.borderLeftWidth)+g(h.borderRightWidth)):null,this.railBorderYWidth=g(u.borderTopWidth)+g(u.borderBottomWidth),d(this.scrollbarYRail,{display:"block"}),this.railYMarginHeight=g(u.marginTop)+g(u.marginBottom),d(this.scrollbarYRail,{display:""}),this.railYHeight=null,this.railYRatio=null,this.reach={x:t.scrollLeft<=0?"start":t.scrollLeft>=this.contentWidth-this.containerWidth?"end":null,y:t.scrollTop<=0?"start":t.scrollTop>=this.contentHeight-this.containerHeight?"end":null},this.isAlive=!0,this.settings.handlers.forEach(function(t){return W[t](i)}),this.lastScrollTop=Math.floor(t.scrollTop),this.lastScrollLeft=t.scrollLeft,this.event.bind(this.element,"scroll",function(t){return i.onScroll(t)}),y(this)};return h.prototype.update=function(){this.isAlive&&(this.negativeScrollAdjustment=this.isNegativeScroll?this.element.scrollWidth-this.element.clientWidth:0,d(this.scrollbarXRail,{display:"block"}),d(this.scrollbarYRail,{display:"block"}),this.railXMarginWidth=g(v(this.scrollbarXRail).marginLeft)+g(v(this.scrollbarXRail).marginRight),this.railYMarginHeight=g(v(this.scrollbarYRail).marginTop)+g(v(this.scrollbarYRail).marginBottom),d(this.scrollbarXRail,{display:"none"}),d(this.scrollbarYRail,{display:"none"}),y(this),e(this,"top",0,!1,!0),e(this,"left",0,!1,!0),d(this.scrollbarXRail,{display:""}),d(this.scrollbarYRail,{display:""}))},h.prototype.onScroll=function(t){this.isAlive&&(y(this),e(this,"top",this.element.scrollTop-this.lastScrollTop),e(this,"left",this.element.scrollLeft-this.lastScrollLeft),this.lastScrollTop=Math.floor(this.element.scrollTop),this.lastScrollLeft=this.element.scrollLeft)},h.prototype.destroy=function(){this.isAlive&&(this.event.unbindAll(),r(this.scrollbarX),r(this.scrollbarY),r(this.scrollbarXRail),r(this.scrollbarYRail),this.removePsClasses(),this.element=null,this.scrollbarX=null,this.scrollbarY=null,this.scrollbarXRail=null,this.scrollbarYRail=null,this.isAlive=!1)},h.prototype.removePsClasses=function(){this.element.className=this.element.className.split(" ").filter(function(t){return!t.match(/^ps([-_].+|)$/)}).join(" ")},h});
/*
 * International Telephone Input v16.0.8
 * https://github.com/jackocnr/intl-tel-input.git
 * Licensed under the MIT license
 */

! function (a) {
	var b = function (a, b, c) {
		"use strict";
		return function () {
			function d(a, b) {
				if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
			}

			function e(a, b) {
				for (var c = 0; c < b.length; c++) {
					var d = b[c];
					d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
				}
			}

			function f(a, b, c) {
				return b && e(a.prototype, b), c && e(a, c), a
			}
			for (var g = [
					["Afghanistan (‫افغانستان‬‎)", "af", "93"],
					["Albania (Shqipëri)", "al", "355"],
					["Algeria (‫الجزائر‬‎)", "dz", "213"],
					["American Samoa", "as", "1", 5, ["684"]],
					["Andorra", "ad", "376"],
					["Angola", "ao", "244"],
					["Anguilla", "ai", "1", 6, ["264"]],
					["Antigua and Barbuda", "ag", "1", 7, ["268"]],
					["Argentina", "ar", "54"],
					["Armenia (Հայաստան)", "am", "374"],
					["Aruba", "aw", "297"],
					["Australia", "au", "61", 0],
					["Austria (Österreich)", "at", "43"],
					["Azerbaijan (Azərbaycan)", "az", "994"],
					["Bahamas", "bs", "1", 8, ["242"]],
					["Bahrain (‫البحرين‬‎)", "bh", "973"],
					["Bangladesh (বাংলাদেশ)", "bd", "880"],
					["Barbados", "bb", "1", 9, ["246"]],
					["Belarus (Беларусь)", "by", "375"],
					["Belgium (België)", "be", "32"],
					["Belize", "bz", "501"],
					["Benin (Bénin)", "bj", "229"],
					["Bermuda", "bm", "1", 10, ["441"]],
					["Bhutan (འབྲུག)", "bt", "975"],
					["Bolivia", "bo", "591"],
					["Bosnia and Herzegovina (Босна и Херцеговина)", "ba", "387"],
					["Botswana", "bw", "267"],
					["Brazil (Brasil)", "br", "55"],
					["British Indian Ocean Territory", "io", "246"],
					["British Virgin Islands", "vg", "1", 11, ["284"]],
					["Brunei", "bn", "673"],
					["Bulgaria (България)", "bg", "359"],
					["Burkina Faso", "bf", "226"],
					["Burundi (Uburundi)", "bi", "257"],
					["Cambodia (កម្ពុជា)", "kh", "855"],
					["Cameroon (Cameroun)", "cm", "237"],
					["Canada", "ca", "1", 1, ["204", "226", "236", "249", "250", "289", "306", "343", "365", "387", "403", "416", "418", "431", "437", "438", "450", "506", "514", "519", "548", "579", "581", "587", "604", "613", "639", "647", "672", "705", "709", "742", "778", "780", "782", "807", "819", "825", "867", "873", "902", "905"]],
					["Cape Verde (Kabu Verdi)", "cv", "238"],
					["Caribbean Netherlands", "bq", "599", 1, ["3", "4", "7"]],
					["Cayman Islands", "ky", "1", 12, ["345"]],
					["Central African Republic (République centrafricaine)", "cf", "236"],
					["Chad (Tchad)", "td", "235"],
					["Chile", "cl", "56"],
					["China (中国)", "cn", "86"],
					["Christmas Island", "cx", "61", 2],
					["Cocos (Keeling) Islands", "cc", "61", 1],
					["Colombia", "co", "57"],
					["Comoros (‫جزر القمر‬‎)", "km", "269"],
					["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", "cd", "243"],
					["Congo (Republic) (Congo-Brazzaville)", "cg", "242"],
					["Cook Islands", "ck", "682"],
					["Costa Rica", "cr", "506"],
					["Côte d’Ivoire", "ci", "225"],
					["Croatia (Hrvatska)", "hr", "385"],
					["Cuba", "cu", "53"],
					["Curaçao", "cw", "599", 0],
					["Cyprus (Κύπρος)", "cy", "357"],
					["Czech Republic (Česká republika)", "cz", "420"],
					["Denmark (Danmark)", "dk", "45"],
					["Djibouti", "dj", "253"],
					["Dominica", "dm", "1", 13, ["767"]],
					["Dominican Republic (República Dominicana)", "do", "1", 2, ["809", "829", "849"]],
					["Ecuador", "ec", "593"],
					["Egypt (‫مصر‬‎)", "eg", "20"],
					["El Salvador", "sv", "503"],
					["Equatorial Guinea (Guinea Ecuatorial)", "gq", "240"],
					["Eritrea", "er", "291"],
					["Estonia (Eesti)", "ee", "372"],
					["Ethiopia", "et", "251"],
					["Falkland Islands (Islas Malvinas)", "fk", "500"],
					["Faroe Islands (Føroyar)", "fo", "298"],
					["Fiji", "fj", "679"],
					["Finland (Suomi)", "fi", "358", 0],
					["France", "fr", "33"],
					["French Guiana (Guyane française)", "gf", "594"],
					["French Polynesia (Polynésie française)", "pf", "689"],
					["Gabon", "ga", "241"],
					["Gambia", "gm", "220"],
					["Georgia (საქართველო)", "ge", "995"],
					["Germany (Deutschland)", "de", "49"],
					["Ghana (Gaana)", "gh", "233"],
					["Gibraltar", "gi", "350"],
					["Greece (Ελλάδα)", "gr", "30"],
					["Greenland (Kalaallit Nunaat)", "gl", "299"],
					["Grenada", "gd", "1", 14, ["473"]],
					["Guadeloupe", "gp", "590", 0],
					["Guam", "gu", "1", 15, ["671"]],
					["Guatemala", "gt", "502"],
					["Guernsey", "gg", "44", 1, ["1481", "7781", "7839", "7911"]],
					["Guinea (Guinée)", "gn", "224"],
					["Guinea-Bissau (Guiné Bissau)", "gw", "245"],
					["Guyana", "gy", "592"],
					["Haiti", "ht", "509"],
					["Honduras", "hn", "504"],
					["Hong Kong (香港)", "hk", "852"],
					["Hungary (Magyarország)", "hu", "36"],
					["Iceland (Ísland)", "is", "354"],
					["India (भारत)", "in", "91"],
					["Indonesia", "id", "62"],
					["Iran (‫ایران‬‎)", "ir", "98"],
					["Iraq (‫العراق‬‎)", "iq", "964"],
					["Ireland", "ie", "353"],
					["Isle of Man", "im", "44", 2, ["1624", "74576", "7524", "7924", "7624"]],
					["Israel (‫ישראל‬‎)", "il", "972"],
					["Italy (Italia)", "it", "39", 0],
					["Jamaica", "jm", "1", 4, ["876", "658"]],
					["Japan (日本)", "jp", "81"],
					["Jersey", "je", "44", 3, ["1534", "7509", "7700", "7797", "7829", "7937"]],
					["Jordan (‫الأردن‬‎)", "jo", "962"],
					["Kazakhstan (Казахстан)", "kz", "7", 1, ["33", "7"]],
					["Kenya", "ke", "254"],
					["Kiribati", "ki", "686"],
					["Kosovo", "xk", "383"],
					["Kuwait (‫الكويت‬‎)", "kw", "965"],
					["Kyrgyzstan (Кыргызстан)", "kg", "996"],
					["Laos (ລາວ)", "la", "856"],
					["Latvia (Latvija)", "lv", "371"],
					["Lebanon (‫لبنان‬‎)", "lb", "961"],
					["Lesotho", "ls", "266"],
					["Liberia", "lr", "231"],
					["Libya (‫ليبيا‬‎)", "ly", "218"],
					["Liechtenstein", "li", "423"],
					["Lithuania (Lietuva)", "lt", "370"],
					["Luxembourg", "lu", "352"],
					["Macau (澳門)", "mo", "853"],
					["Macedonia (FYROM) (Македонија)", "mk", "389"],
					["Madagascar (Madagasikara)", "mg", "261"],
					["Malawi", "mw", "265"],
					["Malaysia", "my", "60"],
					["Maldives", "mv", "960"],
					["Mali", "ml", "223"],
					["Malta", "mt", "356"],
					["Marshall Islands", "mh", "692"],
					["Martinique", "mq", "596"],
					["Mauritania (‫موريتانيا‬‎)", "mr", "222"],
					["Mauritius (Moris)", "mu", "230"],
					["Mayotte", "yt", "262", 1, ["269", "639"]],
					["Mexico (México)", "mx", "52"],
					["Micronesia", "fm", "691"],
					["Moldova (Republica Moldova)", "md", "373"],
					["Monaco", "mc", "377"],
					["Mongolia (Монгол)", "mn", "976"],
					["Montenegro (Crna Gora)", "me", "382"],
					["Montserrat", "ms", "1", 16, ["664"]],
					["Morocco (‫المغرب‬‎)", "ma", "212", 0],
					["Mozambique (Moçambique)", "mz", "258"],
					["Myanmar (Burma) (မြန်မာ)", "mm", "95"],
					["Namibia (Namibië)", "na", "264"],
					["Nauru", "nr", "674"],
					["Nepal (नेपाल)", "np", "977"],
					["Netherlands (Nederland)", "nl", "31"],
					["New Caledonia (Nouvelle-Calédonie)", "nc", "687"],
					["New Zealand", "nz", "64"],
					["Nicaragua", "ni", "505"],
					["Niger (Nijar)", "ne", "227"],
					["Nigeria", "ng", "234"],
					["Niue", "nu", "683"],
					["Norfolk Island", "nf", "672"],
					["North Korea (조선 민주주의 인민 공화국)", "kp", "850"],
					["Northern Mariana Islands", "mp", "1", 17, ["670"]],
					["Norway (Norge)", "no", "47", 0],
					["Oman (‫عُمان‬‎)", "om", "968"],
					["Pakistan (‫پاکستان‬‎)", "pk", "92"],
					["Palau", "pw", "680"],
					["Palestine (‫فلسطين‬‎)", "ps", "970"],
					["Panama (Panamá)", "pa", "507"],
					["Papua New Guinea", "pg", "675"],
					["Paraguay", "py", "595"],
					["Peru (Perú)", "pe", "51"],
					["Philippines", "ph", "63"],
					["Poland (Polska)", "pl", "48"],
					["Portugal", "pt", "351"],
					["Puerto Rico", "pr", "1", 3, ["787", "939"]],
					["Qatar (‫قطر‬‎)", "qa", "974"],
					["Réunion (La Réunion)", "re", "262", 0],
					["Romania (România)", "ro", "40"],
					["Russia (Россия)", "ru", "7", 0],
					["Rwanda", "rw", "250"],
					["Saint Barthélemy", "bl", "590", 1],
					["Saint Helena", "sh", "290"],
					["Saint Kitts and Nevis", "kn", "1", 18, ["869"]],
					["Saint Lucia", "lc", "1", 19, ["758"]],
					["Saint Martin (Saint-Martin (partie française))", "mf", "590", 2],
					["Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", "pm", "508"],
					["Saint Vincent and the Grenadines", "vc", "1", 20, ["784"]],
					["Samoa", "ws", "685"],
					["San Marino", "sm", "378"],
					["São Tomé and Príncipe (São Tomé e Príncipe)", "st", "239"],
					["Saudi Arabia (‫المملكة العربية السعودية‬‎)", "sa", "966"],
					["Senegal (Sénégal)", "sn", "221"],
					["Serbia (Србија)", "rs", "381"],
					["Seychelles", "sc", "248"],
					["Sierra Leone", "sl", "232"],
					["Singapore", "sg", "65"],
					["Sint Maarten", "sx", "1", 21, ["721"]],
					["Slovakia (Slovensko)", "sk", "421"],
					["Slovenia (Slovenija)", "si", "386"],
					["Solomon Islands", "sb", "677"],
					["Somalia (Soomaaliya)", "so", "252"],
					["South Africa", "za", "27"],
					["South Korea (대한민국)", "kr", "82"],
					["South Sudan (‫جنوب السودان‬‎)", "ss", "211"],
					["Spain (España)", "es", "34"],
					["Sri Lanka (ශ්‍රී ලංකාව)", "lk", "94"],
					["Sudan (‫السودان‬‎)", "sd", "249"],
					["Suriname", "sr", "597"],
					["Svalbard and Jan Mayen", "sj", "47", 1, ["79"]],
					["Swaziland", "sz", "268"],
					["Sweden (Sverige)", "se", "46"],
					["Switzerland (Schweiz)", "ch", "41"],
					["Syria (‫سوريا‬‎)", "sy", "963"],
					["Taiwan (台灣)", "tw", "886"],
					["Tajikistan", "tj", "992"],
					["Tanzania", "tz", "255"],
					["Thailand (ไทย)", "th", "66"],
					["Timor-Leste", "tl", "670"],
					["Togo", "tg", "228"],
					["Tokelau", "tk", "690"],
					["Tonga", "to", "676"],
					["Trinidad and Tobago", "tt", "1", 22, ["868"]],
					["Tunisia (‫تونس‬‎)", "tn", "216"],
					["Turkey (Türkiye)", "tr", "90"],
					["Turkmenistan", "tm", "993"],
					["Turks and Caicos Islands", "tc", "1", 23, ["649"]],
					["Tuvalu", "tv", "688"],
					["U.S. Virgin Islands", "vi", "1", 24, ["340"]],
					["Uganda", "ug", "256"],
					["Ukraine (Україна)", "ua", "380"],
					["United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", "ae", "971"],
					["United Kingdom", "gb", "44", 0],
					["United States", "us", "1", 0],
					["Uruguay", "uy", "598"],
					["Uzbekistan (Oʻzbekiston)", "uz", "998"],
					["Vanuatu", "vu", "678"],
					["Vatican City (Città del Vaticano)", "va", "39", 1, ["06698"]],
					["Venezuela", "ve", "58"],
					["Vietnam (Việt Nam)", "vn", "84"],
					["Wallis and Futuna (Wallis-et-Futuna)", "wf", "681"],
					["Western Sahara (‫الصحراء الغربية‬‎)", "eh", "212", 1, ["5288", "5289"]],
					["Yemen (‫اليمن‬‎)", "ye", "967"],
					["Zambia", "zm", "260"],
					["Zimbabwe", "zw", "263"],
					["Åland Islands", "ax", "358", 1, ["18"]]
				], h = 0; h < g.length; h++) {
				var i = g[h];
				g[h] = {
					name: i[0],
					iso2: i[1],
					dialCode: i[2],
					priority: i[3] || 0,
					areaCodes: i[4] || null
				}
			}
			a.intlTelInputGlobals = {
				getInstance: function (b) {
					var c = b.getAttribute("data-intl-tel-input-id");
					return a.intlTelInputGlobals.instances[c]
				},
				instances: {}
			};
			var j = 0,
				k = {
					allowDropdown: !0,
					autoHideDialCode: !0,
					autoPlaceholder: "polite",
					customContainer: "",
					customPlaceholder: null,
					dropdownContainer: null,
					excludeCountries: [],
					formatOnDisplay: !0,
					geoIpLookup: null,
					hiddenInput: "",
					initialCountry: "",
					localizedCountries: null,
					nationalMode: !0,
					onlyCountries: [],
					placeholderNumberType: "MOBILE",
					preferredCountries: ["us", "gb"],
					separateDialCode: !1,
					utilsScript: ""
				},
				l = ["800", "822", "833", "844", "855", "866", "877", "880", "881", "882", "883", "884", "885", "886", "887", "888", "889"];
			a.addEventListener("load", function () {
				a.intlTelInputGlobals.windowLoaded = !0
			});
			var m = function (a, b) {
					for (var c = Object.keys(a), d = 0; d < c.length; d++) b(c[d], a[c[d]])
				},
				n = function (b) {
					m(a.intlTelInputGlobals.instances, function (c) {
						a.intlTelInputGlobals.instances[c][b]()
					})
				},
				o = function () {
					function e(a, b) {
						var c = this;
						d(this, e), this.id = j++, this.a = a, this.b = null, this.c = null;
						var f = b || {};
						this.d = {}, m(k, function (a, b) {
							c.d[a] = f.hasOwnProperty(a) ? f[a] : b
						}), this.e = Boolean(a.getAttribute("placeholder"))
					}
					return f(e, [{
						key: "_init",
						value: function () {
							var a = this;
							if (this.d.nationalMode && (this.d.autoHideDialCode = !1), this.d.separateDialCode && (this.d.autoHideDialCode = this.d.nationalMode = !1), this.g = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent), this.g && (b.body.classList.add("iti-mobile"), this.d.dropdownContainer || (this.d.dropdownContainer = b.body)), "undefined" != typeof Promise) {
								var c = new Promise(function (b, c) {
										a.h = b, a.i = c
									}),
									d = new Promise(function (b, c) {
										a.i0 = b, a.i1 = c
									});
								this.promise = Promise.all([c, d])
							} else this.h = this.i = function () {}, this.i0 = this.i1 = function () {};
							this.s = {}, this._b(), this._f(), this._h(), this._i(), this._i3()
						}
					}, {
						key: "_b",
						value: function () {
							this._d(), this._d2(), this._e(), this.d.localizedCountries && this._d0(), (this.d.onlyCountries.length || this.d.localizedCountries) && this.p.sort(this._d1)
						}
					}, {
						key: "_c",
						value: function (a, b, d) {
							b.length > this.dialCodeMaxLen && (this.dialCodeMaxLen = b.length), this.q.hasOwnProperty(b) || (this.q[b] = []);
							for (var e = 0; e < this.q[b].length; e++)
								if (this.q[b][e] === a) return;
							var f = d !== c ? d : this.q[b].length;
							this.q[b][f] = a
						}
					}, {
						key: "_d",
						value: function () {
							if (this.d.onlyCountries.length) {
								var a = this.d.onlyCountries.map(function (a) {
									return a.toLowerCase()
								});
								this.p = g.filter(function (b) {
									return a.indexOf(b.iso2) > -1
								})
							} else if (this.d.excludeCountries.length) {
								var b = this.d.excludeCountries.map(function (a) {
									return a.toLowerCase()
								});
								this.p = g.filter(function (a) {
									return -1 === b.indexOf(a.iso2)
								})
							} else this.p = g
						}
					}, {
						key: "_d0",
						value: function () {
							for (var a = 0; a < this.p.length; a++) {
								var b = this.p[a].iso2.toLowerCase();
								this.d.localizedCountries.hasOwnProperty(b) && (this.p[a].name = this.d.localizedCountries[b])
							}
						}
					}, {
						key: "_d1",
						value: function (a, b) {
							return a.name.localeCompare(b.name)
						}
					}, {
						key: "_d2",
						value: function () {
							this.dialCodeMaxLen = 0, this.q = {};
							for (var a = 0; a < this.p.length; a++) {
								var b = this.p[a];
								this._c(b.iso2, b.dialCode, b.priority)
							}
							for (var c = 0; c < this.p.length; c++) {
								var d = this.p[c];
								if (d.areaCodes)
									for (var e = this.q[d.dialCode][0], f = 0; f < d.areaCodes.length; f++) {
										for (var g = d.areaCodes[f], h = 1; h < g.length; h++) {
											var i = d.dialCode + g.substr(0, h);
											this._c(e, i), this._c(d.iso2, i)
										}
										this._c(d.iso2, d.dialCode + g)
									}
							}
						}
					}, {
						key: "_e",
						value: function () {
							this.preferredCountries = [];
							for (var a = 0; a < this.d.preferredCountries.length; a++) {
								var b = this.d.preferredCountries[a].toLowerCase(),
									c = this._y(b, !1, !0);
								c && this.preferredCountries.push(c)
							}
						}
					}, {
						key: "_e2",
						value: function (a, c, d) {
							var e = b.createElement(a);
							return c && m(c, function (a, b) {
								return e.setAttribute(a, b)
							}), d && d.appendChild(e), e
						}
					}, {
						key: "_f",
						value: function () {
							this.a.setAttribute("autocomplete", "off");
							var a = "iti";
							this.d.allowDropdown && (a += " iti--allow-dropdown"), this.d.separateDialCode && (a += " iti--separate-dial-code"), this.d.customContainer && (a += " ", a += this.d.customContainer);
							var b = this._e2("div", {
								"class": a
							});
							if (this.a.parentNode.insertBefore(b, this.a), this.k = this._e2("div", {
									"class": "iti__flag-container"
								}, b), b.appendChild(this.a), this.selectedFlag = this._e2("div", {
									"class": "iti__selected-flag",
									role: "combobox",
									"aria-owns": "country-listbox"
								}, this.k), this.l = this._e2("div", {
									"class": "iti__flag"
								}, this.selectedFlag), this.d.separateDialCode && (this.t = this._e2("div", {
									"class": "iti__selected-dial-code"
								}, this.selectedFlag)), this.d.allowDropdown && (this.selectedFlag.setAttribute("tabindex", "0"), this.u = this._e2("div", {
									"class": "iti__arrow"
								}, this.selectedFlag), this.m = this._e2("ul", {
									"class": "iti__country-list iti__hide",
									id: "country-listbox",
									"aria-expanded": "false",
									role: "listbox"
								}), this.preferredCountries.length && (this._g(this.preferredCountries, "iti__preferred"), this._e2("li", {
									"class": "iti__divider",
									role: "separator",
									"aria-disabled": "true"
								}, this.m)), this._g(this.p, "iti__standard"), this.d.dropdownContainer ? (this.dropdown = this._e2("div", {
									"class": "iti iti--container"
								}), this.dropdown.appendChild(this.m)) : this.k.appendChild(this.m)), this.d.hiddenInput) {
								var c = this.d.hiddenInput,
									d = this.a.getAttribute("name");
								if (d) {
									var e = d.lastIndexOf("["); - 1 !== e && (c = "".concat(d.substr(0, e), "[").concat(c, "]"))
								}
								this.hiddenInput = this._e2("input", {
									type: "hidden",
									name: c
								}), b.appendChild(this.hiddenInput)
							}
						}
					}, {
						key: "_g",
						value: function (a, b) {
							for (var c = "", d = 0; d < a.length; d++) {
								var e = a[d];
								c += "<li class='iti__country ".concat(b, "' tabIndex='-1' id='iti-item-").concat(e.iso2, "' role='option' data-dial-code='").concat(e.dialCode, "' data-country-code='").concat(e.iso2, "'>"), c += "<div class='iti__flag-box'><div class='iti__flag iti__".concat(e.iso2, "'></div></div>"), c += "<span class='iti__country-name'>".concat(e.name, "</span>"), c += "<span class='iti__dial-code'>+".concat(e.dialCode, "</span>"), c += "</li>"
							}
							this.m.insertAdjacentHTML("beforeend", c)
						}
					}, {
						key: "_h",
						value: function () {
							var a = this.a.value,
								b = this._5(a),
								c = this._w(a),
								d = this.d,
								e = d.initialCountry,
								f = d.nationalMode,
								g = d.autoHideDialCode,
								h = d.separateDialCode;
							b && !c ? this._v(a) : "auto" !== e && (e ? this._z(e.toLowerCase()) : b && c ? this._z("us") : (this.j = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.p[0].iso2, a || this._z(this.j)), a || f || g || h || (this.a.value = "+".concat(this.s.dialCode))), a && this._u(a)
						}
					}, {
						key: "_i",
						value: function () {
							this._j(), this.d.autoHideDialCode && this._l(), this.d.allowDropdown && this._i2(), this.hiddenInput && this._i0()
						}
					}, {
						key: "_i0",
						value: function () {
							var a = this;
							this._a14 = function () {
								a.hiddenInput.value = a.getNumber()
							}, this.a.form && this.a.form.addEventListener("submit", this._a14)
						}
					}, {
						key: "_i1",
						value: function () {
							for (var a = this.a; a && "LABEL" !== a.tagName;) a = a.parentNode;
							return a
						}
					}, {
						key: "_i2",
						value: function () {
							var a = this;
							this._a9 = function (b) {
								a.m.classList.contains("iti__hide") ? a.a.focus() : b.preventDefault()
							};
							var b = this._i1();
							b && b.addEventListener("click", this._a9), this._a10 = function () {
								!a.m.classList.contains("iti__hide") || a.a.disabled || a.a.readOnly || a._n()
							}, this.selectedFlag.addEventListener("click", this._a10), this._a11 = function (b) {
								a.m.classList.contains("iti__hide") && -1 !== ["ArrowUp", "Up", "ArrowDown", "Down", " ", "Enter"].indexOf(b.key) && (b.preventDefault(), b.stopPropagation(), a._n()), "Tab" === b.key && a._2()
							}, this.k.addEventListener("keydown", this._a11)
						}
					}, {
						key: "_i3",
						value: function () {
							var b = this;
							this.d.utilsScript && !a.intlTelInputUtils ? a.intlTelInputGlobals.windowLoaded ? a.intlTelInputGlobals.loadUtils(this.d.utilsScript) : a.addEventListener("load", function () {
								a.intlTelInputGlobals.loadUtils(b.d.utilsScript)
							}) : this.i0(), "auto" === this.d.initialCountry ? this._i4() : this.h()
						}
					}, {
						key: "_i4",
						value: function () {
							a.intlTelInputGlobals.autoCountry ? this.handleAutoCountry() : a.intlTelInputGlobals.startedLoadingAutoCountry || (a.intlTelInputGlobals.startedLoadingAutoCountry = !0, "function" == typeof this.d.geoIpLookup && this.d.geoIpLookup(function (b) {
								a.intlTelInputGlobals.autoCountry = b.toLowerCase(), setTimeout(function () {
									return n("handleAutoCountry")
								})
							}, function () {
								return n("rejectAutoCountryPromise")
							}))
						}
					}, {
						key: "_j",
						value: function () {
							var a = this;
							this._a12 = function () {
								//a._v(a.a.value) && a._8()
							}, this.a.addEventListener("keyup", this._a12), this._a13 = function () {
								setTimeout(a._a12)
							}, this.a.addEventListener("cut", this._a13), this.a.addEventListener("paste", this._a13)
						}
					}, {
						key: "_j2",
						value: function (a) {
							var b = this.a.getAttribute("maxlength");
							return b && a.length > b ? a.substr(0, b) : a
						}
					}, {
						key: "_l",
						value: function () {
							var a = this;
							this._a8 = function () {
								a._l2()
							}, this.a.form && this.a.form.addEventListener("submit", this._a8), this.a.addEventListener("blur", this._a8)
						}
					}, {
						key: "_l2",
						value: function () {
							if ("+" === this.a.value.charAt(0)) {
								var a = this._m(this.a.value);
								a && this.s.dialCode !== a || (this.a.value = "")
							}
						}
					}, {
						key: "_m",
						value: function (a) {
							return a.replace(/\D/g, "")
						}
					}, {
						key: "_m2",
						value: function (a) {
							var c = b.createEvent("Event");
							c.initEvent(a, !0, !0), this.a.dispatchEvent(c)
						}
					}, {
						key: "_n",
						value: function () {
							this.m.classList.remove("iti__hide"), this.m.setAttribute("aria-expanded", "true"), this._o(), this.b && (this._x(this.b, !1), this._3(this.b, !0)), this._p(), this.u.classList.add("iti__arrow--up"), this._m2("open:countrydropdown")
						}
					}, {
						key: "_n2",
						value: function (a, b, c) {
							c && !a.classList.contains(b) ? a.classList.add(b) : !c && a.classList.contains(b) && a.classList.remove(b)
						}
					}, {
						key: "_o",
						value: function () {
							var c = this;
							if (this.d.dropdownContainer && this.d.dropdownContainer.appendChild(this.dropdown), !this.g) {
								var d = this.a.getBoundingClientRect(),
									e = a.pageYOffset || b.documentElement.scrollTop,
									f = d.top + e,
									g = this.m.offsetHeight,
									h = f + this.a.offsetHeight + g < e + a.innerHeight,
									i = f - g > e;
								if (this._n2(this.m, "iti__country-list--dropup", !h && i), this.d.dropdownContainer) {
									var j = !h && i ? 0 : this.a.offsetHeight;
									this.dropdown.style.top = "".concat(f + j, "px"), this.dropdown.style.left = "".concat(d.left + b.body.scrollLeft, "px"), this._a4 = function () {
										return c._2()
									}, a.addEventListener("scroll", this._a4)
								}
							}
						}
					}, {
						key: "_o2",
						value: function (a) {
							for (var b = a; b && b !== this.m && !b.classList.contains("iti__country");) b = b.parentNode;
							return b === this.m ? null : b
						}
					}, {
						key: "_p",
						value: function () {
							var a = this;
							this._a0 = function (b) {
								var c = a._o2(b.target);
								c && a._x(c, !1)
							}, this.m.addEventListener("mouseover", this._a0), this._a1 = function (b) {
								var c = a._o2(b.target);
								c && a._1(c)
							}, this.m.addEventListener("click", this._a1);
							var c = !0;
							this._a2 = function () {
								c || a._2(), c = !1
							}, b.documentElement.addEventListener("click", this._a2);
							var d = "",
								e = null;
							this._a3 = function (b) {
								b.preventDefault(), "ArrowUp" === b.key || "Up" === b.key || "ArrowDown" === b.key || "Down" === b.key ? a._q(b.key) : "Enter" === b.key ? a._r() : "Escape" === b.key ? a._2() : /^[a-zA-ZÀ-ÿ ]$/.test(b.key) && (e && clearTimeout(e), d += b.key.toLowerCase(), a._s(d), e = setTimeout(function () {
									d = ""
								}, 1e3))
							}, b.addEventListener("keydown", this._a3)
						}
					}, {
						key: "_q",
						value: function (a) {
							var b = "ArrowUp" === a || "Up" === a ? this.c.previousElementSibling : this.c.nextElementSibling;
							b && (b.classList.contains("iti__divider") && (b = "ArrowUp" === a || "Up" === a ? b.previousElementSibling : b.nextElementSibling), this._x(b, !0))
						}
					}, {
						key: "_r",
						value: function () {
							this.c && this._1(this.c)
						}
					}, {
						key: "_s",
						value: function (a) {
							for (var b = 0; b < this.p.length; b++)
								if (this._t(this.p[b].name, a)) {
									var c = this.m.querySelector("#iti-item-".concat(this.p[b].iso2));
									this._x(c, !1), this._3(c, !0);
									break
								}
						}
					}, {
						key: "_t",
						value: function (a, b) {
							return a.substr(0, b.length).toLowerCase() === b
						}
					}, {
						key: "_u",
						value: function (b) {
							var c = b;
							if (this.d.formatOnDisplay && a.intlTelInputUtils && this.s) {
								var d = !this.d.separateDialCode && (this.d.nationalMode || "+" !== c.charAt(0)),
									e = intlTelInputUtils.numberFormat,
									f = e.NATIONAL,
									g = e.INTERNATIONAL,
									h = d ? f : g;
								c = intlTelInputUtils.formatNumber(c, this.s.iso2, h)
							}
							c = this._7(c), this.a.value = c
						}
					}, {
						key: "_v",
						value: function (a) {
							var b = a,
								c = this.s.dialCode,
								d = "1" === c;
							b && this.d.nationalMode && d && "+" !== b.charAt(0) && ("1" !== b.charAt(0) && (b = "1".concat(b)), b = "+".concat(b)), this.d.separateDialCode && c && "+" !== b.charAt(0) && (b = "+".concat(c).concat(b));
							var e = this._5(b),
								f = this._m(b),
								g = null;
							if (e) {
								var h = this.q[this._m(e)],
									i = -1 !== h.indexOf(this.s.iso2) && f.length <= e.length - 1;
								if (!("1" === c && this._w(f)) && !i)
									for (var j = 0; j < h.length; j++)
										if (h[j]) {
											g = h[j];
											break
										}
							} else "+" === b.charAt(0) && f.length ? g = "" : b && "+" !== b || (g = this.j);
							return null !== g && this._z(g)
						}
					}, {
						key: "_w",
						value: function (a) {
							var b = this._m(a);
							if ("1" === b.charAt(0)) {
								var c = b.substr(1, 3);
								return -1 !== l.indexOf(c)
							}
							return !1
						}
					}, {
						key: "_x",
						value: function (a, b) {
							var c = this.c;
							c && c.classList.remove("iti__highlight"), this.c = a, this.c.classList.add("iti__highlight"), b && this.c.focus()
						}
					}, {
						key: "_y",
						value: function (a, b, c) {
							for (var d = b ? g : this.p, e = 0; e < d.length; e++)
								if (d[e].iso2 === a) return d[e];
							if (c) return null;
							throw new Error("No country data for '".concat(a, "'"))
						}
					}, {
						key: "_z",
						value: function (a) {
							var b = this.s.iso2 ? this.s : {};
							this.s = a ? this._y(a, !1, !1) : {}, this.s.iso2 && (this.j = this.s.iso2), this.l.setAttribute("class", "iti__flag iti__".concat(a));
							var c = a ? "".concat(this.s.name, ": +").concat(this.s.dialCode) : "Unknown";
							if (this.selectedFlag.setAttribute("title", c), this.d.separateDialCode) {
								var d = this.s.dialCode ? "+".concat(this.s.dialCode) : "";
								this.t.innerHTML = d;
								var e = this.selectedFlag.offsetWidth || this._getHiddenSelectedFlagWidth();
							}
							if (this._0(), this.d.allowDropdown) {
								var f = this.b;
								if (f && (f.classList.remove("iti__active"), f.setAttribute("aria-selected", "false")), a) {
									var g = this.m.querySelector("#iti-item-".concat(a));
									g.setAttribute("aria-selected", "true"), g.classList.add("iti__active"), this.b = g, this.m.setAttribute("aria-activedescendant", g.getAttribute("id"))
								}
							}
							return b.iso2 !== a
						}
					}, {
						key: "_getHiddenSelectedFlagWidth",
						value: function () {
							var a = this.a.parentNode.cloneNode();
							a.style.visibility = "hidden", b.body.appendChild(a);
							var c = this.selectedFlag.cloneNode(!0);
							a.appendChild(c);
							var d = c.offsetWidth;
							return a.parentNode.removeChild(a), d
						}
					}, {
						key: "_0",
						value: function () {
							var b = "aggressive" === this.d.autoPlaceholder || !this.e && "polite" === this.d.autoPlaceholder;
							if (a.intlTelInputUtils && b) {
								var c = intlTelInputUtils.numberType[this.d.placeholderNumberType],
									d = this.s.iso2 ? intlTelInputUtils.getExampleNumber(this.s.iso2, this.d.nationalMode, c) : "";
								d = this._7(d), "function" == typeof this.d.customPlaceholder && (d = this.d.customPlaceholder(d, this.s)), this.a.setAttribute("placeholder", d)
							}
						}
					}, {
						key: "_1",
						value: function (a) {
							var b = this._z(a.getAttribute("data-country-code"));
							this._2(), this._4(a.getAttribute("data-dial-code"), !0), this.a.focus();
							var c = this.a.value.length;
							this.a.setSelectionRange(c, c), b && this._8()
						}
					}, {
						key: "_2",
						value: function () {
							this.m.classList.add("iti__hide"), this.m.setAttribute("aria-expanded", "false"), this.u.classList.remove("iti__arrow--up"), b.removeEventListener("keydown", this._a3), b.documentElement.removeEventListener("click", this._a2), this.m.removeEventListener("mouseover", this._a0), this.m.removeEventListener("click", this._a1), this.d.dropdownContainer && (this.g || a.removeEventListener("scroll", this._a4), this.dropdown.parentNode && this.dropdown.parentNode.removeChild(this.dropdown)), this._m2("close:countrydropdown")
						}
					}, {
						key: "_3",
						value: function (c, d) {
							var e = this.m,
								f = a.pageYOffset || b.documentElement.scrollTop,
								g = e.offsetHeight,
								h = e.getBoundingClientRect().top + f,
								i = h + g,
								j = c.offsetHeight,
								k = c.getBoundingClientRect().top + f,
								l = k + j,
								m = k - h + e.scrollTop,
								n = g / 2 - j / 2;
							if (k < h) d && (m -= n), e.scrollTop = m;
							else if (l > i) {
								d && (m += n);
								var o = g - j;
								e.scrollTop = m - o
							}
						}
					}, {
						key: "_4",
						value: function (a, b) {
							var c, d = this.a.value,
								e = "+".concat(a);
							if ("+" === d.charAt(0)) {
								var f = this._5(d);
								c = f ? d.replace(f, e) : e
							} else {
								if (this.d.nationalMode || this.d.separateDialCode) return;
								if (d) c = e + d;
								else {
									if (!b && this.d.autoHideDialCode) return;
									c = e
								}
							}
							this.a.value = c
						}
					}, {
						key: "_5",
						value: function (a) {
							var b = "";
							if ("+" === a.charAt(0))
								for (var c = "", d = 0; d < a.length; d++) {
									var e = a.charAt(d);
									if (!isNaN(parseInt(e, 10)) && (c += e, this.q[c] && (b = a.substr(0, d + 1)), c.length === this.dialCodeMaxLen)) break
								}
							return b
						}
					}, {
						key: "_6",
						value: function () {
							var a = this.a.value.trim(),
								b = this.s.dialCode,
								c = this._m(a);
							return (this.d.separateDialCode && "+" !== a.charAt(0) && b && c ? "+".concat(b) : "") + a
						}
					}, {
						key: "_7",
						value: function (a) {
							var b = a;
							if (this.d.separateDialCode) {
								var c = this._5(b);
								if (c) {
									c = "+".concat(this.s.dialCode);
									var d = " " === b[c.length] || "-" === b[c.length] ? c.length + 1 : c.length;
									b = b.substr(d)
								}
							}
							return this._j2(b)
						}
					}, {
						key: "_8",
						value: function () {
							this._m2("countrychange")
						}
					}, {
						key: "handleAutoCountry",
						value: function () {
							"auto" === this.d.initialCountry && (this.j = a.intlTelInputGlobals.autoCountry, this.a.value || this.setCountry(this.j), this.h())
						}
					}, {
						key: "handleUtils",
						value: function () {
							a.intlTelInputUtils && (this.a.value && this._u(this.a.value), this._0()), this.i0()
						}
					}, {
						key: "destroy",
						value: function () {
							var b = this.a.form;
							if (this.d.allowDropdown) {
								this._2(), this.selectedFlag.removeEventListener("click", this._a10), this.k.removeEventListener("keydown", this._a11);
								var c = this._i1();
								c && c.removeEventListener("click", this._a9)
							}
							this.hiddenInput && b && b.removeEventListener("submit", this._a14), this.d.autoHideDialCode && (b && b.removeEventListener("submit", this._a8), this.a.removeEventListener("blur", this._a8)), this.a.removeEventListener("keyup", this._a12), this.a.removeEventListener("cut", this._a13), this.a.removeEventListener("paste", this._a13), this.a.removeAttribute("data-intl-tel-input-id");
							var d = this.a.parentNode;
							d.parentNode.insertBefore(this.a, d), d.parentNode.removeChild(d), delete a.intlTelInputGlobals.instances[this.id]
						}
					}, {
						key: "getExtension",
						value: function () {
							return a.intlTelInputUtils ? intlTelInputUtils.getExtension(this._6(), this.s.iso2) : ""
						}
					}, {
						key: "getNumber",
						value: function (b) {
							if (a.intlTelInputUtils) {
								var c = this.s.iso2;
								return intlTelInputUtils.formatNumber(this._6(), c, b)
							}
							return ""
						}
					}, {
						key: "getNumberType",
						value: function () {
							return a.intlTelInputUtils ? intlTelInputUtils.getNumberType(this._6(), this.s.iso2) : -99
						}
					}, {
						key: "getSelectedCountryData",
						value: function () {
							return this.s
						}
					}, {
						key: "getValidationError",
						value: function () {
							if (a.intlTelInputUtils) {
								var b = this.s.iso2;
								return intlTelInputUtils.getValidationError(this._6(), b)
							}
							return -99
						}
					}, {
						key: "isValidNumber",
						value: function () {
							var b = this._6().trim(),
								c = this.d.nationalMode ? this.s.iso2 : "";
							return a.intlTelInputUtils ? intlTelInputUtils.isValidNumber(b, c) : null
						}
					}, {
						key: "setCountry",
						value: function (a) {
							var b = a.toLowerCase();
							this.l.classList.contains("iti__".concat(b)) || (this._z(b), this._4(this.s.dialCode, !1), this._8())
						}
					}, {
						key: "setNumber",
						value: function (a) {
							var b = this._v(a);
							this._u(a), b && this._8()
						}
					}, {
						key: "setPlaceholderNumberType",
						value: function (a) {
							this.d.placeholderNumberType = a, this._0()
						}
					}]), e
				}();
			a.intlTelInputGlobals.getCountryData = function () {
				return g
			};
			var p = function (a, c, d) {
				var e = b.createElement("script");
				e.onload = function () {
					n("handleUtils"), c && c()
				}, e.onerror = function () {
					n("rejectUtilsScriptPromise"), d && d()
				}, e.className = "iti-load-utils", e.async = !0, e.src = a, b.body.appendChild(e)
			};
			return a.intlTelInputGlobals.loadUtils = function (b) {
					if (!a.intlTelInputUtils && !a.intlTelInputGlobals.startedLoadingUtilsScript) {
						if (a.intlTelInputGlobals.startedLoadingUtilsScript = !0, "undefined" != typeof Promise) return new Promise(function (a, c) {
							return p(b, a, c)
						});
						p(b)
					}
					return null
				}, a.intlTelInputGlobals.defaults = k, a.intlTelInputGlobals.version = "16.0.8",
				function (b, c) {
					var d = new o(b, c);
					return d._init(), b.setAttribute("data-intl-tel-input-id", d.id), a.intlTelInputGlobals.instances[d.id] = d, d
				}
		}()
	}(window, document);
	"object" == typeof module && module.exports ? module.exports = b : window.intlTelInput = b
}();
/*!
 * dist/jquery.inputmask
 * https://github.com/RobinHerbots/Inputmask
 * Copyright (c) 2010 - 2019 Robin Herbots
 * Licensed under the MIT license
 * Version: 5.0.1-beta.0
 */
!function webpackUniversalModuleDefinition(root, factory) {
    if ("object" == typeof exports && "object" == typeof module) module.exports = factory(require("jquery")); else if ("function" == typeof define && define.amd) define([ "jquery" ], factory); else {
        var a = "object" == typeof exports ? factory(require("jquery")) : factory(root.jQuery);
        for (var i in a) ("object" == typeof exports ? exports : root)[i] = a[i];
    }
}(window, function(__WEBPACK_EXTERNAL_MODULE__3__) {
    return modules = [ function(module) {
        module.exports = JSON.parse('{"BACKSPACE":8,"BACKSPACE_SAFARI":127,"DELETE":46,"DOWN":40,"END":35,"ENTER":13,"ESCAPE":27,"HOME":36,"INSERT":45,"LEFT":37,"PAGE_DOWN":34,"PAGE_UP":33,"RIGHT":39,"SPACE":32,"TAB":9,"UP":38,"X":88,"CONTROL":17}');
    }, function(module, exports, __webpack_require__) {
        "use strict";
        function _typeof(obj) {
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function _typeof(obj) {
                return typeof obj;
            } : function _typeof(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, _typeof(obj);
        }
        var $ = __webpack_require__(2), window = __webpack_require__(4), document = window.document, generateMaskSet = __webpack_require__(5).generateMaskSet, analyseMask = __webpack_require__(5).analyseMask, maskScope = __webpack_require__(8);
        function Inputmask(alias, options, internal) {
            if (!(this instanceof Inputmask)) return new Inputmask(alias, options, internal);
            this.el = void 0, this.events = {}, this.maskset = void 0, this.refreshValue = !1, 
            !0 !== internal && ($.isPlainObject(alias) ? options = alias : (options = options || {}, 
            alias && (options.alias = alias)), this.opts = $.extend(!0, {}, this.defaults, options), 
            this.noMasksCache = options && void 0 !== options.definitions, this.userOptions = options || {}, 
            resolveAlias(this.opts.alias, options, this.opts), this.isRTL = this.opts.numericInput);
        }
        function resolveAlias(aliasStr, options, opts) {
            var aliasDefinition = Inputmask.prototype.aliases[aliasStr];
            return aliasDefinition ? (aliasDefinition.alias && resolveAlias(aliasDefinition.alias, void 0, opts), 
            $.extend(!0, opts, aliasDefinition), $.extend(!0, opts, options), !0) : (null === opts.mask && (opts.mask = aliasStr), 
            !1);
        }
        function importAttributeOptions(npt, opts, userOptions, dataAttribute) {
            function importOption(option, optionData) {
                optionData = void 0 !== optionData ? optionData : npt.getAttribute(dataAttribute + "-" + option), 
                null !== optionData && ("string" == typeof optionData && (0 === option.indexOf("on") ? optionData = window[optionData] : "false" === optionData ? optionData = !1 : "true" === optionData && (optionData = !0)), 
                userOptions[option] = optionData);
            }
            if (!0 === opts.importDataAttributes) {
                var attrOptions = npt.getAttribute(dataAttribute), option, dataoptions, optionData, p;
                if (attrOptions && "" !== attrOptions && (attrOptions = attrOptions.replace(/'/g, '"'), 
                dataoptions = JSON.parse("{" + attrOptions + "}")), dataoptions) for (p in optionData = void 0, 
                dataoptions) if ("alias" === p.toLowerCase()) {
                    optionData = dataoptions[p];
                    break;
                }
                for (option in importOption("alias", optionData), userOptions.alias && resolveAlias(userOptions.alias, userOptions, opts), 
                opts) {
                    if (dataoptions) for (p in optionData = void 0, dataoptions) if (p.toLowerCase() === option.toLowerCase()) {
                        optionData = dataoptions[p];
                        break;
                    }
                    importOption(option, optionData);
                }
            }
            return $.extend(!0, opts, userOptions), "rtl" !== npt.dir && !opts.rightAlign || (npt.style.textAlign = "right"), 
            "rtl" !== npt.dir && !opts.numericInput || (npt.dir = "ltr", npt.removeAttribute("dir"), 
            opts.isRTL = !0), Object.keys(userOptions).length;
        }
        Inputmask.prototype = {
            dataAttribute: "data-inputmask",
            defaults: {
                _maxTestPos: 500,
                placeholder: "_",
                optionalmarker: [ "[", "]" ],
                quantifiermarker: [ "{", "}" ],
                groupmarker: [ "(", ")" ],
                alternatormarker: "|",
                escapeChar: "\\",
                mask: null,
                regex: null,
                oncomplete: $.noop,
                onincomplete: $.noop,
                oncleared: $.noop,
                repeat: 0,
                greedy: !1,
                autoUnmask: !1,
                removeMaskOnSubmit: !1,
                clearMaskOnLostFocus: !0,
                insertMode: !0,
                insertModeVisual: !0,
                clearIncomplete: !1,
                alias: null,
                onKeyDown: $.noop,
                onBeforeMask: null,
                onBeforePaste: function onBeforePaste(pastedValue, opts) {
                    return $.isFunction(opts.onBeforeMask) ? opts.onBeforeMask.call(this, pastedValue, opts) : pastedValue;
                },
                onBeforeWrite: null,
                onUnMask: null,
                showMaskOnFocus: !0,
                showMaskOnHover: !0,
                onKeyValidation: $.noop,
                skipOptionalPartCharacter: " ",
                numericInput: !1,
                rightAlign: !1,
                undoOnEscape: !0,
                radixPoint: "",
                _radixDance: !1,
                groupSeparator: "",
                keepStatic: null,
                positionCaretOnTab: !0,
                tabThrough: !1,
                supportsInputType: [ "text", "tel", "url", "password", "search" ],
                ignorables: [ 8, 9, 19, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 229 ],
                isComplete: null,
                preValidation: null,
                postValidation: null,
                staticDefinitionSymbol: void 0,
                jitMasking: !1,
                nullable: !0,
                inputEventOnly: !1,
                noValuePatching: !1,
                positionCaretOnClick: "lvp",
                casing: null,
                inputmode: "text",
                importDataAttributes: !0,
                shiftPositions: !0
            },
            definitions: {
                9: {
                    validator: "[0-9\uff11-\uff19]",
                    definitionSymbol: "*"
                },
                a: {
                    validator: "[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",
                    definitionSymbol: "*"
                },
                "*": {
                    validator: "[0-9\uff11-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]"
                }
            },
            aliases: {},
            masksCache: {},
            mask: function mask(elems) {
                var that = this;
                return "string" == typeof elems && (elems = document.getElementById(elems) || document.querySelectorAll(elems)), 
                elems = elems.nodeName ? [ elems ] : elems, $.each(elems, function(ndx, el) {
                    var scopedOpts = $.extend(!0, {}, that.opts);
                    if (importAttributeOptions(el, scopedOpts, $.extend(!0, {}, that.userOptions), that.dataAttribute)) {
                        var maskset = generateMaskSet(scopedOpts, that.noMasksCache);
                        void 0 !== maskset && (void 0 !== el.inputmask && (el.inputmask.opts.autoUnmask = !0, 
                        el.inputmask.remove()), el.inputmask = new Inputmask(void 0, void 0, !0), el.inputmask.opts = scopedOpts, 
                        el.inputmask.noMasksCache = that.noMasksCache, el.inputmask.userOptions = $.extend(!0, {}, that.userOptions), 
                        el.inputmask.isRTL = scopedOpts.isRTL || scopedOpts.numericInput, el.inputmask.el = el, 
                        el.inputmask.maskset = maskset, $.data(el, "_inputmask_opts", scopedOpts), maskScope.call(el.inputmask, {
                            action: "mask"
                        }));
                    }
                }), elems && elems[0] && elems[0].inputmask || this;
            },
            option: function option(options, noremask) {
                return "string" == typeof options ? this.opts[options] : "object" === _typeof(options) ? ($.extend(this.userOptions, options), 
                this.el && !0 !== noremask && this.mask(this.el), this) : void 0;
            },
            unmaskedvalue: function unmaskedvalue(value) {
                return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
                maskScope.call(this, {
                    action: "unmaskedvalue",
                    value: value
                });
            },
            remove: function remove() {
                return maskScope.call(this, {
                    action: "remove"
                });
            },
            getemptymask: function getemptymask() {
                return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
                maskScope.call(this, {
                    action: "getemptymask"
                });
            },
            hasMaskedValue: function hasMaskedValue() {
                return !this.opts.autoUnmask;
            },
            isComplete: function isComplete() {
                return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
                maskScope.call(this, {
                    action: "isComplete"
                });
            },
            getmetadata: function getmetadata() {
                return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
                maskScope.call(this, {
                    action: "getmetadata"
                });
            },
            isValid: function isValid(value) {
                return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
                maskScope.call(this, {
                    action: "isValid",
                    value: value
                });
            },
            format: function format(value, metadata) {
                return this.maskset = this.maskset || generateMaskSet(this.opts, this.noMasksCache), 
                maskScope.call(this, {
                    action: "format",
                    value: value,
                    metadata: metadata
                });
            },
            setValue: function setValue(value) {
                this.el && $(this.el).trigger("setvalue", [ value ]);
            },
            analyseMask: analyseMask
        }, Inputmask.extendDefaults = function(options) {
            $.extend(!0, Inputmask.prototype.defaults, options);
        }, Inputmask.extendDefinitions = function(definition) {
            $.extend(!0, Inputmask.prototype.definitions, definition);
        }, Inputmask.extendAliases = function(alias) {
            $.extend(!0, Inputmask.prototype.aliases, alias);
        }, Inputmask.format = function(value, options, metadata) {
            return Inputmask(options).format(value, metadata);
        }, Inputmask.unmask = function(value, options) {
            return Inputmask(options).unmaskedvalue(value);
        }, Inputmask.isValid = function(value, options) {
            return Inputmask(options).isValid(value);
        }, Inputmask.remove = function(elems) {
            "string" == typeof elems && (elems = document.getElementById(elems) || document.querySelectorAll(elems)), 
            elems = elems.nodeName ? [ elems ] : elems, $.each(elems, function(ndx, el) {
                el.inputmask && el.inputmask.remove();
            });
        }, Inputmask.setValue = function(elems, value) {
            "string" == typeof elems && (elems = document.getElementById(elems) || document.querySelectorAll(elems)), 
            elems = elems.nodeName ? [ elems ] : elems, $.each(elems, function(ndx, el) {
                el.inputmask ? el.inputmask.setValue(value) : $(el).trigger("setvalue", [ value ]);
            });
        };
        var escapeRegexRegex = new RegExp("(\\" + [ "/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^" ].join("|\\") + ")", "gim");
        Inputmask.escapeRegex = function(str) {
            return str.replace(escapeRegexRegex, "\\$1");
        }, Inputmask.dependencyLib = $, window.Inputmask = Inputmask, module.exports = Inputmask;
    }, function(module, exports, __webpack_require__) {
        "use strict";
        var jquery = __webpack_require__(3);
        if (void 0 === jquery) throw "jQuery not loaded!";
        module.exports = jquery;
    }, function(module, exports) {
        module.exports = __WEBPACK_EXTERNAL_MODULE__3__;
    }, function(module, exports, __webpack_require__) {
        "use strict";
        var __WEBPACK_AMD_DEFINE_RESULT__;
        function _typeof(obj) {
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function _typeof(obj) {
                return typeof obj;
            } : function _typeof(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, _typeof(obj);
        }
        __WEBPACK_AMD_DEFINE_RESULT__ = function() {
            return "undefined" != typeof window ? window : new (eval("require('jsdom').JSDOM"))("").window;
        }.call(exports, __webpack_require__, exports, module), void 0 === __WEBPACK_AMD_DEFINE_RESULT__ || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__);
    }, function(module, exports, __webpack_require__) {
        "use strict";
        var $ = __webpack_require__(2);
        function generateMaskSet(opts, nocache) {
            var ms;
            function generateMask(mask, metadata, opts) {
                var regexMask = !1, masksetDefinition, maskdefKey;
                if (null !== mask && "" !== mask || (regexMask = null !== opts.regex, mask = regexMask ? (mask = opts.regex, 
                mask.replace(/^(\^)(.*)(\$)$/, "$2")) : (regexMask = !0, ".*")), 1 === mask.length && !1 === opts.greedy && 0 !== opts.repeat && (opts.placeholder = ""), 
                0 < opts.repeat || "*" === opts.repeat || "+" === opts.repeat) {
                    var repeatStart = "*" === opts.repeat ? 0 : "+" === opts.repeat ? 1 : opts.repeat;
                    mask = opts.groupmarker[0] + mask + opts.groupmarker[1] + opts.quantifiermarker[0] + repeatStart + "," + opts.repeat + opts.quantifiermarker[1];
                }
                return maskdefKey = regexMask ? "regex_" + opts.regex : opts.numericInput ? mask.split("").reverse().join("") : mask, 
                !1 !== opts.keepStatic && (maskdefKey = "ks_" + maskdefKey), void 0 === Inputmask.prototype.masksCache[maskdefKey] || !0 === nocache ? (masksetDefinition = {
                    mask: mask,
                    maskToken: Inputmask.prototype.analyseMask(mask, regexMask, opts),
                    validPositions: {},
                    _buffer: void 0,
                    buffer: void 0,
                    tests: {},
                    excludes: {},
                    metadata: metadata,
                    maskLength: void 0,
                    jitOffset: {}
                }, !0 !== nocache && (Inputmask.prototype.masksCache[maskdefKey] = masksetDefinition, 
                masksetDefinition = $.extend(!0, {}, Inputmask.prototype.masksCache[maskdefKey]))) : masksetDefinition = $.extend(!0, {}, Inputmask.prototype.masksCache[maskdefKey]), 
                masksetDefinition;
            }
            if ($.isFunction(opts.mask) && (opts.mask = opts.mask(opts)), $.isArray(opts.mask)) {
                if (1 < opts.mask.length) {
                    null === opts.keepStatic && (opts.keepStatic = !0);
                    var altMask = opts.groupmarker[0];
                    return $.each(opts.isRTL ? opts.mask.reverse() : opts.mask, function(ndx, msk) {
                        1 < altMask.length && (altMask += opts.groupmarker[1] + opts.alternatormarker + opts.groupmarker[0]), 
                        void 0 === msk.mask || $.isFunction(msk.mask) ? altMask += msk : altMask += msk.mask;
                    }), altMask += opts.groupmarker[1], generateMask(altMask, opts.mask, opts);
                }
                opts.mask = opts.mask.pop();
            }
            return null === opts.keepStatic && (opts.keepStatic = !1), ms = opts.mask && void 0 !== opts.mask.mask && !$.isFunction(opts.mask.mask) ? generateMask(opts.mask.mask, opts.mask, opts) : generateMask(opts.mask, opts.mask, opts), 
            ms;
        }
        function analyseMask(mask, regexMask, opts) {
            var tokenizer = /(?:[?*+]|\{[0-9+*]+(?:,[0-9+*]*)?(?:\|[0-9+*]*)?\})|[^.?*+^${[]()|\\]+|./g, regexTokenizer = /\[\^?]?(?:[^\\\]]+|\\[\S\s]?)*]?|\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9][0-9]*|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|c[A-Za-z]|[\S\s]?)|\((?:\?[:=!]?)?|(?:[?*+]|\{[0-9]+(?:,[0-9]*)?\})\??|[^.?*+^${[()|\\]+|./g, escaped = !1, currentToken = new MaskToken(), match, m, openenings = [], maskTokens = [], openingToken, currentOpeningToken, alternator, lastMatch, closeRegexGroup = !1;
            function MaskToken(isGroup, isOptional, isQuantifier, isAlternator) {
                this.matches = [], this.openGroup = isGroup || !1, this.alternatorGroup = !1, this.isGroup = isGroup || !1, 
                this.isOptional = isOptional || !1, this.isQuantifier = isQuantifier || !1, this.isAlternator = isAlternator || !1, 
                this.quantifier = {
                    min: 1,
                    max: 1
                };
            }
            function insertTestDefinition(mtoken, element, position) {
                position = void 0 !== position ? position : mtoken.matches.length;
                var prevMatch = mtoken.matches[position - 1];
                if (regexMask) 0 === element.indexOf("[") || escaped && /\\d|\\s|\\w]/i.test(element) || "." === element ? mtoken.matches.splice(position++, 0, {
                    fn: new RegExp(element, opts.casing ? "i" : ""),
                    static: !1,
                    optionality: !1,
                    newBlockMarker: void 0 === prevMatch ? "master" : prevMatch.def !== element,
                    casing: null,
                    def: element,
                    placeholder: void 0,
                    nativeDef: element
                }) : (escaped && (element = element[element.length - 1]), $.each(element.split(""), function(ndx, lmnt) {
                    prevMatch = mtoken.matches[position - 1], mtoken.matches.splice(position++, 0, {
                        fn: /[a-z]/i.test(opts.staticDefinitionSymbol || lmnt) ? new RegExp("[" + (opts.staticDefinitionSymbol || lmnt) + "]", opts.casing ? "i" : "") : null,
                        static: !0,
                        optionality: !1,
                        newBlockMarker: void 0 === prevMatch ? "master" : prevMatch.def !== lmnt && !0 !== prevMatch.static,
                        casing: null,
                        def: opts.staticDefinitionSymbol || lmnt,
                        placeholder: void 0 !== opts.staticDefinitionSymbol ? lmnt : void 0,
                        nativeDef: (escaped ? "'" : "") + lmnt
                    });
                })), escaped = !1; else {
                    var maskdef = (opts.definitions ? opts.definitions[element] : void 0) || Inputmask.prototype.definitions[element];
                    maskdef && !escaped ? mtoken.matches.splice(position++, 0, {
                        fn: maskdef.validator ? "string" == typeof maskdef.validator ? new RegExp(maskdef.validator, opts.casing ? "i" : "") : new function() {
                            this.test = maskdef.validator;
                        }() : new RegExp("."),
                        static: maskdef.static || !1,
                        optionality: !1,
                        newBlockMarker: void 0 === prevMatch ? "master" : prevMatch.def !== (maskdef.definitionSymbol || element),
                        casing: maskdef.casing,
                        def: maskdef.definitionSymbol || element,
                        placeholder: maskdef.placeholder,
                        nativeDef: element,
                        generated: maskdef.generated
                    }) : (mtoken.matches.splice(position++, 0, {
                        fn: /[a-z]/i.test(opts.staticDefinitionSymbol || element) ? new RegExp("[" + (opts.staticDefinitionSymbol || element) + "]", opts.casing ? "i" : "") : null,
                        static: !0,
                        optionality: !1,
                        newBlockMarker: void 0 === prevMatch ? "master" : prevMatch.def !== element && !0 !== prevMatch.static,
                        casing: null,
                        def: opts.staticDefinitionSymbol || element,
                        placeholder: void 0 !== opts.staticDefinitionSymbol ? element : void 0,
                        nativeDef: (escaped ? "'" : "") + element
                    }), escaped = !1);
                }
            }
            function verifyGroupMarker(maskToken) {
                maskToken && maskToken.matches && $.each(maskToken.matches, function(ndx, token) {
                    var nextToken = maskToken.matches[ndx + 1];
                    (void 0 === nextToken || void 0 === nextToken.matches || !1 === nextToken.isQuantifier) && token && token.isGroup && (token.isGroup = !1, 
                    regexMask || (insertTestDefinition(token, opts.groupmarker[0], 0), !0 !== token.openGroup && insertTestDefinition(token, opts.groupmarker[1]))), 
                    verifyGroupMarker(token);
                });
            }
            function defaultCase() {
                if (0 < openenings.length) {
                    if (currentOpeningToken = openenings[openenings.length - 1], insertTestDefinition(currentOpeningToken, m), 
                    currentOpeningToken.isAlternator) {
                        alternator = openenings.pop();
                        for (var mndx = 0; mndx < alternator.matches.length; mndx++) alternator.matches[mndx].isGroup && (alternator.matches[mndx].isGroup = !1);
                        0 < openenings.length ? (currentOpeningToken = openenings[openenings.length - 1], 
                        currentOpeningToken.matches.push(alternator)) : currentToken.matches.push(alternator);
                    }
                } else insertTestDefinition(currentToken, m);
            }
            function reverseTokens(maskToken) {
                function reverseStatic(st) {
                    return st === opts.optionalmarker[0] ? st = opts.optionalmarker[1] : st === opts.optionalmarker[1] ? st = opts.optionalmarker[0] : st === opts.groupmarker[0] ? st = opts.groupmarker[1] : st === opts.groupmarker[1] && (st = opts.groupmarker[0]), 
                    st;
                }
                for (var match in maskToken.matches = maskToken.matches.reverse(), maskToken.matches) if (Object.prototype.hasOwnProperty.call(maskToken.matches, match)) {
                    var intMatch = parseInt(match);
                    if (maskToken.matches[match].isQuantifier && maskToken.matches[intMatch + 1] && maskToken.matches[intMatch + 1].isGroup) {
                        var qt = maskToken.matches[match];
                        maskToken.matches.splice(match, 1), maskToken.matches.splice(intMatch + 1, 0, qt);
                    }
                    void 0 !== maskToken.matches[match].matches ? maskToken.matches[match] = reverseTokens(maskToken.matches[match]) : maskToken.matches[match] = reverseStatic(maskToken.matches[match]);
                }
                return maskToken;
            }
            function groupify(matches) {
                var groupToken = new MaskToken(!0);
                return groupToken.openGroup = !1, groupToken.matches = matches, groupToken;
            }
            function closeGroup() {
                if (openingToken = openenings.pop(), openingToken.openGroup = !1, void 0 !== openingToken) if (0 < openenings.length) {
                    if (currentOpeningToken = openenings[openenings.length - 1], currentOpeningToken.matches.push(openingToken), 
                    currentOpeningToken.isAlternator) {
                        alternator = openenings.pop();
                        for (var mndx = 0; mndx < alternator.matches.length; mndx++) alternator.matches[mndx].isGroup = !1, 
                        alternator.matches[mndx].alternatorGroup = !1;
                        0 < openenings.length ? (currentOpeningToken = openenings[openenings.length - 1], 
                        currentOpeningToken.matches.push(alternator)) : currentToken.matches.push(alternator);
                    }
                } else currentToken.matches.push(openingToken); else defaultCase();
            }
            function groupQuantifier(matches) {
                var lastMatch = matches.pop();
                return lastMatch.isQuantifier && (lastMatch = groupify([ matches.pop(), lastMatch ])), 
                lastMatch;
            }
            for (regexMask && (opts.optionalmarker[0] = void 0, opts.optionalmarker[1] = void 0); match = regexMask ? regexTokenizer.exec(mask) : tokenizer.exec(mask); ) {
                if (m = match[0], regexMask) switch (m.charAt(0)) {
                  case "?":
                    m = "{0,1}";
                    break;

                  case "+":
                  case "*":
                    m = "{" + m + "}";
                    break;

                  case "|":
                    if (0 === openenings.length) {
                        var altRegexGroup = groupify(currentToken.matches);
                        altRegexGroup.openGroup = !0, openenings.push(altRegexGroup), currentToken.matches = [], 
                        closeRegexGroup = !0;
                    }
                    break;
                }
                if (escaped) defaultCase(); else switch (m.charAt(0)) {
                  case "(?=":
                    break;

                  case "(?!":
                    break;

                  case "(?<=":
                    break;

                  case "(?<!":
                    break;

                  case opts.escapeChar:
                    escaped = !0, regexMask && defaultCase();
                    break;

                  case opts.optionalmarker[1]:
                  case opts.groupmarker[1]:
                    closeGroup();
                    break;

                  case opts.optionalmarker[0]:
                    openenings.push(new MaskToken(!1, !0));
                    break;

                  case opts.groupmarker[0]:
                    openenings.push(new MaskToken(!0));
                    break;

                  case opts.quantifiermarker[0]:
                    var quantifier = new MaskToken(!1, !1, !0);
                    m = m.replace(/[{}]/g, "");
                    var mqj = m.split("|"), mq = mqj[0].split(","), mq0 = isNaN(mq[0]) ? mq[0] : parseInt(mq[0]), mq1 = 1 === mq.length ? mq0 : isNaN(mq[1]) ? mq[1] : parseInt(mq[1]);
                    "*" !== mq0 && "+" !== mq0 || (mq0 = "*" === mq1 ? 0 : 1), quantifier.quantifier = {
                        min: mq0,
                        max: mq1,
                        jit: mqj[1]
                    };
                    var matches = 0 < openenings.length ? openenings[openenings.length - 1].matches : currentToken.matches;
                    if (match = matches.pop(), match.isAlternator) {
                        matches.push(match), matches = match.matches;
                        var groupToken = new MaskToken(!0), tmpMatch = matches.pop();
                        matches.push(groupToken), matches = groupToken.matches, match = tmpMatch;
                    }
                    match.isGroup || (match = groupify([ match ])), matches.push(match), matches.push(quantifier);
                    break;

                  case opts.alternatormarker:
                    if (0 < openenings.length) {
                        currentOpeningToken = openenings[openenings.length - 1];
                        var subToken = currentOpeningToken.matches[currentOpeningToken.matches.length - 1];
                        lastMatch = currentOpeningToken.openGroup && (void 0 === subToken.matches || !1 === subToken.isGroup && !1 === subToken.isAlternator) ? openenings.pop() : groupQuantifier(currentOpeningToken.matches);
                    } else lastMatch = groupQuantifier(currentToken.matches);
                    if (lastMatch.isAlternator) openenings.push(lastMatch); else if (lastMatch.alternatorGroup ? (alternator = openenings.pop(), 
                    lastMatch.alternatorGroup = !1) : alternator = new MaskToken(!1, !1, !1, !0), alternator.matches.push(lastMatch), 
                    openenings.push(alternator), lastMatch.openGroup) {
                        lastMatch.openGroup = !1;
                        var alternatorGroup = new MaskToken(!0);
                        alternatorGroup.alternatorGroup = !0, openenings.push(alternatorGroup);
                    }
                    break;

                  default:
                    defaultCase();
                }
            }
            for (closeRegexGroup && closeGroup(); 0 < openenings.length; ) openingToken = openenings.pop(), 
            currentToken.matches.push(openingToken);
            return 0 < currentToken.matches.length && (verifyGroupMarker(currentToken), maskTokens.push(currentToken)), 
            (opts.numericInput || opts.isRTL) && reverseTokens(maskTokens[0]), maskTokens;
        }
        module.exports = {
            generateMaskSet: generateMaskSet,
            analyseMask: analyseMask
        };
    }, function(module, exports, __webpack_require__) {
        "use strict";
        __webpack_require__(7), __webpack_require__(9), __webpack_require__(10), module.exports = __webpack_require__(1);
    }, function(module, exports, __webpack_require__) {
        "use strict";
        var Inputmask = __webpack_require__(1);
        Inputmask.extendDefinitions({
            A: {
                validator: "[A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",
                casing: "upper"
            },
            "&": {
                validator: "[0-9A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5]",
                casing: "upper"
            },
            "#": {
                validator: "[0-9A-Fa-f]",
                casing: "upper"
            }
        });
        var ipValidatorRegex = new RegExp("25[0-5]|2[0-4][0-9]|[01][0-9][0-9]");
        function ipValidator(chrs, maskset, pos, strict, opts) {
            return chrs = -1 < pos - 1 && "." !== maskset.buffer[pos - 1] ? (chrs = maskset.buffer[pos - 1] + chrs, 
            -1 < pos - 2 && "." !== maskset.buffer[pos - 2] ? maskset.buffer[pos - 2] + chrs : "0" + chrs) : "00" + chrs, 
            ipValidatorRegex.test(chrs);
        }
        Inputmask.extendAliases({
            cssunit: {
                regex: "[+-]?[0-9]+\\.?([0-9]+)?(px|em|rem|ex|%|in|cm|mm|pt|pc)"
            },
            url: {
                regex: "(https?|ftp)//.*",
                autoUnmask: !1
            },
            ip: {
                mask: "i[i[i]].j[j[j]].k[k[k]].l[l[l]]",
                definitions: {
                    i: {
                        validator: ipValidator
                    },
                    j: {
                        validator: ipValidator
                    },
                    k: {
                        validator: ipValidator
                    },
                    l: {
                        validator: ipValidator
                    }
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    return maskedValue;
                },
                inputmode: "numeric"
            },
            email: {
                mask: "*{1,64}[.*{1,64}][.*{1,64}][.*{1,63}]@-{1,63}.-{1,63}[.-{1,63}][.-{1,63}]",
                greedy: !1,
                casing: "lower",
                onBeforePaste: function onBeforePaste(pastedValue, opts) {
                    return pastedValue = pastedValue.toLowerCase(), pastedValue.replace("mailto:", "");
                },
                definitions: {
                    "*": {
                        validator: "[0-9\uff11-\uff19A-Za-z\u0410-\u044f\u0401\u0451\xc0-\xff\xb5!#$%&'*+/=?^_`{|}~-]"
                    },
                    "-": {
                        validator: "[0-9A-Za-z-]"
                    }
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    return maskedValue;
                },
                inputmode: "email"
            },
            mac: {
                mask: "##:##:##:##:##:##"
            },
            vin: {
                mask: "V{13}9{4}",
                definitions: {
                    V: {
                        validator: "[A-HJ-NPR-Za-hj-npr-z\\d]",
                        casing: "upper"
                    }
                },
                clearIncomplete: !0,
                autoUnmask: !0
            }
        }), module.exports = Inputmask;
    }, function(module, exports, __webpack_require__) {
        "use strict";
        function _typeof(obj) {
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function _typeof(obj) {
                return typeof obj;
            } : function _typeof(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, _typeof(obj);
        }
        var $ = __webpack_require__(2), window = __webpack_require__(4), document = window.document, ua = window.navigator && window.navigator.userAgent || "", ie = 0 < ua.indexOf("MSIE ") || 0 < ua.indexOf("Trident/"), mobile = "ontouchstart" in window, iemobile = /iemobile/i.test(ua), iphone = /iphone/i.test(ua) && !iemobile, keyCode = __webpack_require__(0);
        module.exports = function maskScope(actionObj, maskset, opts) {
            maskset = maskset || this.maskset, opts = opts || this.opts;
            var inputmask = this, el = this.el, isRTL = this.isRTL || (this.isRTL = opts.numericInput), undoValue, $el, skipKeyPressEvent = !1, skipInputEvent = !1, validationEvent = !1, ignorable = !1, maxLength, mouseEnter = !1, originalPlaceholder = void 0;
            function getMaskTemplate(baseOnInput, minimalPos, includeMode, noJit, clearOptionalTail) {
                var greedy = opts.greedy;
                clearOptionalTail && (opts.greedy = !1), minimalPos = minimalPos || 0;
                var maskTemplate = [], ndxIntlzr, pos = 0, test, testPos;
                do {
                    if (!0 === baseOnInput && maskset.validPositions[pos]) testPos = clearOptionalTail && !0 === maskset.validPositions[pos].match.optionality && void 0 === maskset.validPositions[pos + 1] && (!0 === maskset.validPositions[pos].generatedInput || maskset.validPositions[pos].input == opts.skipOptionalPartCharacter && 0 < pos) ? determineTestTemplate(pos, getTests(pos, ndxIntlzr, pos - 1)) : maskset.validPositions[pos], 
                    test = testPos.match, ndxIntlzr = testPos.locator.slice(), maskTemplate.push(!0 === includeMode ? testPos.input : !1 === includeMode ? test.nativeDef : getPlaceholder(pos, test)); else {
                        testPos = getTestTemplate(pos, ndxIntlzr, pos - 1), test = testPos.match, ndxIntlzr = testPos.locator.slice();
                        var jitMasking = !0 !== noJit && (!1 !== opts.jitMasking ? opts.jitMasking : test.jit);
                        (!1 === jitMasking || void 0 === jitMasking || "number" == typeof jitMasking && isFinite(jitMasking) && pos < jitMasking) && maskTemplate.push(!1 === includeMode ? test.nativeDef : getPlaceholder(pos, test));
                    }
                    pos++;
                } while ((void 0 === maxLength || pos < maxLength) && (!0 !== test.static || "" !== test.def) || pos < minimalPos);
                return "" === maskTemplate[maskTemplate.length - 1] && maskTemplate.pop(), !1 === includeMode && void 0 !== maskset.maskLength || (maskset.maskLength = pos - 1), 
                opts.greedy = greedy, maskTemplate;
            }
            function resetMaskSet(soft) {
                maskset.buffer = void 0, !0 !== soft && (maskset.validPositions = {}, maskset.p = 0);
            }
            function getLastValidPosition(closestTo, strict, validPositions) {
                var before = -1, after = -1, valids = validPositions || maskset.validPositions;
                for (var posNdx in void 0 === closestTo && (closestTo = -1), valids) {
                    var psNdx = parseInt(posNdx);
                    valids[psNdx] && (strict || !0 !== valids[psNdx].generatedInput) && (psNdx <= closestTo && (before = psNdx), 
                    closestTo <= psNdx && (after = psNdx));
                }
                return -1 === before || before == closestTo ? after : -1 == after ? before : closestTo - before < after - closestTo ? before : after;
            }
            function getDecisionTaker(tst) {
                var decisionTaker = tst.locator[tst.alternation];
                return "string" == typeof decisionTaker && 0 < decisionTaker.length && (decisionTaker = decisionTaker.split(",")[0]), 
                void 0 !== decisionTaker ? decisionTaker.toString() : "";
            }
            function getLocator(tst, align) {
                var locator = (null != tst.alternation ? tst.mloc[getDecisionTaker(tst)] : tst.locator).join("");
                if ("" !== locator) for (;locator.length < align; ) locator += "0";
                return locator;
            }
            function determineTestTemplate(pos, tests) {
                pos = 0 < pos ? pos - 1 : 0;
                for (var altTest = getTest(pos), targetLocator = getLocator(altTest), tstLocator, closest, bestMatch, ndx = 0; ndx < tests.length; ndx++) {
                    var tst = tests[ndx];
                    tstLocator = getLocator(tst, targetLocator.length);
                    var distance = Math.abs(tstLocator - targetLocator);
                    (void 0 === closest || "" !== tstLocator && distance < closest || bestMatch && !opts.greedy && bestMatch.match.optionality && "master" === bestMatch.match.newBlockMarker && (!tst.match.optionality || !tst.match.newBlockMarker) || bestMatch && bestMatch.match.optionalQuantifier && !tst.match.optionalQuantifier) && (closest = distance, 
                    bestMatch = tst);
                }
                return bestMatch;
            }
            function getTestTemplate(pos, ndxIntlzr, tstPs) {
                return maskset.validPositions[pos] || determineTestTemplate(pos, getTests(pos, ndxIntlzr ? ndxIntlzr.slice() : ndxIntlzr, tstPs));
            }
            function getTest(pos, tests) {
                return maskset.validPositions[pos] ? maskset.validPositions[pos] : (tests || getTests(pos))[0];
            }
            function positionCanMatchDefinition(pos, testDefinition, opts) {
                for (var valid = !1, tests = getTests(pos), defProp = opts.shiftPositions ? "def" : "nativeDef", tndx = 0; tndx < tests.length; tndx++) if (tests[tndx].match && tests[tndx].match[defProp] === testDefinition.match[defProp]) {
                    valid = !0;
                    break;
                }
                return !1 === valid && void 0 !== maskset.jitOffset[pos] && (valid = positionCanMatchDefinition(pos + maskset.jitOffset[pos], testDefinition, opts)), 
                valid;
            }
            function getTests(pos, ndxIntlzr, tstPs) {
                var maskTokens = maskset.maskToken, testPos = ndxIntlzr ? tstPs : 0, ndxInitializer = ndxIntlzr ? ndxIntlzr.slice() : [ 0 ], matches = [], insertStop = !1, latestMatch, cacheDependency = ndxIntlzr ? ndxIntlzr.join("") : "";
                function resolveTestFromToken(maskToken, ndxInitializer, loopNdx, quantifierRecurse) {
                    function handleMatch(match, loopNdx, quantifierRecurse) {
                        function isFirstMatch(latestMatch, tokenGroup) {
                            var firstMatch = 0 === $.inArray(latestMatch, tokenGroup.matches);
                            return firstMatch || $.each(tokenGroup.matches, function(ndx, match) {
                                if (!0 === match.isQuantifier ? firstMatch = isFirstMatch(latestMatch, tokenGroup.matches[ndx - 1]) : Object.prototype.hasOwnProperty.call(match, "matches") && (firstMatch = isFirstMatch(latestMatch, match)), 
                                firstMatch) return !1;
                            }), firstMatch;
                        }
                        function resolveNdxInitializer(pos, alternateNdx, targetAlternation) {
                            var bestMatch, indexPos;
                            if ((maskset.tests[pos] || maskset.validPositions[pos]) && $.each(maskset.tests[pos] || [ maskset.validPositions[pos] ], function(ndx, lmnt) {
                                if (lmnt.mloc[alternateNdx]) return bestMatch = lmnt, !1;
                                var alternation = void 0 !== targetAlternation ? targetAlternation : lmnt.alternation, ndxPos = void 0 !== lmnt.locator[alternation] ? lmnt.locator[alternation].toString().indexOf(alternateNdx) : -1;
                                (void 0 === indexPos || ndxPos < indexPos) && -1 !== ndxPos && (bestMatch = lmnt, 
                                indexPos = ndxPos);
                            }), bestMatch) {
                                var bestMatchAltIndex = bestMatch.locator[bestMatch.alternation], locator = bestMatch.mloc[alternateNdx] || bestMatch.mloc[bestMatchAltIndex] || bestMatch.locator;
                                return locator.slice((void 0 !== targetAlternation ? targetAlternation : bestMatch.alternation) + 1);
                            }
                            return void 0 !== targetAlternation ? resolveNdxInitializer(pos, alternateNdx) : void 0;
                        }
                        function isSubsetOf(source, target) {
                            function expand(pattern) {
                                for (var expanded = [], start = -1, end, i = 0, l = pattern.length; i < l; i++) if ("-" === pattern.charAt(i)) for (end = pattern.charCodeAt(i + 1); ++start < end; ) expanded.push(String.fromCharCode(start)); else start = pattern.charCodeAt(i), 
                                expanded.push(pattern.charAt(i));
                                return expanded.join("");
                            }
                            return source.match.def === target.match.nativeDef || !(!(opts.regex || source.match.fn instanceof RegExp && target.match.fn instanceof RegExp) || !0 === source.match.static || !0 === target.match.static) && -1 !== expand(target.match.fn.toString().replace(/[[\]/]/g, "")).indexOf(expand(source.match.fn.toString().replace(/[[\]/]/g, "")));
                        }
                        function staticCanMatchDefinition(source, target) {
                            return !0 === source.match.static && !0 !== target.match.static && target.match.fn.test(source.match.def, maskset, pos, !1, opts, !1);
                        }
                        function setMergeLocators(targetMatch, altMatch) {
                            var alternationNdx = targetMatch.alternation, shouldMerge = void 0 === altMatch || alternationNdx === altMatch.alternation && -1 === targetMatch.locator[alternationNdx].toString().indexOf(altMatch.locator[alternationNdx]);
                            if (!shouldMerge && alternationNdx > altMatch.alternation) for (var i = altMatch.alternation; i < alternationNdx; i++) if (targetMatch.locator[i] !== altMatch.locator[i]) {
                                alternationNdx = i, shouldMerge = !0;
                                break;
                            }
                            if (shouldMerge) {
                                targetMatch.mloc = targetMatch.mloc || {};
                                var locNdx = targetMatch.locator[alternationNdx];
                                if (void 0 !== locNdx) {
                                    if ("string" == typeof locNdx && (locNdx = locNdx.split(",")[0]), void 0 === targetMatch.mloc[locNdx] && (targetMatch.mloc[locNdx] = targetMatch.locator.slice()), 
                                    void 0 !== altMatch) {
                                        for (var ndx in altMatch.mloc) "string" == typeof ndx && (ndx = ndx.split(",")[0]), 
                                        void 0 === targetMatch.mloc[ndx] && (targetMatch.mloc[ndx] = altMatch.mloc[ndx]);
                                        targetMatch.locator[alternationNdx] = Object.keys(targetMatch.mloc).join(",");
                                    }
                                    return !0;
                                }
                                targetMatch.alternation = void 0;
                            }
                            return !1;
                        }
                        if (testPos > opts._maxTestPos && void 0 !== quantifierRecurse) throw "Inputmask: There is probably an error in your mask definition or in the code. Create an issue on github with an example of the mask you are using. " + maskset.mask;
                        if (testPos === pos && void 0 === match.matches) return matches.push({
                            match: match,
                            locator: loopNdx.reverse(),
                            cd: cacheDependency,
                            mloc: {}
                        }), !0;
                        if (void 0 !== match.matches) {
                            if (match.isGroup && quantifierRecurse !== match) {
                                if (match = handleMatch(maskToken.matches[$.inArray(match, maskToken.matches) + 1], loopNdx, quantifierRecurse), 
                                match) return !0;
                            } else if (match.isOptional) {
                                var optionalToken = match, mtchsNdx = matches.length;
                                if (match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse), 
                                match) {
                                    if ($.each(matches, function(ndx, mtch) {
                                        mtchsNdx <= ndx && (mtch.match.optionality = !0);
                                    }), latestMatch = matches[matches.length - 1].match, void 0 !== quantifierRecurse || !isFirstMatch(latestMatch, optionalToken)) return !0;
                                    insertStop = !0, testPos = pos;
                                }
                            } else if (match.isAlternator) {
                                var alternateToken = match, malternateMatches = [], maltMatches, currentMatches = matches.slice(), loopNdxCnt = loopNdx.length, altIndex = 0 < ndxInitializer.length ? ndxInitializer.shift() : -1;
                                if (-1 === altIndex || "string" == typeof altIndex) {
                                    var currentPos = testPos, ndxInitializerClone = ndxInitializer.slice(), altIndexArr = [], amndx;
                                    if ("string" == typeof altIndex) altIndexArr = altIndex.split(","); else for (amndx = 0; amndx < alternateToken.matches.length; amndx++) altIndexArr.push(amndx.toString());
                                    if (void 0 !== maskset.excludes[pos]) {
                                        for (var altIndexArrClone = altIndexArr.slice(), i = 0, el = maskset.excludes[pos].length; i < el; i++) {
                                            var excludeSet = maskset.excludes[pos][i].toString().split(":");
                                            loopNdx.length == excludeSet[1] && altIndexArr.splice(altIndexArr.indexOf(excludeSet[0]), 1);
                                        }
                                        0 === altIndexArr.length && (delete maskset.excludes[pos], altIndexArr = altIndexArrClone);
                                    }
                                    (!0 === opts.keepStatic || isFinite(parseInt(opts.keepStatic)) && currentPos >= opts.keepStatic) && (altIndexArr = altIndexArr.slice(0, 1));
                                    for (var unMatchedAlternation = !1, ndx = 0; ndx < altIndexArr.length; ndx++) {
                                        amndx = parseInt(altIndexArr[ndx]), matches = [], ndxInitializer = "string" == typeof altIndex && resolveNdxInitializer(testPos, amndx, loopNdxCnt) || ndxInitializerClone.slice(), 
                                        alternateToken.matches[amndx] && handleMatch(alternateToken.matches[amndx], [ amndx ].concat(loopNdx), quantifierRecurse) ? match = !0 : 0 === ndx && (unMatchedAlternation = !0), 
                                        maltMatches = matches.slice(), testPos = currentPos, matches = [];
                                        for (var ndx1 = 0; ndx1 < maltMatches.length; ndx1++) {
                                            var altMatch = maltMatches[ndx1], dropMatch = !1;
                                            altMatch.match.jit = altMatch.match.jit || unMatchedAlternation, altMatch.alternation = altMatch.alternation || loopNdxCnt, 
                                            setMergeLocators(altMatch);
                                            for (var ndx2 = 0; ndx2 < malternateMatches.length; ndx2++) {
                                                var altMatch2 = malternateMatches[ndx2];
                                                if ("string" != typeof altIndex || void 0 !== altMatch.alternation && -1 !== $.inArray(altMatch.locator[altMatch.alternation].toString(), altIndexArr)) {
                                                    if (altMatch.match.nativeDef === altMatch2.match.nativeDef) {
                                                        dropMatch = !0, setMergeLocators(altMatch2, altMatch);
                                                        break;
                                                    }
                                                    if (isSubsetOf(altMatch, altMatch2)) {
                                                        setMergeLocators(altMatch, altMatch2) && (dropMatch = !0, malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch));
                                                        break;
                                                    }
                                                    if (isSubsetOf(altMatch2, altMatch)) {
                                                        setMergeLocators(altMatch2, altMatch);
                                                        break;
                                                    }
                                                    if (staticCanMatchDefinition(altMatch, altMatch2)) {
                                                        setMergeLocators(altMatch, altMatch2) && (dropMatch = !0, malternateMatches.splice(malternateMatches.indexOf(altMatch2), 0, altMatch));
                                                        break;
                                                    }
                                                }
                                            }
                                            dropMatch || malternateMatches.push(altMatch);
                                        }
                                    }
                                    matches = currentMatches.concat(malternateMatches), testPos = pos, insertStop = 0 < matches.length, 
                                    match = 0 < malternateMatches.length, ndxInitializer = ndxInitializerClone.slice();
                                } else match = handleMatch(alternateToken.matches[altIndex] || maskToken.matches[altIndex], [ altIndex ].concat(loopNdx), quantifierRecurse);
                                if (match) return !0;
                            } else if (match.isQuantifier && quantifierRecurse !== maskToken.matches[$.inArray(match, maskToken.matches) - 1]) for (var qt = match, qndx = 0 < ndxInitializer.length ? ndxInitializer.shift() : 0; qndx < (isNaN(qt.quantifier.max) ? qndx + 1 : qt.quantifier.max) && testPos <= pos; qndx++) {
                                var tokenGroup = maskToken.matches[$.inArray(qt, maskToken.matches) - 1];
                                if (match = handleMatch(tokenGroup, [ qndx ].concat(loopNdx), tokenGroup), match) {
                                    if (latestMatch = matches[matches.length - 1].match, latestMatch.optionalQuantifier = qndx >= qt.quantifier.min, 
                                    latestMatch.jit = (qndx || 1) * tokenGroup.matches.indexOf(latestMatch) >= qt.quantifier.jit, 
                                    latestMatch.optionalQuantifier && isFirstMatch(latestMatch, tokenGroup)) {
                                        insertStop = !0, testPos = pos;
                                        break;
                                    }
                                    return latestMatch.jit && (maskset.jitOffset[pos] = tokenGroup.matches.length - tokenGroup.matches.indexOf(latestMatch)), 
                                    !0;
                                }
                            } else if (match = resolveTestFromToken(match, ndxInitializer, loopNdx, quantifierRecurse), 
                            match) return !0;
                        } else testPos++;
                    }
                    for (var tndx = 0 < ndxInitializer.length ? ndxInitializer.shift() : 0; tndx < maskToken.matches.length; tndx++) if (!0 !== maskToken.matches[tndx].isQuantifier) {
                        var match = handleMatch(maskToken.matches[tndx], [ tndx ].concat(loopNdx), quantifierRecurse);
                        if (match && testPos === pos) return match;
                        if (pos < testPos) break;
                    }
                }
                function mergeLocators(pos, tests) {
                    var locator = [];
                    return $.isArray(tests) || (tests = [ tests ]), 0 < tests.length && (void 0 === tests[0].alternation || !0 === opts.keepStatic ? (locator = determineTestTemplate(pos, tests.slice()).locator.slice(), 
                    0 === locator.length && (locator = tests[0].locator.slice())) : $.each(tests, function(ndx, tst) {
                        if ("" !== tst.def) if (0 === locator.length) locator = tst.locator.slice(); else for (var i = 0; i < locator.length; i++) tst.locator[i] && -1 === locator[i].toString().indexOf(tst.locator[i]) && (locator[i] += "," + tst.locator[i]);
                    })), locator;
                }
                if (-1 < pos && (void 0 === maxLength || pos < maxLength)) {
                    if (void 0 === ndxIntlzr) {
                        for (var previousPos = pos - 1, test; void 0 === (test = maskset.validPositions[previousPos] || maskset.tests[previousPos]) && -1 < previousPos; ) previousPos--;
                        void 0 !== test && -1 < previousPos && (ndxInitializer = mergeLocators(previousPos, test), 
                        cacheDependency = ndxInitializer.join(""), testPos = previousPos);
                    }
                    if (maskset.tests[pos] && maskset.tests[pos][0].cd === cacheDependency) return maskset.tests[pos];
                    for (var mtndx = ndxInitializer.shift(); mtndx < maskTokens.length; mtndx++) {
                        var match = resolveTestFromToken(maskTokens[mtndx], ndxInitializer, [ mtndx ]);
                        if (match && testPos === pos || pos < testPos) break;
                    }
                }
                return 0 !== matches.length && !insertStop || matches.push({
                    match: {
                        fn: null,
                        static: !0,
                        optionality: !1,
                        casing: null,
                        def: "",
                        placeholder: ""
                    },
                    locator: [],
                    mloc: {},
                    cd: cacheDependency
                }), void 0 !== ndxIntlzr && maskset.tests[pos] ? $.extend(!0, [], matches) : (maskset.tests[pos] = $.extend(!0, [], matches), 
                maskset.tests[pos]);
            }
            function getBufferTemplate() {
                return void 0 === maskset._buffer && (maskset._buffer = getMaskTemplate(!1, 1), 
                void 0 === maskset.buffer && (maskset.buffer = maskset._buffer.slice())), maskset._buffer;
            }
            function getBuffer(noCache) {
                return void 0 !== maskset.buffer && !0 !== noCache || (maskset.buffer = getMaskTemplate(!0, getLastValidPosition(), !0), 
                void 0 === maskset._buffer && (maskset._buffer = maskset.buffer.slice())), maskset.buffer;
            }
            function refreshFromBuffer(start, end, buffer) {
                var i, p, skipOptionalPartCharacter = opts.skipOptionalPartCharacter, bffr = isRTL ? buffer.slice().reverse() : buffer;
                if (opts.skipOptionalPartCharacter = "", !0 === start) resetMaskSet(), maskset.tests = {}, 
                start = 0, end = buffer.length, p = determineNewCaretPosition({
                    begin: 0,
                    end: 0
                }, !1).begin; else {
                    for (i = start; i < end; i++) delete maskset.validPositions[i];
                    p = start;
                }
                var keypress = new $.Event("keypress");
                for (i = start; i < end; i++) {
                    keypress.which = bffr[i].toString().charCodeAt(0), ignorable = !1;
                    var valResult = EventHandlers.keypressEvent.call(el, keypress, !0, !1, !1, p);
                    !1 !== valResult && (p = valResult.forwardPosition);
                }
                opts.skipOptionalPartCharacter = skipOptionalPartCharacter;
            }
            function casing(elem, test, pos) {
                switch (opts.casing || test.casing) {
                  case "upper":
                    elem = elem.toUpperCase();
                    break;

                  case "lower":
                    elem = elem.toLowerCase();
                    break;

                  case "title":
                    var posBefore = maskset.validPositions[pos - 1];
                    elem = 0 === pos || posBefore && posBefore.input === String.fromCharCode(keyCode.SPACE) ? elem.toUpperCase() : elem.toLowerCase();
                    break;

                  default:
                    if ($.isFunction(opts.casing)) {
                        var args = Array.prototype.slice.call(arguments);
                        args.push(maskset.validPositions), elem = opts.casing.apply(this, args);
                    }
                }
                return elem;
            }
            function checkAlternationMatch(altArr1, altArr2, na) {
                for (var altArrC = opts.greedy ? altArr2 : altArr2.slice(0, 1), isMatch = !1, naArr = void 0 !== na ? na.split(",") : [], naNdx, i = 0; i < naArr.length; i++) -1 !== (naNdx = altArr1.indexOf(naArr[i])) && altArr1.splice(naNdx, 1);
                for (var alndx = 0; alndx < altArr1.length; alndx++) if (-1 !== $.inArray(altArr1[alndx], altArrC)) {
                    isMatch = !0;
                    break;
                }
                return isMatch;
            }
            function alternate(maskPos, c, strict, fromIsValid, rAltPos, selection) {
                var validPsClone = $.extend(!0, {}, maskset.validPositions), tstClone = $.extend(!0, {}, maskset.tests), lastAlt, alternation, isValidRslt = !1, returnRslt = !1, altPos, prevAltPos, i, validPos, decisionPos, lAltPos = void 0 !== rAltPos ? rAltPos : getLastValidPosition(), nextPos, input, begin, end;
                if (selection && (begin = selection.begin, end = selection.end, selection.begin > selection.end && (begin = selection.end, 
                end = selection.begin)), -1 === lAltPos && void 0 === rAltPos) lastAlt = 0, prevAltPos = getTest(lastAlt), 
                alternation = prevAltPos.alternation; else for (;0 <= lAltPos; lAltPos--) if (altPos = maskset.validPositions[lAltPos], 
                altPos && void 0 !== altPos.alternation) {
                    if (prevAltPos && prevAltPos.locator[altPos.alternation] !== altPos.locator[altPos.alternation]) break;
                    lastAlt = lAltPos, alternation = maskset.validPositions[lastAlt].alternation, prevAltPos = altPos;
                }
                if (void 0 !== alternation) {
                    decisionPos = parseInt(lastAlt), maskset.excludes[decisionPos] = maskset.excludes[decisionPos] || [], 
                    !0 !== maskPos && maskset.excludes[decisionPos].push(getDecisionTaker(prevAltPos) + ":" + prevAltPos.alternation);
                    var validInputs = [], resultPos = -1;
                    for (i = decisionPos; i < getLastValidPosition(void 0, !0) + 1; i++) -1 === resultPos && maskPos <= i && void 0 !== c && (validInputs.push(c), 
                    resultPos = validInputs.length - 1), validPos = maskset.validPositions[i], validPos && !0 !== validPos.generatedInput && (void 0 === selection || i < begin || end <= i) && validInputs.push(validPos.input), 
                    delete maskset.validPositions[i];
                    for (-1 === resultPos && void 0 !== c && (validInputs.push(c), resultPos = validInputs.length - 1); void 0 !== maskset.excludes[decisionPos] && maskset.excludes[decisionPos].length < 10; ) {
                        for (maskset.tests = {}, resetMaskSet(!0), isValidRslt = !0, i = 0; i < validInputs.length && (nextPos = isValidRslt.caret || getLastValidPosition(void 0, !0) + 1, 
                        input = validInputs[i], isValidRslt = isValid(nextPos, input, !1, fromIsValid, !0)); i++) i === resultPos && (returnRslt = isValidRslt), 
                        1 == maskPos && isValidRslt && (returnRslt = {
                            caretPos: i
                        });
                        if (isValidRslt) break;
                        if (resetMaskSet(), prevAltPos = getTest(decisionPos), maskset.validPositions = $.extend(!0, {}, validPsClone), 
                        maskset.tests = $.extend(!0, {}, tstClone), !maskset.excludes[decisionPos]) {
                            returnRslt = alternate(maskPos, c, strict, fromIsValid, decisionPos - 1, selection);
                            break;
                        }
                        var decisionTaker = getDecisionTaker(prevAltPos);
                        if (-1 !== maskset.excludes[decisionPos].indexOf(decisionTaker + ":" + prevAltPos.alternation)) {
                            returnRslt = alternate(maskPos, c, strict, fromIsValid, decisionPos - 1, selection);
                            break;
                        }
                        for (maskset.excludes[decisionPos].push(decisionTaker + ":" + prevAltPos.alternation), 
                        i = decisionPos; i < getLastValidPosition(void 0, !0) + 1; i++) delete maskset.validPositions[i];
                    }
                }
                return returnRslt && !1 === opts.keepStatic || delete maskset.excludes[decisionPos], 
                returnRslt;
            }
            function isValid(pos, c, strict, fromIsValid, fromAlternate, validateOnly) {
                function isSelection(posObj) {
                    return isRTL ? 1 < posObj.begin - posObj.end || posObj.begin - posObj.end == 1 : 1 < posObj.end - posObj.begin || posObj.end - posObj.begin == 1;
                }
                strict = !0 === strict;
                var maskPos = pos;
                function processCommandObject(commandObj) {
                    if (void 0 !== commandObj) {
                        if (void 0 !== commandObj.remove && ($.isArray(commandObj.remove) || (commandObj.remove = [ commandObj.remove ]), 
                        $.each(commandObj.remove.sort(function(a, b) {
                            return b.pos - a.pos;
                        }), function(ndx, lmnt) {
                            revalidateMask({
                                begin: lmnt,
                                end: lmnt + 1
                            });
                        }), commandObj.remove = void 0), void 0 !== commandObj.insert && ($.isArray(commandObj.insert) || (commandObj.insert = [ commandObj.insert ]), 
                        $.each(commandObj.insert.sort(function(a, b) {
                            return a.pos - b.pos;
                        }), function(ndx, lmnt) {
                            "" !== lmnt.c && isValid(lmnt.pos, lmnt.c, void 0 === lmnt.strict || lmnt.strict, void 0 !== lmnt.fromIsValid ? lmnt.fromIsValid : fromIsValid);
                        }), commandObj.insert = void 0), commandObj.refreshFromBuffer && commandObj.buffer) {
                            var refresh = commandObj.refreshFromBuffer;
                            refreshFromBuffer(!0 === refresh ? refresh : refresh.start, refresh.end, commandObj.buffer), 
                            commandObj.refreshFromBuffer = void 0;
                        }
                        void 0 !== commandObj.rewritePosition && (maskPos = commandObj.rewritePosition, 
                        commandObj = !0);
                    }
                    return commandObj;
                }
                function _isValid(position, c, strict) {
                    var rslt = !1;
                    return $.each(getTests(position), function(ndx, tst) {
                        var test = tst.match;
                        if (getBuffer(!0), rslt = null != test.fn ? test.fn.test(c, maskset, position, strict, opts, isSelection(pos)) : (c === test.def || c === opts.skipOptionalPartCharacter) && "" !== test.def && {
                            c: getPlaceholder(position, test, !0) || test.def,
                            pos: position
                        }, !1 !== rslt) {
                            var elem = void 0 !== rslt.c ? rslt.c : c, validatedPos = position;
                            return elem = elem === opts.skipOptionalPartCharacter && !0 === test.static ? getPlaceholder(position, test, !0) || test.def : elem, 
                            rslt = processCommandObject(rslt), !0 !== rslt && void 0 !== rslt.pos && rslt.pos !== position && (validatedPos = rslt.pos), 
                            !0 !== rslt && void 0 === rslt.pos && void 0 === rslt.c ? !1 : (!1 === revalidateMask(pos, $.extend({}, tst, {
                                input: casing(elem, test, validatedPos)
                            }), fromIsValid, validatedPos) && (rslt = !1), !1);
                        }
                    }), rslt;
                }
                void 0 !== pos.begin && (maskPos = isRTL ? pos.end : pos.begin);
                var result = !0, positionsClone = $.extend(!0, {}, maskset.validPositions);
                if (!1 === opts.keepStatic && void 0 !== maskset.excludes[maskPos] && !0 !== fromAlternate && !0 !== fromIsValid) for (var i = maskPos; i < (isRTL ? pos.begin : pos.end); i++) void 0 !== maskset.excludes[i] && (maskset.excludes[i] = void 0, 
                delete maskset.tests[i]);
                if ($.isFunction(opts.preValidation) && !0 !== fromIsValid && !0 !== validateOnly && (result = opts.preValidation.call(el, getBuffer(), maskPos, c, isSelection(pos), opts, maskset, pos, strict || fromAlternate), 
                result = processCommandObject(result)), !0 === result) {
                    if (void 0 === maxLength || maskPos < maxLength) {
                        if (result = _isValid(maskPos, c, strict), (!strict || !0 === fromIsValid) && !1 === result && !0 !== validateOnly) {
                            var currentPosValid = maskset.validPositions[maskPos];
                            if (!currentPosValid || !0 !== currentPosValid.match.static || currentPosValid.match.def !== c && c !== opts.skipOptionalPartCharacter) {
                                if (opts.insertMode || void 0 === maskset.validPositions[seekNext(maskPos)] || pos.end > maskPos) {
                                    var skip = !1;
                                    if (maskset.jitOffset[maskPos] && void 0 === maskset.validPositions[seekNext(maskPos)] && (result = isValid(maskPos + maskset.jitOffset[maskPos], c, !0), 
                                    !1 !== result && (!0 !== fromAlternate && (result.caret = maskPos), skip = !0)), 
                                    pos.end > maskPos && (maskset.validPositions[maskPos] = void 0), !skip && !isMask(maskPos, opts.keepStatic)) for (var nPos = maskPos + 1, snPos = seekNext(maskPos); nPos <= snPos; nPos++) if (result = _isValid(nPos, c, strict), 
                                    !1 !== result) {
                                        result = trackbackPositions(maskPos, void 0 !== result.pos ? result.pos : nPos) || result, 
                                        maskPos = nPos;
                                        break;
                                    }
                                }
                            } else result = {
                                caret: seekNext(maskPos)
                            };
                        }
                    } else result = !1;
                    !1 !== result || !opts.keepStatic || !isComplete(getBuffer()) && 0 !== maskPos || strict || !0 === fromAlternate ? isSelection(pos) && maskset.tests[maskPos] && 1 < maskset.tests[maskPos].length && opts.keepStatic && !strict && !0 !== fromAlternate && (result = alternate(!0)) : result = alternate(maskPos, c, strict, fromIsValid, void 0, pos), 
                    !0 === result && (result = {
                        pos: maskPos
                    });
                }
                if ($.isFunction(opts.postValidation) && !0 !== fromIsValid && !0 !== validateOnly) {
                    var postResult = opts.postValidation.call(el, getBuffer(!0), void 0 !== pos.begin ? isRTL ? pos.end : pos.begin : pos, c, result, opts, maskset, strict);
                    void 0 !== postResult && (result = !0 === postResult ? result : postResult);
                }
                result && void 0 === result.pos && (result.pos = maskPos), !1 === result || !0 === validateOnly ? (resetMaskSet(!0), 
                maskset.validPositions = $.extend(!0, {}, positionsClone)) : trackbackPositions(void 0, maskPos, !0);
                var endResult = processCommandObject(result);
                return endResult;
            }
            function trackbackPositions(originalPos, newPos, fillOnly) {
                if (void 0 === originalPos) for (originalPos = newPos - 1; 0 < originalPos && !maskset.validPositions[originalPos]; originalPos--) ;
                for (var ps = originalPos; ps < newPos; ps++) if (void 0 === maskset.validPositions[ps] && !isMask(ps, !0)) {
                    var vp = 0 == ps ? getTest(ps) : maskset.validPositions[ps - 1];
                    if (vp) {
                        var tests = getTests(ps).slice();
                        "" === tests[tests.length - 1].match.def && tests.pop();
                        var bestMatch = determineTestTemplate(ps, tests), np;
                        if (bestMatch && (!0 !== bestMatch.match.jit || "master" === bestMatch.match.newBlockMarker && (np = maskset.validPositions[ps + 1]) && !0 === np.match.optionalQuantifier) && (bestMatch = $.extend({}, bestMatch, {
                            input: getPlaceholder(ps, bestMatch.match, !0) || bestMatch.match.def
                        }), bestMatch.generatedInput = !0, revalidateMask(ps, bestMatch, !0), !0 !== fillOnly)) {
                            var cvpInput = maskset.validPositions[newPos].input;
                            return maskset.validPositions[newPos] = void 0, isValid(newPos, cvpInput, !0, !0);
                        }
                    }
                }
            }
            function revalidateMask(pos, validTest, fromIsValid, validatedPos) {
                function IsEnclosedStatic(pos, valids, selection) {
                    var posMatch = valids[pos];
                    if (void 0 === posMatch || !0 !== posMatch.match.static || !0 === posMatch.match.optionality || void 0 !== valids[0] && void 0 !== valids[0].alternation) return !1;
                    var prevMatch = selection.begin <= pos - 1 ? valids[pos - 1] && !0 === valids[pos - 1].match.static && valids[pos - 1] : valids[pos - 1], nextMatch = selection.end > pos + 1 ? valids[pos + 1] && !0 === valids[pos + 1].match.static && valids[pos + 1] : valids[pos + 1];
                    return prevMatch && nextMatch;
                }
                var offset = 0, begin = void 0 !== pos.begin ? pos.begin : pos, end = void 0 !== pos.end ? pos.end : pos;
                if (pos.begin > pos.end && (begin = pos.end, end = pos.begin), validatedPos = void 0 !== validatedPos ? validatedPos : begin, 
                begin !== end || opts.insertMode && void 0 !== maskset.validPositions[validatedPos] && void 0 === fromIsValid || void 0 === validTest) {
                    var positionsClone = $.extend(!0, {}, maskset.validPositions), lvp = getLastValidPosition(void 0, !0), i;
                    for (maskset.p = begin, i = lvp; begin <= i; i--) delete maskset.validPositions[i], 
                    void 0 === validTest && delete maskset.tests[i + 1];
                    var valid = !0, j = validatedPos, posMatch = j, t;
                    for (i = j, validTest && (maskset.validPositions[validatedPos] = $.extend(!0, {}, validTest), 
                    posMatch++, j++, begin < end && i++); i <= lvp; i++) {
                        if (void 0 !== (t = positionsClone[i]) && !0 !== t.generatedInput && (end <= i || begin <= i && IsEnclosedStatic(i, positionsClone, {
                            begin: begin,
                            end: end
                        }))) {
                            for (;"" !== getTest(posMatch).match.def; ) {
                                if (positionCanMatchDefinition(posMatch, t, opts) || "+" === t.match.def) {
                                    "+" === t.match.def && getBuffer(!0);
                                    var result = isValid(posMatch, t.input, "+" !== t.match.def, "+" !== t.match.def);
                                    if (valid = !1 !== result, j = (result.pos || posMatch) + 1, !valid) break;
                                } else valid = !1;
                                if (valid) {
                                    void 0 === validTest && t.match.static && i === pos.begin && offset++;
                                    break;
                                }
                                if (!valid && posMatch > maskset.maskLength) break;
                                posMatch++;
                            }
                            "" == getTest(posMatch).match.def && (valid = !1), posMatch = j;
                        }
                        if (!valid) break;
                    }
                    if (!valid) return maskset.validPositions = $.extend(!0, {}, positionsClone), resetMaskSet(!0), 
                    !1;
                } else validTest && getTest(validatedPos).match.cd === validTest.match.cd && (maskset.validPositions[validatedPos] = $.extend(!0, {}, validTest));
                return resetMaskSet(!0), offset;
            }
            function isMask(pos, strict, fuzzy) {
                var test = getTestTemplate(pos).match;
                if ("" === test.def && (test = getTest(pos).match), !0 !== test.static) return test.fn;
                if (!0 === fuzzy && void 0 !== maskset.validPositions[pos] && !0 !== maskset.validPositions[pos].generatedInput) return !0;
                if (!0 !== strict && -1 < pos) {
                    if (fuzzy) {
                        var tests = getTests(pos);
                        return tests.length > 1 + ("" === tests[tests.length - 1].match.def ? 1 : 0);
                    }
                    var testTemplate = determineTestTemplate(pos, getTests(pos)), testPlaceHolder = getPlaceholder(pos, testTemplate.match);
                    return testTemplate.match.def !== testPlaceHolder;
                }
                return !1;
            }
            function seekNext(pos, newBlock, fuzzy) {
                void 0 === fuzzy && (fuzzy = !0);
                for (var position = pos + 1; "" !== getTest(position).match.def && (!0 === newBlock && (!0 !== getTest(position).match.newBlockMarker || !isMask(position, void 0, !0)) || !0 !== newBlock && !isMask(position, void 0, fuzzy)); ) position++;
                return position;
            }
            function seekPrevious(pos, newBlock) {
                var position = pos, tests;
                if (position <= 0) return 0;
                for (;0 < --position && (!0 === newBlock && !0 !== getTest(position).match.newBlockMarker || !0 !== newBlock && !isMask(position, void 0, !0) && (tests = getTests(position), 
                tests.length < 2 || 2 === tests.length && "" === tests[1].match.def)); ) ;
                return position;
            }
            function writeBuffer(input, buffer, caretPos, event, triggerEvents) {
                if (event && $.isFunction(opts.onBeforeWrite)) {
                    var result = opts.onBeforeWrite.call(inputmask, event, buffer, caretPos, opts);
                    if (result) {
                        if (result.refreshFromBuffer) {
                            var refresh = result.refreshFromBuffer;
                            refreshFromBuffer(!0 === refresh ? refresh : refresh.start, refresh.end, result.buffer || buffer), 
                            buffer = getBuffer(!0);
                        }
                        void 0 !== caretPos && (caretPos = void 0 !== result.caret ? result.caret : caretPos);
                    }
                }
                if (void 0 !== input && (input.inputmask._valueSet(buffer.join("")), void 0 === caretPos || void 0 !== event && "blur" === event.type || caret(input, caretPos, void 0, void 0, void 0 !== event && "keydown" === event.type && (event.keyCode === keyCode.DELETE || event.keyCode === keyCode.BACKSPACE)), 
                !0 === triggerEvents)) {
                    var $input = $(input), nptVal = input.inputmask._valueGet();
                    skipInputEvent = !0, $input.trigger("input"), setTimeout(function() {
                        nptVal === getBufferTemplate().join("") ? $input.trigger("cleared") : !0 === isComplete(buffer) && $input.trigger("complete");
                    }, 0);
                }
            }
            function getPlaceholder(pos, test, returnPL) {
                if (test = test || getTest(pos).match, void 0 !== test.placeholder || !0 === returnPL) return $.isFunction(test.placeholder) ? test.placeholder(opts) : test.placeholder;
                if (!0 !== test.static) return opts.placeholder.charAt(pos % opts.placeholder.length);
                if (-1 < pos && void 0 === maskset.validPositions[pos]) {
                    var tests = getTests(pos), staticAlternations = [], prevTest;
                    if (tests.length > 1 + ("" === tests[tests.length - 1].match.def ? 1 : 0)) for (var i = 0; i < tests.length; i++) if ("" !== tests[i].match.def && !0 !== tests[i].match.optionality && !0 !== tests[i].match.optionalQuantifier && (!0 === tests[i].match.static || void 0 === prevTest || !1 !== tests[i].match.fn.test(prevTest.match.def, maskset, pos, !0, opts)) && (staticAlternations.push(tests[i]), 
                    !0 === tests[i].match.static && (prevTest = tests[i]), 1 < staticAlternations.length && /[0-9a-bA-Z]/.test(staticAlternations[0].match.def))) return opts.placeholder.charAt(pos % opts.placeholder.length);
                }
                return test.def;
            }
            function HandleNativePlaceholder(npt, value) {
                if (ie) {
                    if (npt.inputmask._valueGet() !== value && (npt.placeholder !== value || "" === npt.placeholder)) {
                        var buffer = getBuffer().slice(), nptValue = npt.inputmask._valueGet();
                        if (nptValue !== value) {
                            var lvp = getLastValidPosition();
                            -1 === lvp && nptValue === getBufferTemplate().join("") ? buffer = [] : -1 !== lvp && clearOptionalTail(buffer), 
                            writeBuffer(npt, buffer);
                        }
                    }
                } else npt.placeholder !== value && (npt.placeholder = value, "" === npt.placeholder && npt.removeAttribute("placeholder"));
            }
            function determineNewCaretPosition(selectedCaret, tabbed) {
                function doRadixFocus(clickPos) {
                    if ("" !== opts.radixPoint && 0 !== opts.digits) {
                        var vps = maskset.validPositions;
                        if (void 0 === vps[clickPos] || vps[clickPos].input === getPlaceholder(clickPos)) {
                            if (clickPos < seekNext(-1)) return !0;
                            var radixPos = $.inArray(opts.radixPoint, getBuffer());
                            if (-1 !== radixPos) {
                                for (var vp in vps) if (vps[vp] && radixPos < vp && vps[vp].input !== getPlaceholder(vp)) return !1;
                                return !0;
                            }
                        }
                    }
                    return !1;
                }
                if (tabbed && (isRTL ? selectedCaret.end = selectedCaret.begin : selectedCaret.begin = selectedCaret.end), 
                selectedCaret.begin === selectedCaret.end) {
                    switch (opts.positionCaretOnClick) {
                      case "none":
                        break;

                      case "select":
                        selectedCaret = {
                            begin: 0,
                            end: getBuffer().length
                        };
                        break;

                      case "ignore":
                        selectedCaret.end = selectedCaret.begin = seekNext(getLastValidPosition());
                        break;

                      case "radixFocus":
                        if (doRadixFocus(selectedCaret.begin)) {
                            var radixPos = getBuffer().join("").indexOf(opts.radixPoint);
                            selectedCaret.end = selectedCaret.begin = opts.numericInput ? seekNext(radixPos) : radixPos;
                            break;
                        }

                      default:
                        var clickPosition = selectedCaret.begin, lvclickPosition = getLastValidPosition(clickPosition, !0), lastPosition = seekNext(-1 !== lvclickPosition || isMask(0) ? lvclickPosition : 0);
                        if (clickPosition < lastPosition) selectedCaret.end = selectedCaret.begin = isMask(clickPosition, !0) || isMask(clickPosition - 1, !0) ? clickPosition : seekNext(clickPosition); else {
                            var lvp = maskset.validPositions[lvclickPosition], tt = getTestTemplate(lastPosition, lvp ? lvp.match.locator : void 0, lvp), placeholder = getPlaceholder(lastPosition, tt.match);
                            if ("" !== placeholder && getBuffer()[lastPosition] !== placeholder && !0 !== tt.match.optionalQuantifier && !0 !== tt.match.newBlockMarker || !isMask(lastPosition, opts.keepStatic) && tt.match.def === placeholder) {
                                var newPos = seekNext(lastPosition);
                                (newPos <= clickPosition || clickPosition === lastPosition) && (lastPosition = newPos);
                            }
                            selectedCaret.end = selectedCaret.begin = lastPosition;
                        }
                    }
                    return selectedCaret;
                }
            }
            var EventRuler = {
                on: function on(input, eventName, eventHandler) {
                    var ev = function ev(e) {
                        e.originalEvent && (e = e.originalEvent || e, arguments[0] = e);
                        var that = this, args;
                        if (void 0 === that.inputmask && "FORM" !== this.nodeName) {
                            var imOpts = $.data(that, "_inputmask_opts");
                            imOpts ? new Inputmask(imOpts).mask(that) : EventRuler.off(that);
                        } else {
                            if ("setvalue" === e.type || "FORM" === this.nodeName || !(that.disabled || that.readOnly && !("keydown" === e.type && e.ctrlKey && 67 === e.keyCode || !1 === opts.tabThrough && e.keyCode === keyCode.TAB))) {
                                switch (e.type) {
                                  case "input":
                                    if (!0 === skipInputEvent || e.inputType && "insertCompositionText" === e.inputType) return skipInputEvent = !1, 
                                    e.preventDefault();
                                    break;

                                  case "keydown":
                                    skipKeyPressEvent = !1, skipInputEvent = !1;
                                    break;

                                  case "keypress":
                                    if (!0 === skipKeyPressEvent) return e.preventDefault();
                                    skipKeyPressEvent = !0;
                                    break;

                                  case "click":
                                  case "focus":
                                    return validationEvent ? (validationEvent = !1, input.blur(), HandleNativePlaceholder(input, (isRTL ? getBufferTemplate().slice().reverse() : getBufferTemplate()).join("")), 
                                    setTimeout(function() {
                                        input.focus();
                                    }, 3e3)) : (args = arguments, setTimeout(function() {
                                        eventHandler.apply(that, args);
                                    }, 0)), !1;
                                }
                                var returnVal = eventHandler.apply(that, arguments);
                                return !1 === returnVal && (e.preventDefault(), e.stopPropagation()), returnVal;
                            }
                            e.preventDefault();
                        }
                    };
                    input.inputmask.events[eventName] = input.inputmask.events[eventName] || [], input.inputmask.events[eventName].push(ev), 
                    -1 !== $.inArray(eventName, [ "submit", "reset" ]) ? null !== input.form && $(input.form).on(eventName, ev) : $(input).on(eventName, ev);
                },
                off: function off(input, event) {
                    var events;
                    input.inputmask && input.inputmask.events && (event ? (events = [], events[event] = input.inputmask.events[event]) : events = input.inputmask.events, 
                    $.each(events, function(eventName, evArr) {
                        for (;0 < evArr.length; ) {
                            var ev = evArr.pop();
                            -1 !== $.inArray(eventName, [ "submit", "reset" ]) ? null !== input.form && $(input.form).off(eventName, ev) : $(input).off(eventName, ev);
                        }
                        delete input.inputmask.events[eventName];
                    }));
                }
            }, EventHandlers = {
                keydownEvent: function keydownEvent(e) {
                    var input = this, $input = $(input), k = e.keyCode, pos = caret(input), kdResult = opts.onKeyDown.call(this, e, getBuffer(), pos, opts);
                    if (void 0 !== kdResult) return kdResult;
                    if (k === keyCode.BACKSPACE || k === keyCode.DELETE || iphone && k === keyCode.BACKSPACE_SAFARI || e.ctrlKey && k === keyCode.X && !("oncut" in input)) e.preventDefault(), 
                    handleRemove(input, k, pos), writeBuffer(input, getBuffer(!0), maskset.p, e, input.inputmask._valueGet() !== getBuffer().join("")); else if (k === keyCode.END || k === keyCode.PAGE_DOWN) {
                        e.preventDefault();
                        var caretPos = seekNext(getLastValidPosition());
                        caret(input, e.shiftKey ? pos.begin : caretPos, caretPos, !0);
                    } else k === keyCode.HOME && !e.shiftKey || k === keyCode.PAGE_UP ? (e.preventDefault(), 
                    caret(input, 0, e.shiftKey ? pos.begin : 0, !0)) : (opts.undoOnEscape && k === keyCode.ESCAPE || 90 === k && e.ctrlKey) && !0 !== e.altKey ? (checkVal(input, !0, !1, undoValue.split("")), 
                    $input.trigger("click")) : !0 === opts.tabThrough && k === keyCode.TAB ? (!0 === e.shiftKey ? (!0 === getTest(pos.begin).match.static && (pos.begin = seekNext(pos.begin)), 
                    pos.end = seekPrevious(pos.begin, !0), pos.begin = seekPrevious(pos.end, !0)) : (pos.begin = seekNext(pos.begin, !0), 
                    pos.end = seekNext(pos.begin, !0), pos.end < maskset.maskLength && pos.end--), pos.begin < maskset.maskLength && (e.preventDefault(), 
                    caret(input, pos.begin, pos.end))) : e.shiftKey || opts.insertModeVisual && !1 === opts.insertMode && (k === keyCode.RIGHT ? setTimeout(function() {
                        var caretPos = caret(input);
                        caret(input, caretPos.begin);
                    }, 0) : k === keyCode.LEFT && setTimeout(function() {
                        var caretPos_begin = translatePosition(input.inputmask.caretPos.begin), caretPos_end = translatePosition(input.inputmask.caretPos.end);
                        caret(input, isRTL ? caretPos_begin + (caretPos_begin === maskset.maskLength ? 0 : 1) : caretPos_begin - (0 === caretPos_begin ? 0 : 1));
                    }, 0));
                    ignorable = -1 !== $.inArray(k, opts.ignorables);
                },
                keypressEvent: function keypressEvent(e, checkval, writeOut, strict, ndx) {
                    var input = this, $input = $(input), k = e.which || e.charCode || e.keyCode;
                    if (!(!0 === checkval || e.ctrlKey && e.altKey) && (e.ctrlKey || e.metaKey || ignorable)) return k === keyCode.ENTER && undoValue !== getBuffer().join("") && (undoValue = getBuffer().join(""), 
                    setTimeout(function() {
                        $input.trigger("change");
                    }, 0)), skipInputEvent = !0, !0;
                    if (k) {
                        44 !== k && 46 !== k || 3 !== e.location || "" === opts.radixPoint || (k = opts.radixPoint.charCodeAt(0));
                        var pos = checkval ? {
                            begin: ndx,
                            end: ndx
                        } : caret(input), forwardPosition, c = String.fromCharCode(k);
                        maskset.writeOutBuffer = !0;
                        var valResult = isValid(pos, c, strict);
                        if (!1 !== valResult && (resetMaskSet(!0), forwardPosition = void 0 !== valResult.caret ? valResult.caret : seekNext(valResult.pos.begin ? valResult.pos.begin : valResult.pos), 
                        maskset.p = forwardPosition), forwardPosition = opts.numericInput && void 0 === valResult.caret ? seekPrevious(forwardPosition) : forwardPosition, 
                        !1 !== writeOut && (setTimeout(function() {
                            opts.onKeyValidation.call(input, k, valResult);
                        }, 0), maskset.writeOutBuffer && !1 !== valResult)) {
                            var buffer = getBuffer();
                            writeBuffer(input, buffer, forwardPosition, e, !0 !== checkval);
                        }
                        if (e.preventDefault(), checkval) return !1 !== valResult && (valResult.forwardPosition = forwardPosition), 
                        valResult;
                    }
                },
                pasteEvent: function pasteEvent(e) {
                    var input = this, inputValue = this.inputmask._valueGet(!0), caretPos = caret(this), tempValue;
                    isRTL && (tempValue = caretPos.end, caretPos.end = caretPos.begin, caretPos.begin = tempValue);
                    var valueBeforeCaret = inputValue.substr(0, caretPos.begin), valueAfterCaret = inputValue.substr(caretPos.end, inputValue.length);
                    if (valueBeforeCaret == (isRTL ? getBufferTemplate().slice().reverse() : getBufferTemplate()).slice(0, caretPos.begin).join("") && (valueBeforeCaret = ""), 
                    valueAfterCaret == (isRTL ? getBufferTemplate().slice().reverse() : getBufferTemplate()).slice(caretPos.end).join("") && (valueAfterCaret = ""), 
                    window.clipboardData && window.clipboardData.getData) inputValue = valueBeforeCaret + window.clipboardData.getData("Text") + valueAfterCaret; else {
                        if (!e.clipboardData || !e.clipboardData.getData) return !0;
                        inputValue = valueBeforeCaret + e.clipboardData.getData("text/plain") + valueAfterCaret;
                    }
                    var pasteValue = inputValue;
                    if ($.isFunction(opts.onBeforePaste)) {
                        if (pasteValue = opts.onBeforePaste.call(inputmask, inputValue, opts), !1 === pasteValue) return e.preventDefault();
                        pasteValue = pasteValue || inputValue;
                    }
                    return checkVal(this, !1, !1, pasteValue.toString().split("")), writeBuffer(this, getBuffer(), seekNext(getLastValidPosition()), e, undoValue !== getBuffer().join("")), 
                    e.preventDefault();
                },
                inputFallBackEvent: function inputFallBackEvent(e) {
                    function ieMobileHandler(input, inputValue, caretPos) {
                        if (iemobile) {
                            var inputChar = inputValue.replace(getBuffer().join(""), "");
                            if (1 === inputChar.length) {
                                var iv = inputValue.split("");
                                iv.splice(caretPos.begin, 0, inputChar), inputValue = iv.join("");
                            }
                        }
                        return inputValue;
                    }
                    function analyseChanges(inputValue, buffer, caretPos) {
                        for (var frontPart = inputValue.substr(0, caretPos.begin).split(""), backPart = inputValue.substr(caretPos.begin).split(""), frontBufferPart = buffer.substr(0, caretPos.begin).split(""), backBufferPart = buffer.substr(caretPos.begin).split(""), fpl = frontPart.length >= frontBufferPart.length ? frontPart.length : frontBufferPart.length, bpl = backPart.length >= backBufferPart.length ? backPart.length : backBufferPart.length, bl, i, action = "", data = [], marker = "~", placeholder; frontPart.length < fpl; ) frontPart.push("~");
                        for (;frontBufferPart.length < fpl; ) frontBufferPart.push("~");
                        for (;backPart.length < bpl; ) backPart.unshift("~");
                        for (;backBufferPart.length < bpl; ) backBufferPart.unshift("~");
                        var newBuffer = frontPart.concat(backPart), oldBuffer = frontBufferPart.concat(backBufferPart);
                        for (i = 0, bl = newBuffer.length; i < bl; i++) switch (placeholder = getPlaceholder(translatePosition(i)), 
                        action) {
                          case "insertText":
                            oldBuffer[i - 1] === newBuffer[i] && caretPos.begin == newBuffer.length - 1 && data.push(newBuffer[i]), 
                            i = bl;
                            break;

                          case "insertReplacementText":
                            "~" === newBuffer[i] ? caretPos.end++ : i = bl;
                            break;

                          case "deleteContentBackward":
                            "~" === newBuffer[i] ? caretPos.end++ : i = bl;
                            break;

                          default:
                            newBuffer[i] !== oldBuffer[i] && ("~" !== newBuffer[i + 1] && newBuffer[i + 1] !== placeholder && void 0 !== newBuffer[i + 1] || (oldBuffer[i] !== placeholder || "~" !== oldBuffer[i + 1]) && "~" !== oldBuffer[i] ? "~" === oldBuffer[i + 1] && oldBuffer[i] === newBuffer[i + 1] ? (action = "insertText", 
                            data.push(newBuffer[i]), caretPos.begin--, caretPos.end--) : newBuffer[i] !== placeholder && "~" !== newBuffer[i] && ("~" === newBuffer[i + 1] || oldBuffer[i] !== newBuffer[i] && oldBuffer[i + 1] === newBuffer[i + 1]) ? (action = "insertReplacementText", 
                            data.push(newBuffer[i]), caretPos.begin--) : "~" === newBuffer[i] ? (action = "deleteContentBackward", 
                            !isMask(translatePosition(i), !0) && oldBuffer[i] !== opts.radixPoint || caretPos.end++) : i = bl : (action = "insertText", 
                            data.push(newBuffer[i]), caretPos.begin--, caretPos.end--));
                            break;
                        }
                        return {
                            action: action,
                            data: data,
                            caret: caretPos
                        };
                    }
                    var input = this, inputValue = input.inputmask._valueGet(!0), buffer = (isRTL ? getBuffer().slice().reverse() : getBuffer()).join(""), caretPos = caret(input, void 0, void 0, !0);
                    if (buffer !== inputValue) {
                        inputValue = ieMobileHandler(input, inputValue, caretPos);
                        var changes = analyseChanges(inputValue, buffer, caretPos);
                        switch (document.activeElement !== input && input.focus(), writeBuffer(input, getBuffer()), 
                        caret(input, caretPos.begin, caretPos.end, !0), changes.action) {
                          case "insertText":
                          case "insertReplacementText":
                            $.each(changes.data, function(ndx, entry) {
                                var keypress = new $.Event("keypress");
                                keypress.which = entry.charCodeAt(0), ignorable = !1, EventHandlers.keypressEvent.call(input, keypress);
                            }), setTimeout(function() {
                                $el.trigger("keyup");
                            }, 0);
                            break;

                          case "deleteContentBackward":
                            var keydown = new $.Event("keydown");
                            keydown.keyCode = keyCode.BACKSPACE, EventHandlers.keydownEvent.call(input, keydown);
                            break;

                          default:
                            applyInputValue(input, inputValue);
                            break;
                        }
                        e.preventDefault();
                    }
                },
                compositionendEvent: function compositionendEvent(e) {
                    $el.trigger("input");
                },
                setValueEvent: function setValueEvent(e, argument_1, argument_2) {
                    var input = this, value = e && e.detail ? e.detail[0] : argument_1;
                    void 0 === value && (value = this.inputmask._valueGet(!0)), applyInputValue(this, value), 
                    (e.detail && void 0 !== e.detail[1] || void 0 !== argument_2) && caret(this, e.detail ? e.detail[1] : argument_2);
                },
                focusEvent: function focusEvent(e) {
                    var input = this, nptValue = this.inputmask._valueGet();
                    opts.showMaskOnFocus && nptValue !== getBuffer().join("") && writeBuffer(this, getBuffer(), seekNext(getLastValidPosition())), 
                    !0 !== opts.positionCaretOnTab || !1 !== mouseEnter || isComplete(getBuffer()) && -1 !== getLastValidPosition() || EventHandlers.clickEvent.apply(this, [ e, !0 ]), 
                    undoValue = getBuffer().join("");
                },
                invalidEvent: function invalidEvent(e) {
                    validationEvent = !0;
                },
                mouseleaveEvent: function mouseleaveEvent() {
                    var input = this;
                    mouseEnter = !1, opts.clearMaskOnLostFocus && document.activeElement !== this && HandleNativePlaceholder(this, originalPlaceholder);
                },
                clickEvent: function clickEvent(e, tabbed) {
                    var input = this;
                    if (document.activeElement === this) {
                        var newCaretPosition = determineNewCaretPosition(caret(this), tabbed);
                        void 0 !== newCaretPosition && caret(this, newCaretPosition);
                    }
                },
                cutEvent: function cutEvent(e) {
                    var input = this, pos = caret(this), clipboardData = window.clipboardData || e.clipboardData, clipData = isRTL ? getBuffer().slice(pos.end, pos.begin) : getBuffer().slice(pos.begin, pos.end);
                    clipboardData.setData("text", isRTL ? clipData.reverse().join("") : clipData.join("")), 
                    document.execCommand && document.execCommand("copy"), handleRemove(this, keyCode.DELETE, pos), 
                    writeBuffer(this, getBuffer(), maskset.p, e, undoValue !== getBuffer().join(""));
                },
                blurEvent: function blurEvent(e) {
                    var $input = $(this), input = this;
                    if (this.inputmask) {
                        HandleNativePlaceholder(this, originalPlaceholder);
                        var nptValue = this.inputmask._valueGet(), buffer = getBuffer().slice();
                        "" !== nptValue && (opts.clearMaskOnLostFocus && (-1 === getLastValidPosition() && nptValue === getBufferTemplate().join("") ? buffer = [] : clearOptionalTail(buffer)), 
                        !1 === isComplete(buffer) && (setTimeout(function() {
                            $input.trigger("incomplete");
                        }, 0), opts.clearIncomplete && (resetMaskSet(), buffer = opts.clearMaskOnLostFocus ? [] : getBufferTemplate().slice())), 
                        writeBuffer(this, buffer, void 0, e)), undoValue !== getBuffer().join("") && (undoValue = getBuffer().join(""), 
                        $input.trigger("change"));
                    }
                },
                mouseenterEvent: function mouseenterEvent() {
                    var input = this;
                    mouseEnter = !0, document.activeElement !== this && (null == originalPlaceholder && this.placeholder !== originalPlaceholder && (originalPlaceholder = this.placeholder), 
                    opts.showMaskOnHover && HandleNativePlaceholder(this, (isRTL ? getBufferTemplate().slice().reverse() : getBufferTemplate()).join("")));
                },
                submitEvent: function submitEvent() {
                    undoValue !== getBuffer().join("") && $el.trigger("change"), opts.clearMaskOnLostFocus && -1 === getLastValidPosition() && el.inputmask._valueGet && el.inputmask._valueGet() === getBufferTemplate().join("") && el.inputmask._valueSet(""), 
                    opts.clearIncomplete && !1 === isComplete(getBuffer()) && el.inputmask._valueSet(""), 
                    opts.removeMaskOnSubmit && (el.inputmask._valueSet(el.inputmask.unmaskedvalue(), !0), 
                    setTimeout(function() {
                        writeBuffer(el, getBuffer());
                    }, 0));
                },
                resetEvent: function resetEvent() {
                    el.inputmask.refreshValue = !0, setTimeout(function() {
                        applyInputValue(el, el.inputmask._valueGet(!0));
                    }, 0);
                }
            }, valueBuffer;
            function checkVal(input, writeOut, strict, nptvl, initiatingEvent) {
                var inputmask = this || input.inputmask, inputValue = nptvl.slice(), charCodes = "", initialNdx = -1, result = void 0;
                function isTemplateMatch(ndx, charCodes) {
                    for (var targetTemplate = getMaskTemplate(!0, 0).slice(ndx, seekNext(ndx)).join("").replace(/'/g, ""), charCodeNdx = targetTemplate.indexOf(charCodes); 0 < charCodeNdx && " " === targetTemplate[charCodeNdx - 1]; ) charCodeNdx--;
                    var match = 0 === charCodeNdx && !isMask(ndx) && (getTest(ndx).match.nativeDef === charCodes.charAt(0) || !0 === getTest(ndx).match.static && getTest(ndx).match.nativeDef === "'" + charCodes.charAt(0) || " " === getTest(ndx).match.nativeDef && (getTest(ndx + 1).match.nativeDef === charCodes.charAt(0) || !0 === getTest(ndx + 1).match.static && getTest(ndx + 1).match.nativeDef === "'" + charCodes.charAt(0)));
                    return !match && 0 < charCodeNdx && (inputmask.caretPos = {
                        begin: seekNext(charCodeNdx)
                    }), match;
                }
                resetMaskSet(), maskset.tests = {}, initialNdx = opts.radixPoint ? determineNewCaretPosition({
                    begin: 0,
                    end: 0
                }).begin : 0, maskset.p = initialNdx, inputmask.caretPos = {
                    begin: initialNdx
                };
                var staticMatches = [], prevCaretPos = inputmask.caretPos;
                if ($.each(inputValue, function(ndx, charCode) {
                    if (void 0 !== charCode) if (void 0 === maskset.validPositions[ndx] && inputValue[ndx] === getPlaceholder(ndx) && isMask(ndx, !0) && !1 === isValid(ndx, inputValue[ndx], !0, void 0, void 0, !0)) maskset.p++; else {
                        var keypress = new $.Event("_checkval");
                        keypress.which = charCode.toString().charCodeAt(0), charCodes += charCode;
                        var lvp = getLastValidPosition(void 0, !0);
                        isTemplateMatch(initialNdx, charCodes) ? result = EventHandlers.keypressEvent.call(input, keypress, !0, !1, strict, lvp + 1) : (result = EventHandlers.keypressEvent.call(input, keypress, !0, !1, strict, inputmask.caretPos.begin), 
                        result && (initialNdx = inputmask.caretPos.begin + 1, charCodes = "")), result ? (void 0 !== result.pos && maskset.validPositions[result.pos] && !0 === maskset.validPositions[result.pos].match.static && void 0 === maskset.validPositions[result.pos].alternation && (staticMatches.push(result.pos), 
                        isRTL || (result.forwardPosition = result.pos + 1)), writeBuffer(void 0, getBuffer(), result.forwardPosition, keypress, !1), 
                        inputmask.caretPos = {
                            begin: result.forwardPosition,
                            end: result.forwardPosition
                        }, prevCaretPos = inputmask.caretPos) : inputmask.caretPos = prevCaretPos;
                    }
                }), 0 < staticMatches.length) {
                    var sndx, validPos, nextValid = seekNext(-1, void 0, !1);
                    if (!isComplete(getBuffer()) && staticMatches.length <= nextValid || isComplete(getBuffer()) && 0 < staticMatches.length && staticMatches.length !== nextValid && 0 === staticMatches[0]) for (var nextSndx = nextValid; void 0 !== (sndx = staticMatches.shift()); ) {
                        var keypress = new $.Event("_checkval");
                        if (validPos = maskset.validPositions[sndx], validPos.generatedInput = !0, keypress.which = validPos.input.charCodeAt(0), 
                        result = EventHandlers.keypressEvent.call(input, keypress, !0, !1, strict, nextSndx), 
                        result && void 0 !== result.pos && result.pos !== sndx && maskset.validPositions[result.pos] && !0 === maskset.validPositions[result.pos].match.static) staticMatches.push(result.pos); else if (!result) break;
                        nextSndx++;
                    } else for (;sndx = staticMatches.pop(); ) validPos = maskset.validPositions[sndx], 
                    validPos && (validPos.generatedInput = !0);
                }
                if (writeOut) for (var vndx in writeBuffer(input, getBuffer(), result ? result.forwardPosition : void 0, initiatingEvent || new $.Event("checkval"), initiatingEvent && "input" === initiatingEvent.type), 
                maskset.validPositions) !0 !== maskset.validPositions[vndx].match.generated && delete maskset.validPositions[vndx].generatedInput;
            }
            function unmaskedvalue(input) {
                if (input) {
                    if (void 0 === input.inputmask) return input.value;
                    input.inputmask && input.inputmask.refreshValue && applyInputValue(input, input.inputmask._valueGet(!0));
                }
                var umValue = [], vps = maskset.validPositions;
                for (var pndx in vps) vps[pndx] && vps[pndx].match && 1 != vps[pndx].match.static && umValue.push(vps[pndx].input);
                var unmaskedValue = 0 === umValue.length ? "" : (isRTL ? umValue.reverse() : umValue).join("");
                if ($.isFunction(opts.onUnMask)) {
                    var bufferValue = (isRTL ? getBuffer().slice().reverse() : getBuffer()).join("");
                    unmaskedValue = opts.onUnMask.call(inputmask, bufferValue, unmaskedValue, opts);
                }
                return unmaskedValue;
            }
            function translatePosition(pos) {
                return !isRTL || "number" != typeof pos || opts.greedy && "" === opts.placeholder || !el || (pos = el.inputmask._valueGet().length - pos), 
                pos;
            }
            function caret(input, begin, end, notranslate, isDelete) {
                var range;
                if (void 0 === begin) return "selectionStart" in input && "selectionEnd" in input ? (begin = input.selectionStart, 
                end = input.selectionEnd) : window.getSelection ? (range = window.getSelection().getRangeAt(0), 
                range.commonAncestorContainer.parentNode !== input && range.commonAncestorContainer !== input || (begin = range.startOffset, 
                end = range.endOffset)) : document.selection && document.selection.createRange && (range = document.selection.createRange(), 
                begin = 0 - range.duplicate().moveStart("character", -input.inputmask._valueGet().length), 
                end = begin + range.text.length), {
                    begin: notranslate ? begin : translatePosition(begin),
                    end: notranslate ? end : translatePosition(end)
                };
                if ($.isArray(begin) && (end = isRTL ? begin[0] : begin[1], begin = isRTL ? begin[1] : begin[0]), 
                void 0 !== begin.begin && (end = isRTL ? begin.begin : begin.end, begin = isRTL ? begin.end : begin.begin), 
                "number" == typeof begin) {
                    begin = notranslate ? begin : translatePosition(begin), end = notranslate ? end : translatePosition(end), 
                    end = "number" == typeof end ? end : begin;
                    var scrollCalc = parseInt(((input.ownerDocument.defaultView || window).getComputedStyle ? (input.ownerDocument.defaultView || window).getComputedStyle(input, null) : input.currentStyle).fontSize) * end;
                    if (input.scrollLeft = scrollCalc > input.scrollWidth ? scrollCalc : 0, input.inputmask.caretPos = {
                        begin: begin,
                        end: end
                    }, opts.insertModeVisual && !1 === opts.insertMode && begin === end && (isDelete || end++), 
                    input === document.activeElement) if ("setSelectionRange" in input) input.setSelectionRange(begin, end); else if (window.getSelection) {
                        if (range = document.createRange(), void 0 === input.firstChild || null === input.firstChild) {
                            var textNode = document.createTextNode("");
                            input.appendChild(textNode);
                        }
                        range.setStart(input.firstChild, begin < input.inputmask._valueGet().length ? begin : input.inputmask._valueGet().length), 
                        range.setEnd(input.firstChild, end < input.inputmask._valueGet().length ? end : input.inputmask._valueGet().length), 
                        range.collapse(!0);
                        var sel = window.getSelection();
                        sel.removeAllRanges(), sel.addRange(range);
                    } else input.createTextRange && (range = input.createTextRange(), range.collapse(!0), 
                    range.moveEnd("character", end), range.moveStart("character", begin), range.select());
                }
            }
            function determineLastRequiredPosition(returnDefinition) {
                var buffer = getMaskTemplate(!0, getLastValidPosition(), !0, !0), bl = buffer.length, pos, lvp = getLastValidPosition(), positions = {}, lvTest = maskset.validPositions[lvp], ndxIntlzr = void 0 !== lvTest ? lvTest.locator.slice() : void 0, testPos;
                for (pos = lvp + 1; pos < buffer.length; pos++) testPos = getTestTemplate(pos, ndxIntlzr, pos - 1), 
                ndxIntlzr = testPos.locator.slice(), positions[pos] = $.extend(!0, {}, testPos);
                var lvTestAlt = lvTest && void 0 !== lvTest.alternation ? lvTest.locator[lvTest.alternation] : void 0;
                for (pos = bl - 1; lvp < pos && (testPos = positions[pos], (testPos.match.optionality || testPos.match.optionalQuantifier && testPos.match.newBlockMarker || lvTestAlt && (lvTestAlt !== positions[pos].locator[lvTest.alternation] && 1 != testPos.match.static || !0 === testPos.match.static && testPos.locator[lvTest.alternation] && checkAlternationMatch(testPos.locator[lvTest.alternation].toString().split(","), lvTestAlt.toString().split(",")) && "" !== getTests(pos)[0].def)) && buffer[pos] === getPlaceholder(pos, testPos.match)); pos--) bl--;
                return returnDefinition ? {
                    l: bl,
                    def: positions[bl] ? positions[bl].match : void 0
                } : bl;
            }
            function clearOptionalTail(buffer) {
                buffer.length = 0;
                for (var template = getMaskTemplate(!0, 0, !0, void 0, !0), lmnt; void 0 !== (lmnt = template.shift()); ) buffer.push(lmnt);
                return buffer;
            }
            function isComplete(buffer) {
                if ($.isFunction(opts.isComplete)) return opts.isComplete(buffer, opts);
                if ("*" !== opts.repeat) {
                    var complete = !1, lrp = determineLastRequiredPosition(!0), aml = seekPrevious(lrp.l);
                    if (void 0 === lrp.def || lrp.def.newBlockMarker || lrp.def.optionality || lrp.def.optionalQuantifier) {
                        complete = !0;
                        for (var i = 0; i <= aml; i++) {
                            var test = getTestTemplate(i).match;
                            if (!0 !== test.static && void 0 === maskset.validPositions[i] && !0 !== test.optionality && !0 !== test.optionalQuantifier || !0 === test.static && buffer[i] !== getPlaceholder(i, test)) {
                                complete = !1;
                                break;
                            }
                        }
                    }
                    return complete;
                }
            }
            function handleRemove(input, k, pos, strict, fromIsValid) {
                if ((opts.numericInput || isRTL) && (k === keyCode.BACKSPACE ? k = keyCode.DELETE : k === keyCode.DELETE && (k = keyCode.BACKSPACE), 
                isRTL)) {
                    var pend = pos.end;
                    pos.end = pos.begin, pos.begin = pend;
                }
                var offset;
                if (k === keyCode.BACKSPACE ? pos.end - pos.begin < 1 && (pos.begin = seekPrevious(pos.begin)) : k === keyCode.DELETE && pos.begin === pos.end && (pos.end = isMask(pos.end, !0, !0) ? pos.end + 1 : seekNext(pos.end) + 1), 
                !1 !== (offset = revalidateMask(pos))) {
                    if (!0 !== strict && !1 !== opts.keepStatic || null !== opts.regex && -1 !== getTest(pos.begin).match.def.indexOf("|")) {
                        var result = alternate(!0);
                        if (result) {
                            var newPos = void 0 !== result.caret ? result.caret : result.pos ? seekNext(result.pos.begin ? result.pos.begin : result.pos) : getLastValidPosition(-1, !0);
                            (k !== keyCode.DELETE || pos.begin > newPos) && pos.begin;
                        }
                    }
                    !0 !== strict && (maskset.p = k === keyCode.DELETE ? pos.begin + offset : pos.begin);
                }
            }
            function applyInputValue(input, value) {
                input.inputmask.refreshValue = !1, $.isFunction(opts.onBeforeMask) && (value = opts.onBeforeMask.call(inputmask, value, opts) || value), 
                value = value.toString().split(""), checkVal(input, !0, !1, value), undoValue = getBuffer().join(""), 
                (opts.clearMaskOnLostFocus || opts.clearIncomplete) && input.inputmask._valueGet() === getBufferTemplate().join("") && -1 === getLastValidPosition() && input.inputmask._valueSet("");
            }
            function mask(elem) {
                function isElementTypeSupported(input, opts) {
                    function patchValueProperty(npt) {
                        var valueGet, valueSet;
                        function patchValhook(type) {
                            if ($.valHooks && (void 0 === $.valHooks[type] || !0 !== $.valHooks[type].inputmaskpatch)) {
                                var valhookGet = $.valHooks[type] && $.valHooks[type].get ? $.valHooks[type].get : function(elem) {
                                    return elem.value;
                                }, valhookSet = $.valHooks[type] && $.valHooks[type].set ? $.valHooks[type].set : function(elem, value) {
                                    return elem.value = value, elem;
                                };
                                $.valHooks[type] = {
                                    get: function get(elem) {
                                        if (elem.inputmask) {
                                            if (elem.inputmask.opts.autoUnmask) return elem.inputmask.unmaskedvalue();
                                            var result = valhookGet(elem);
                                            return -1 !== getLastValidPosition(void 0, void 0, elem.inputmask.maskset.validPositions) || !0 !== opts.nullable ? result : "";
                                        }
                                        return valhookGet(elem);
                                    },
                                    set: function set(elem, value) {
                                        var result = valhookSet(elem, value);
                                        return elem.inputmask && applyInputValue(elem, value), result;
                                    },
                                    inputmaskpatch: !0
                                };
                            }
                        }
                        function getter() {
                            return this.inputmask ? this.inputmask.opts.autoUnmask ? this.inputmask.unmaskedvalue() : -1 !== getLastValidPosition() || !0 !== opts.nullable ? document.activeElement === this && opts.clearMaskOnLostFocus ? (isRTL ? clearOptionalTail(getBuffer().slice()).reverse() : clearOptionalTail(getBuffer().slice())).join("") : valueGet.call(this) : "" : valueGet.call(this);
                        }
                        function setter(value) {
                            valueSet.call(this, value), this.inputmask && applyInputValue(this, value);
                        }
                        function installNativeValueSetFallback(npt) {
                            EventRuler.on(npt, "mouseenter", function() {
                                var input = this, value = this.inputmask._valueGet(!0);
                                value !== (isRTL ? getBuffer().reverse() : getBuffer()).join("") && applyInputValue(this, value);
                            });
                        }
                        if (!npt.inputmask.__valueGet) {
                            if (!0 !== opts.noValuePatching) {
                                if (Object.getOwnPropertyDescriptor) {
                                    "function" != typeof Object.getPrototypeOf && (Object.getPrototypeOf = "object" === _typeof("test".__proto__) ? function(object) {
                                        return object.__proto__;
                                    } : function(object) {
                                        return object.constructor.prototype;
                                    });
                                    var valueProperty = Object.getPrototypeOf ? Object.getOwnPropertyDescriptor(Object.getPrototypeOf(npt), "value") : void 0;
                                    valueProperty && valueProperty.get && valueProperty.set ? (valueGet = valueProperty.get, 
                                    valueSet = valueProperty.set, Object.defineProperty(npt, "value", {
                                        get: getter,
                                        set: setter,
                                        configurable: !0
                                    })) : "input" !== npt.tagName.toLowerCase() && (valueGet = function valueGet() {
                                        return this.textContent;
                                    }, valueSet = function valueSet(value) {
                                        this.textContent = value;
                                    }, Object.defineProperty(npt, "value", {
                                        get: getter,
                                        set: setter,
                                        configurable: !0
                                    }));
                                } else document.__lookupGetter__ && npt.__lookupGetter__("value") && (valueGet = npt.__lookupGetter__("value"), 
                                valueSet = npt.__lookupSetter__("value"), npt.__defineGetter__("value", getter), 
                                npt.__defineSetter__("value", setter));
                                npt.inputmask.__valueGet = valueGet, npt.inputmask.__valueSet = valueSet;
                            }
                            npt.inputmask._valueGet = function(overruleRTL) {
                                return isRTL && !0 !== overruleRTL ? valueGet.call(this.el).split("").reverse().join("") : valueGet.call(this.el);
                            }, npt.inputmask._valueSet = function(value, overruleRTL) {
                                valueSet.call(this.el, null == value ? "" : !0 !== overruleRTL && isRTL ? value.split("").reverse().join("") : value);
                            }, void 0 === valueGet && (valueGet = function valueGet() {
                                return this.value;
                            }, valueSet = function valueSet(value) {
                                this.value = value;
                            }, patchValhook(npt.type), installNativeValueSetFallback(npt));
                        }
                    }
                    "textarea" !== input.tagName.toLowerCase() && opts.ignorables.push(keyCode.ENTER);
                    var elementType = input.getAttribute("type"), isSupported = "input" === input.tagName.toLowerCase() && -1 !== $.inArray(elementType, opts.supportsInputType) || input.isContentEditable || "textarea" === input.tagName.toLowerCase();
                    if (!isSupported) if ("input" === input.tagName.toLowerCase()) {
                        var el = document.createElement("input");
                        el.setAttribute("type", elementType), isSupported = "text" === el.type, el = null;
                    } else isSupported = "partial";
                    return !1 !== isSupported ? patchValueProperty(input) : input.inputmask = void 0, 
                    isSupported;
                }
                EventRuler.off(elem);
                var isSupported = isElementTypeSupported(elem, opts);
                if (!1 !== isSupported && (el = elem, $el = $(el), originalPlaceholder = el.placeholder, 
                maxLength = void 0 !== el ? el.maxLength : void 0, -1 === maxLength && (maxLength = void 0), 
                "inputMode" in el && null === el.getAttribute("inputmode") && (el.inputMode = opts.inputmode, 
                el.setAttribute("inputmode", opts.inputmode)), !0 === isSupported && (opts.showMaskOnFocus = opts.showMaskOnFocus && -1 === [ "cc-number", "cc-exp" ].indexOf(el.autocomplete), 
                iphone && (opts.insertModeVisual = !1), EventRuler.on(el, "submit", EventHandlers.submitEvent), 
                EventRuler.on(el, "reset", EventHandlers.resetEvent), EventRuler.on(el, "blur", EventHandlers.blurEvent), 
                EventRuler.on(el, "focus", EventHandlers.focusEvent), EventRuler.on(el, "invalid", EventHandlers.invalidEvent), 
                EventRuler.on(el, "click", EventHandlers.clickEvent), EventRuler.on(el, "mouseleave", EventHandlers.mouseleaveEvent), 
                EventRuler.on(el, "mouseenter", EventHandlers.mouseenterEvent), EventRuler.on(el, "paste", EventHandlers.pasteEvent), 
                EventRuler.on(el, "cut", EventHandlers.cutEvent), EventRuler.on(el, "complete", opts.oncomplete), 
                EventRuler.on(el, "incomplete", opts.onincomplete), EventRuler.on(el, "cleared", opts.oncleared), 
                mobile || !0 === opts.inputEventOnly ? el.removeAttribute("maxLength") : (EventRuler.on(el, "keydown", EventHandlers.keydownEvent), 
                EventRuler.on(el, "keypress", EventHandlers.keypressEvent)), EventRuler.on(el, "input", EventHandlers.inputFallBackEvent), 
                EventRuler.on(el, "compositionend", EventHandlers.compositionendEvent)), EventRuler.on(el, "setvalue", EventHandlers.setValueEvent), 
                undoValue = getBufferTemplate().join(""), "" !== el.inputmask._valueGet(!0) || !1 === opts.clearMaskOnLostFocus || document.activeElement === el)) {
                    applyInputValue(el, el.inputmask._valueGet(!0), opts);
                    var buffer = getBuffer().slice();
                    !1 === isComplete(buffer) && opts.clearIncomplete && resetMaskSet(), opts.clearMaskOnLostFocus && document.activeElement !== el && (-1 === getLastValidPosition() ? buffer = [] : clearOptionalTail(buffer)), 
                    (!1 === opts.clearMaskOnLostFocus || opts.showMaskOnFocus && document.activeElement === el || "" !== el.inputmask._valueGet(!0)) && writeBuffer(el, buffer), 
                    document.activeElement === el && caret(el, seekNext(getLastValidPosition()));
                }
            }
            if (void 0 !== actionObj) switch (actionObj.action) {
              case "isComplete":
                return el = actionObj.el, isComplete(getBuffer());

              case "unmaskedvalue":
                return void 0 !== el && void 0 === actionObj.value || (valueBuffer = actionObj.value, 
                valueBuffer = ($.isFunction(opts.onBeforeMask) && opts.onBeforeMask.call(inputmask, valueBuffer, opts) || valueBuffer).split(""), 
                checkVal.call(this, void 0, !1, !1, valueBuffer), $.isFunction(opts.onBeforeWrite) && opts.onBeforeWrite.call(inputmask, void 0, getBuffer(), 0, opts)), 
                unmaskedvalue(el);

              case "mask":
                mask(el);
                break;

              case "format":
                return valueBuffer = ($.isFunction(opts.onBeforeMask) && opts.onBeforeMask.call(inputmask, actionObj.value, opts) || actionObj.value).split(""), 
                checkVal.call(this, void 0, !0, !1, valueBuffer), actionObj.metadata ? {
                    value: isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join(""),
                    metadata: maskScope.call(this, {
                        action: "getmetadata"
                    }, maskset, opts)
                } : isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join("");

              case "isValid":
                actionObj.value ? (valueBuffer = ($.isFunction(opts.onBeforeMask) && opts.onBeforeMask.call(inputmask, actionObj.value, opts) || actionObj.value).split(""), 
                checkVal.call(this, void 0, !0, !1, valueBuffer)) : actionObj.value = isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join("");
                for (var buffer = getBuffer(), rl = determineLastRequiredPosition(), lmib = buffer.length - 1; rl < lmib && !isMask(lmib); lmib--) ;
                return buffer.splice(rl, lmib + 1 - rl), isComplete(buffer) && actionObj.value === (isRTL ? getBuffer().slice().reverse().join("") : getBuffer().join(""));

              case "getemptymask":
                return getBufferTemplate().join("");

              case "remove":
                if (el && el.inputmask) {
                    $.data(el, "_inputmask_opts", null), $el = $(el);
                    var cv = opts.autoUnmask ? unmaskedvalue(el) : el.inputmask._valueGet(opts.autoUnmask), valueProperty;
                    cv !== getBufferTemplate().join("") ? el.inputmask._valueSet(cv, opts.autoUnmask) : el.inputmask._valueSet(""), 
                    EventRuler.off(el), Object.getOwnPropertyDescriptor && Object.getPrototypeOf ? (valueProperty = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(el), "value"), 
                    valueProperty && el.inputmask.__valueGet && Object.defineProperty(el, "value", {
                        get: el.inputmask.__valueGet,
                        set: el.inputmask.__valueSet,
                        configurable: !0
                    })) : document.__lookupGetter__ && el.__lookupGetter__("value") && el.inputmask.__valueGet && (el.__defineGetter__("value", el.inputmask.__valueGet), 
                    el.__defineSetter__("value", el.inputmask.__valueSet)), el.inputmask = void 0;
                }
                return el;

              case "getmetadata":
                if ($.isArray(maskset.metadata)) {
                    var maskTarget = getMaskTemplate(!0, 0, !1).join("");
                    return $.each(maskset.metadata, function(ndx, mtdt) {
                        if (mtdt.mask === maskTarget) return maskTarget = mtdt, !1;
                    }), maskTarget;
                }
                return maskset.metadata;
            }
        };
    }, function(module, exports, __webpack_require__) {
        "use strict";
        function _typeof(obj) {
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function _typeof(obj) {
                return typeof obj;
            } : function _typeof(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, _typeof(obj);
        }
        var Inputmask = __webpack_require__(1), $ = Inputmask.dependencyLib, keyCode = __webpack_require__(0), formatCode = {
            d: [ "[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", Date.prototype.getDate ],
            dd: [ "0[1-9]|[12][0-9]|3[01]", Date.prototype.setDate, "day", function() {
                return pad(Date.prototype.getDate.call(this), 2);
            } ],
            ddd: [ "" ],
            dddd: [ "" ],
            m: [ "[1-9]|1[012]", Date.prototype.setMonth, "month", function() {
                return Date.prototype.getMonth.call(this) + 1;
            } ],
            mm: [ "0[1-9]|1[012]", Date.prototype.setMonth, "month", function() {
                return pad(Date.prototype.getMonth.call(this) + 1, 2);
            } ],
            mmm: [ "" ],
            mmmm: [ "" ],
            yy: [ "[0-9]{2}", Date.prototype.setFullYear, "year", function() {
                return pad(Date.prototype.getFullYear.call(this), 2);
            } ],
            yyyy: [ "[0-9]{4}", Date.prototype.setFullYear, "year", function() {
                return pad(Date.prototype.getFullYear.call(this), 4);
            } ],
            h: [ "[1-9]|1[0-2]", Date.prototype.setHours, "hours", Date.prototype.getHours ],
            hh: [ "0[1-9]|1[0-2]", Date.prototype.setHours, "hours", function() {
                return pad(Date.prototype.getHours.call(this), 2);
            } ],
            hx: [ function(x) {
                return "[0-9]{".concat(x, "}");
            }, Date.prototype.setHours, "hours", function(x) {
                return Date.prototype.getHours;
            } ],
            H: [ "1?[0-9]|2[0-3]", Date.prototype.setHours, "hours", Date.prototype.getHours ],
            HH: [ "0[0-9]|1[0-9]|2[0-3]", Date.prototype.setHours, "hours", function() {
                return pad(Date.prototype.getHours.call(this), 2);
            } ],
            Hx: [ function(x) {
                return "[0-9]{".concat(x, "}");
            }, Date.prototype.setHours, "hours", function(x) {
                return function() {
                    return pad(Date.prototype.getHours.call(this), x);
                };
            } ],
            M: [ "[1-5]?[0-9]", Date.prototype.setMinutes, "minutes", Date.prototype.getMinutes ],
            MM: [ "0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]", Date.prototype.setMinutes, "minutes", function() {
                return pad(Date.prototype.getMinutes.call(this), 2);
            } ],
            s: [ "[1-5]?[0-9]", Date.prototype.setSeconds, "seconds", Date.prototype.getSeconds ],
            ss: [ "0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9]", Date.prototype.setSeconds, "seconds", function() {
                return pad(Date.prototype.getSeconds.call(this), 2);
            } ],
            l: [ "[0-9]{3}", Date.prototype.setMilliseconds, "milliseconds", function() {
                return pad(Date.prototype.getMilliseconds.call(this), 3);
            } ],
            L: [ "[0-9]{2}", Date.prototype.setMilliseconds, "milliseconds", function() {
                return pad(Date.prototype.getMilliseconds.call(this), 2);
            } ],
            t: [ "[ap]" ],
            tt: [ "[ap]m" ],
            T: [ "[AP]" ],
            TT: [ "[AP]M" ],
            Z: [ "" ],
            o: [ "" ],
            S: [ "" ]
        }, formatAlias = {
            isoDate: "yyyy-mm-dd",
            isoTime: "HH:MM:ss",
            isoDateTime: "yyyy-mm-dd'T'HH:MM:ss",
            isoUtcDateTime: "UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"
        };
        function formatcode(match) {
            var dynMatches = new RegExp("\\d+$").exec(match[0]);
            if (dynMatches && void 0 !== dynMatches[0]) {
                var fcode = formatCode[match[0][0] + "x"].slice("");
                return fcode[0] = fcode[0](dynMatches[0]), fcode[3] = fcode[3](dynMatches[0]), fcode;
            }
            if (formatCode[match[0]]) return formatCode[match[0]];
        }
        function getTokenizer(opts) {
            if (!opts.tokenizer) {
                var tokens = [], dyntokens = [];
                for (var ndx in formatCode) if (/\.*x$/.test(ndx)) {
                    var dynToken = ndx[0] + "\\d+";
                    -1 === dyntokens.indexOf(dynToken) && dyntokens.push(dynToken);
                } else -1 === tokens.indexOf(ndx[0]) && tokens.push(ndx[0]);
                opts.tokenizer = "(" + (0 < dyntokens.length ? dyntokens.join("|") + "|" : "") + tokens.join("+|") + ")+?|.", 
                opts.tokenizer = new RegExp(opts.tokenizer, "g");
            }
            return opts.tokenizer;
        }
        function isValidDate(dateParts, currentResult) {
            return (!isFinite(dateParts.rawday) || "29" == dateParts.day && !isFinite(dateParts.rawyear) || new Date(dateParts.date.getFullYear(), isFinite(dateParts.rawmonth) ? dateParts.month : dateParts.date.getMonth() + 1, 0).getDate() >= dateParts.day) && currentResult;
        }
        function isDateInRange(dateParts, opts) {
            var result = !0;
            if (opts.min) {
                if (dateParts.rawyear) {
                    var rawYear = dateParts.rawyear.replace(/[^0-9]/g, ""), minYear = opts.min.year.substr(0, rawYear.length);
                    result = minYear <= rawYear;
                }
                dateParts.year === dateParts.rawyear && opts.min.date.getTime() == opts.min.date.getTime() && (result = opts.min.date.getTime() <= dateParts.date.getTime());
            }
            return result && opts.max && opts.max.date.getTime() == opts.max.date.getTime() && (result = opts.max.date.getTime() >= dateParts.date.getTime()), 
            result;
        }
        function parse(format, dateObjValue, opts, raw) {
            var mask = "", match, fcode;
            for (getTokenizer(opts).lastIndex = 0; match = getTokenizer(opts).exec(format); ) if (void 0 === dateObjValue) if (fcode = formatcode(match)) mask += "(" + fcode[0] + ")"; else switch (match[0]) {
              case "[":
                mask += "(";
                break;

              case "]":
                mask += ")?";
                break;

              default:
                mask += Inputmask.escapeRegex(match[0]);
            } else if (fcode = formatcode(match)) if (!0 !== raw && fcode[3]) {
                var getFn = fcode[3];
                mask += getFn.call(dateObjValue.date);
            } else fcode[2] ? mask += dateObjValue["raw" + fcode[2]] : mask += match[0]; else mask += match[0];
            return mask;
        }
        function pad(val, len) {
            for (val = String(val), len = len || 2; val.length < len; ) val = "0" + val;
            return val;
        }
        function analyseMask(maskString, format, opts) {
            var dateObj = {
                date: new Date(1, 0, 1)
            }, targetProp, mask = maskString, match, dateOperation;
            function extendProperty(value) {
                var correctedValue = value.replace(/[^0-9]/g, "0");
                return correctedValue;
            }
            function setValue(dateObj, value, opts) {
                dateObj[targetProp] = extendProperty(value), dateObj["raw" + targetProp] = value, 
                void 0 !== dateOperation && dateOperation.call(dateObj.date, "month" == targetProp ? parseInt(dateObj[targetProp]) - 1 : dateObj[targetProp]);
            }
            if ("string" == typeof mask) {
                for (getTokenizer(opts).lastIndex = 0; match = getTokenizer(opts).exec(format); ) {
                    var value = mask.slice(0, match[0].length);
                    formatCode.hasOwnProperty(match[0]) && (targetProp = formatCode[match[0]][2], dateOperation = formatCode[match[0]][1], 
                    setValue(dateObj, value, opts)), mask = mask.slice(value.length);
                }
                return dateObj;
            }
            if (mask && "object" === _typeof(mask) && mask.hasOwnProperty("date")) return mask;
        }
        function importDate(dateObj, opts) {
            var match, date = "";
            for (getTokenizer(opts).lastIndex = 0; match = getTokenizer(opts).exec(opts.inputFormat); ) "d" === match[0].charAt(0) ? date += pad(dateObj.getDate(), match[0].length) : "m" === match[0].charAt(0) ? date += pad(dateObj.getMonth() + 1, match[0].length) : "yyyy" === match[0] ? date += dateObj.getFullYear().toString() : "y" === match[0].charAt(0) && (date += pad(dateObj.getYear(), match[0].length));
            return date;
        }
        function getTokenMatch(pos, opts) {
            var calcPos = 0, targetMatch, match;
            for (getTokenizer(opts).lastIndex = 0; match = getTokenizer(opts).exec(opts.inputFormat); ) if (calcPos += match[0].length, 
            pos <= calcPos) {
                targetMatch = match, match = getTokenizer(opts).exec(opts.inputFormat);
                break;
            }
            return {
                nextMatch: match,
                targetMatch: targetMatch
            };
        }
        Inputmask.extendAliases({
            datetime: {
                mask: function mask(opts) {
                    return formatCode.S = opts.i18n.ordinalSuffix.join("|"), opts.inputFormat = formatAlias[opts.inputFormat] || opts.inputFormat, 
                    opts.displayFormat = formatAlias[opts.displayFormat] || opts.displayFormat || opts.inputFormat, 
                    opts.outputFormat = formatAlias[opts.outputFormat] || opts.outputFormat || opts.inputFormat, 
                    opts.placeholder = "" !== opts.placeholder ? opts.placeholder : opts.inputFormat.replace(/[[\]]/, ""), 
                    opts.regex = parse(opts.inputFormat, void 0, opts), opts.min = analyseMask(opts.min, opts.inputFormat, opts), 
                    opts.max = analyseMask(opts.max, opts.inputFormat, opts), null;
                },
                placeholder: "",
                inputFormat: "isoDateTime",
                displayFormat: void 0,
                outputFormat: void 0,
                min: null,
                max: null,
                skipOptionalPartCharacter: "",
                i18n: {
                    dayNames: [ "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" ],
                    monthNames: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
                    ordinalSuffix: [ "st", "nd", "rd", "th" ]
                },
                preValidation: function preValidation(buffer, pos, c, isSelection, opts, maskset, caretPos, strict) {
                    if (strict) return !0;
                    if (isNaN(c) && buffer[pos] !== c) {
                        var tokenMatch = getTokenMatch(pos, opts);
                        if (tokenMatch.nextMatch && tokenMatch.nextMatch[0] === c && 1 < tokenMatch.targetMatch[0].length) {
                            var validator = formatCode[tokenMatch.targetMatch[0]][0];
                            if (new RegExp(validator).test("0" + buffer[pos - 1])) return buffer[pos] = buffer[pos - 1], 
                            buffer[pos - 1] = "0", {
                                fuzzy: !0,
                                buffer: buffer,
                                refreshFromBuffer: {
                                    start: pos - 1,
                                    end: pos + 1
                                },
                                pos: pos + 1
                            };
                        }
                    }
                    return !0;
                },
                postValidation: function postValidation(buffer, pos, c, currentResult, opts, maskset, strict) {
                    if (strict) return !0;
                    var tokenMatch;
                    if (!1 === currentResult) {
                        if (tokenMatch = getTokenMatch(pos + 1, opts), tokenMatch.targetMatch && tokenMatch.targetMatch.index === pos && 1 < tokenMatch.targetMatch[0].length && void 0 !== formatCode[tokenMatch.targetMatch[0]]) {
                            var validator = formatCode[tokenMatch.targetMatch[0]][0];
                            if (new RegExp(validator).test("0" + c)) return {
                                insert: [ {
                                    pos: pos,
                                    c: "0"
                                }, {
                                    pos: pos + 1,
                                    c: c
                                } ],
                                pos: pos + 1
                            };
                        }
                        return currentResult;
                    }
                    if (currentResult.fuzzy && (buffer = currentResult.buffer, pos = currentResult.pos), 
                    tokenMatch = getTokenMatch(pos, opts), tokenMatch.targetMatch && tokenMatch.targetMatch[0] && void 0 !== formatCode[tokenMatch.targetMatch[0]]) {
                        var validator = formatCode[tokenMatch.targetMatch[0]][0], part = buffer.slice(tokenMatch.targetMatch.index, tokenMatch.targetMatch.index + tokenMatch.targetMatch[0].length);
                        !1 === new RegExp(validator).test(part.join("")) && 2 === tokenMatch.targetMatch[0].length && maskset.validPositions[tokenMatch.targetMatch.index] && maskset.validPositions[tokenMatch.targetMatch.index + 1] && (maskset.validPositions[tokenMatch.targetMatch.index + 1].input = "0");
                    }
                    var result = currentResult, dateParts = analyseMask(buffer.join(""), opts.inputFormat, opts);
                    return result && dateParts.date.getTime() == dateParts.date.getTime() && (result = isValidDate(dateParts, result), 
                    result = result && isDateInRange(dateParts, opts)), pos && result && currentResult.pos !== pos ? {
                        buffer: parse(opts.inputFormat, dateParts, opts).split(""),
                        refreshFromBuffer: {
                            start: pos,
                            end: currentResult.pos
                        }
                    } : result;
                },
                onKeyDown: function onKeyDown(e, buffer, caretPos, opts) {
                    var input = this;
                    e.ctrlKey && e.keyCode === keyCode.RIGHT && (this.inputmask._valueSet(importDate(new Date(), opts)), 
                    $(this).trigger("setvalue"));
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    return unmaskedValue ? parse(opts.outputFormat, analyseMask(maskedValue, opts.inputFormat, opts), opts, !0) : unmaskedValue;
                },
                casing: function casing(elem, test, pos, validPositions) {
                    return 0 == test.nativeDef.indexOf("[ap]") ? elem.toLowerCase() : 0 == test.nativeDef.indexOf("[AP]") ? elem.toUpperCase() : elem;
                },
                onBeforeMask: function onBeforeMask(initialValue, opts) {
                    return "[object Date]" === Object.prototype.toString.call(initialValue) && (initialValue = importDate(initialValue, opts)), 
                    initialValue;
                },
                insertMode: !1,
                shiftPositions: !1,
                keepStatic: !1,
                inputmode: "numeric"
            }
        }), module.exports = Inputmask;
    }, function(module, exports, __webpack_require__) {
        "use strict";
        var Inputmask = __webpack_require__(1), $ = Inputmask.dependencyLib, keyCode = __webpack_require__(0);
        function autoEscape(txt, opts) {
            for (var escapedTxt = "", i = 0; i < txt.length; i++) Inputmask.prototype.definitions[txt.charAt(i)] || opts.definitions[txt.charAt(i)] || opts.optionalmarker[0] === txt.charAt(i) || opts.optionalmarker[1] === txt.charAt(i) || opts.quantifiermarker[0] === txt.charAt(i) || opts.quantifiermarker[1] === txt.charAt(i) || opts.groupmarker[0] === txt.charAt(i) || opts.groupmarker[1] === txt.charAt(i) || opts.alternatormarker === txt.charAt(i) ? escapedTxt += "\\" + txt.charAt(i) : escapedTxt += txt.charAt(i);
            return escapedTxt;
        }
        function alignDigits(buffer, digits, opts, force) {
            if (0 < digits && (!opts.digitsOptional || force)) {
                var radixPosition = $.inArray(opts.radixPoint, buffer);
                -1 === radixPosition && (buffer.push(opts.radixPoint), radixPosition = buffer.length - 1);
                for (var i = 1; i <= digits; i++) buffer[radixPosition + i] = buffer[radixPosition + i] || "0";
            }
            return buffer;
        }
        function findValidator(symbol, maskset) {
            var posNdx = 0;
            if ("+" === symbol) {
                for (posNdx in maskset.validPositions) ;
                posNdx = parseInt(posNdx);
            }
            for (var tstNdx in maskset.tests) if (tstNdx = parseInt(tstNdx), posNdx <= tstNdx) for (var ndx = 0, ndxl = maskset.tests[tstNdx].length; ndx < ndxl; ndx++) if ((void 0 === maskset.validPositions[tstNdx] || "-" === symbol) && maskset.tests[tstNdx][ndx].match.def === symbol) return tstNdx + (void 0 !== maskset.validPositions[tstNdx] && "-" !== symbol ? 1 : 0);
            return posNdx;
        }
        function findValid(symbol, maskset) {
            var ret = -1;
            return $.each(maskset.validPositions, function(ndx, tst) {
                if (tst && tst.match.def === symbol) return ret = parseInt(ndx), !1;
            }), ret;
        }
        function parseMinMaxOptions(opts) {
            void 0 === opts.parseMinMaxOptions && (null !== opts.min && (opts.min = opts.min.toString().replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), "g"), ""), 
            "," === opts.radixPoint && (opts.min = opts.min.replace(opts.radixPoint, ".")), 
            opts.min = isFinite(opts.min) ? parseFloat(opts.min) : NaN, isNaN(opts.min) && (opts.min = Number.MIN_VALUE)), 
            null !== opts.max && (opts.max = opts.max.toString().replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), "g"), ""), 
            "," === opts.radixPoint && (opts.max = opts.max.replace(opts.radixPoint, ".")), 
            opts.max = isFinite(opts.max) ? parseFloat(opts.max) : NaN, isNaN(opts.max) && (opts.max = Number.MAX_VALUE)), 
            opts.parseMinMaxOptions = "done");
        }
        function genMask(opts) {
            opts.repeat = 0, opts.groupSeparator === opts.radixPoint && opts.digits && "0" !== opts.digits && ("." === opts.radixPoint ? opts.groupSeparator = "," : "," === opts.radixPoint ? opts.groupSeparator = "." : opts.groupSeparator = ""), 
            " " === opts.groupSeparator && (opts.skipOptionalPartCharacter = void 0), 1 < opts.placeholder.length && (opts.placeholder = opts.placeholder.charAt(0)), 
            "radixFocus" === opts.positionCaretOnClick && "" === opts.placeholder && (opts.positionCaretOnClick = "lvp");
            var decimalDef = "0", radixPointDef = opts.radixPoint;
            !0 === opts.numericInput && void 0 === opts.__financeInput ? (decimalDef = "1", 
            opts.positionCaretOnClick = "radixFocus" === opts.positionCaretOnClick ? "lvp" : opts.positionCaretOnClick, 
            opts.digitsOptional = !1, isNaN(opts.digits) && (opts.digits = 2), opts._radixDance = !1, 
            radixPointDef = "," === opts.radixPoint ? "^" : "\xa8", "" !== opts.radixPoint && void 0 === opts.definitions[radixPointDef] && (opts.definitions[radixPointDef] = {}, 
            opts.definitions[radixPointDef].validator = "[" + opts.radixPoint + "]", opts.definitions[radixPointDef].placeholder = opts.radixPoint, 
            opts.definitions[radixPointDef].static = !0, opts.definitions[radixPointDef].generated = !0)) : (opts.__financeInput = !1, 
            opts.numericInput = !0);
            var mask = "[+]", altMask;
            if (mask += autoEscape(opts.prefix, opts), "" !== opts.groupSeparator ? (void 0 === opts.definitions[opts.groupSeparator] && (opts.definitions[opts.groupSeparator] = {}, 
            opts.definitions[opts.groupSeparator].validator = "[" + opts.groupSeparator + "]", 
            opts.definitions[opts.groupSeparator].placeholder = opts.groupSeparator, opts.definitions[opts.groupSeparator].static = !0, 
            opts.definitions[opts.groupSeparator].generated = !0), mask += opts._mask(opts)) : mask += "9{+}", 
            void 0 !== opts.digits && 0 !== opts.digits) {
                var dq = opts.digits.toString().split(",");
                isFinite(dq[0]) && dq[1] && isFinite(dq[1]) ? mask += radixPointDef + decimalDef + "{" + opts.digits + "}" : (isNaN(opts.digits) || 0 < parseInt(opts.digits)) && (opts.digitsOptional ? (altMask = mask + radixPointDef + decimalDef + "{0," + opts.digits + "}", 
                opts.keepStatic = !0) : mask += radixPointDef + decimalDef + "{" + opts.digits + "}");
            }
            return mask += autoEscape(opts.suffix, opts), mask += "[-]", altMask && (mask = [ altMask + autoEscape(opts.suffix, opts) + "[-]", mask ]), 
            opts.greedy = !1, parseMinMaxOptions(opts), mask;
        }
        function hanndleRadixDance(pos, c, radixPos, maskset, opts) {
            return opts._radixDance && opts.numericInput && c !== opts.negationSymbol.back && pos <= radixPos && (0 < radixPos || c == opts.radixPoint) && (void 0 === maskset.validPositions[pos - 1] || maskset.validPositions[pos - 1].input !== opts.negationSymbol.back) && (pos -= 1), 
            pos;
        }
        function decimalValidator(chrs, maskset, pos, strict, opts) {
            var radixPos = maskset.buffer ? maskset.buffer.indexOf(opts.radixPoint) : -1, result = -1 !== radixPos && new RegExp("[0-9\uff11-\uff19]").test(chrs);
            return opts._radixDance && result && null == maskset.validPositions[radixPos] ? {
                insert: {
                    pos: radixPos === pos ? radixPos + 1 : radixPos,
                    c: opts.radixPoint
                },
                pos: pos
            } : result;
        }
        function checkForLeadingZeroes(buffer, opts) {
            var numberMatches = new RegExp("(^" + ("" !== opts.negationSymbol.front ? Inputmask.escapeRegex(opts.negationSymbol.front) + "?" : "") + Inputmask.escapeRegex(opts.prefix) + ")(.*)(" + Inputmask.escapeRegex(opts.suffix) + ("" != opts.negationSymbol.back ? Inputmask.escapeRegex(opts.negationSymbol.back) + "?" : "") + "$)").exec(buffer.slice().reverse().join("")), number = numberMatches ? numberMatches[2] : "", leadingzeroes = !1;
            return number && (number = number.split(opts.radixPoint.charAt(0))[0], leadingzeroes = new RegExp("^[0" + opts.groupSeparator + "]*").exec(number)), 
            !(!leadingzeroes || !(1 < leadingzeroes[0].length || 0 < leadingzeroes[0].length && leadingzeroes[0].length < number.length)) && leadingzeroes;
        }
        Inputmask.extendAliases({
            numeric: {
                mask: genMask,
                _mask: function _mask(opts) {
                    return "(" + opts.groupSeparator + "999){+|1}";
                },
                digits: "*",
                digitsOptional: !0,
                enforceDigitsOnBlur: !1,
                radixPoint: ".",
                positionCaretOnClick: "radixFocus",
                _radixDance: !0,
                groupSeparator: "",
                allowMinus: !0,
                negationSymbol: {
                    front: "-",
                    back: ""
                },
                prefix: "",
                suffix: "",
                min: null,
                max: null,
                step: 1,
                unmaskAsNumber: !1,
                roundingFN: Math.round,
                inputmode: "numeric",
                shortcuts: {
                    k: "000",
                    m: "000000"
                },
                placeholder: "0",
                greedy: !1,
                rightAlign: !0,
                insertMode: !0,
                autoUnmask: !1,
                skipOptionalPartCharacter: "",
                definitions: {
                    0: {
                        validator: decimalValidator
                    },
                    1: {
                        validator: decimalValidator,
                        definitionSymbol: "*"
                    },
                    "+": {
                        validator: function validator(chrs, maskset, pos, strict, opts) {
                            return opts.allowMinus && ("-" === chrs || chrs === opts.negationSymbol.front);
                        }
                    },
                    "-": {
                        validator: function validator(chrs, maskset, pos, strict, opts) {
                            return opts.allowMinus && chrs === opts.negationSymbol.back;
                        }
                    }
                },
                preValidation: function preValidation(buffer, pos, c, isSelection, opts, maskset, caretPos, strict) {
                    if (!1 !== opts.__financeInput && c === opts.radixPoint) return !1;
                    var pattern;
                    if (pattern = opts.shortcuts && opts.shortcuts[c]) {
                        if (1 < pattern.length) for (var inserts = [], i = 0; i < pattern.length; i++) inserts.push({
                            pos: pos + i,
                            c: pattern[i],
                            strict: !1
                        });
                        return {
                            insert: inserts
                        };
                    }
                    var radixPos = $.inArray(opts.radixPoint, buffer), initPos = pos;
                    if (pos = hanndleRadixDance(pos, c, radixPos, maskset, opts), "-" === c || c === opts.negationSymbol.front) {
                        if (!0 !== opts.allowMinus) return !1;
                        var isNegative = !1, front = findValid("+", maskset), back = findValid("-", maskset);
                        return -1 !== front && (isNegative = [ front, back ]), !1 !== isNegative ? {
                            remove: isNegative,
                            caret: initPos
                        } : {
                            insert: [ {
                                pos: findValidator("+", maskset),
                                c: opts.negationSymbol.front,
                                fromIsValid: !0
                            }, {
                                pos: findValidator("-", maskset),
                                c: opts.negationSymbol.back,
                                fromIsValid: void 0
                            } ],
                            caret: initPos + opts.negationSymbol.back.length
                        };
                    }
                    if (strict) return !0;
                    if (-1 !== radixPos && !0 === opts._radixDance && !1 === isSelection && c === opts.radixPoint && void 0 !== opts.digits && (isNaN(opts.digits) || 0 < parseInt(opts.digits)) && radixPos !== pos) return {
                        caret: opts._radixDance && pos === radixPos - 1 ? radixPos + 1 : radixPos
                    };
                    if (!1 === opts.__financeInput) if (isSelection) {
                        if (opts.digitsOptional) return {
                            rewritePosition: caretPos.end
                        };
                        if (!opts.digitsOptional) {
                            if (caretPos.begin > radixPos && caretPos.end <= radixPos) return c === opts.radixPoint ? {
                                insert: {
                                    pos: radixPos + 1,
                                    c: "0",
                                    fromIsValid: !0
                                },
                                rewritePosition: radixPos
                            } : {
                                rewritePosition: radixPos + 1
                            };
                            if (caretPos.begin < radixPos) return {
                                rewritePosition: caretPos.begin - 1
                            };
                        }
                    } else if (!opts.showMaskOnHover && !opts.showMaskOnFocus && !opts.digitsOptional && 0 < opts.digits && "" === this.inputmask.__valueGet.call(this)) return {
                        rewritePosition: radixPos
                    };
                    return {
                        rewritePosition: pos
                    };
                },
                postValidation: function postValidation(buffer, pos, c, currentResult, opts, maskset, strict) {
                    if (!1 === currentResult) return currentResult;
                    if (strict) return !0;
                    if (null !== opts.min || null !== opts.max) {
                        var unmasked = opts.onUnMask(buffer.slice().reverse().join(""), void 0, $.extend({}, opts, {
                            unmaskAsNumber: !0
                        }));
                        if (null !== opts.min && unmasked < opts.min && (unmasked.toString().length >= opts.min.toString().length || unmasked < 0)) return {
                            refreshFromBuffer: !0,
                            buffer: alignDigits(opts.min.toString().replace(".", opts.radixPoint).split(""), opts.digits, opts).reverse()
                        };
                        if (null !== opts.max && unmasked > opts.max) return {
                            refreshFromBuffer: !0,
                            buffer: alignDigits(opts.max.toString().replace(".", opts.radixPoint).split(""), opts.digits, opts).reverse()
                        };
                    }
                    return currentResult;
                },
                onUnMask: function onUnMask(maskedValue, unmaskedValue, opts) {
                    if ("" === unmaskedValue && !0 === opts.nullable) return unmaskedValue;
                    var processValue = maskedValue.replace(opts.prefix, "");
                    return processValue = processValue.replace(opts.suffix, ""), processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator), "g"), ""), 
                    "" !== opts.placeholder.charAt(0) && (processValue = processValue.replace(new RegExp(opts.placeholder.charAt(0), "g"), "0")), 
                    opts.unmaskAsNumber ? ("" !== opts.radixPoint && -1 !== processValue.indexOf(opts.radixPoint) && (processValue = processValue.replace(Inputmask.escapeRegex.call(this, opts.radixPoint), ".")), 
                    processValue = processValue.replace(new RegExp("^" + Inputmask.escapeRegex(opts.negationSymbol.front)), "-"), 
                    processValue = processValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + "$"), ""), 
                    Number(processValue)) : processValue;
                },
                isComplete: function isComplete(buffer, opts) {
                    var maskedValue = (opts.numericInput ? buffer.slice().reverse() : buffer).join("");
                    return maskedValue = maskedValue.replace(new RegExp("^" + Inputmask.escapeRegex(opts.negationSymbol.front)), "-"), 
                    maskedValue = maskedValue.replace(new RegExp(Inputmask.escapeRegex(opts.negationSymbol.back) + "$"), ""), 
                    maskedValue = maskedValue.replace(opts.prefix, ""), maskedValue = maskedValue.replace(opts.suffix, ""), 
                    maskedValue = maskedValue.replace(new RegExp(Inputmask.escapeRegex(opts.groupSeparator) + "([0-9]{3})", "g"), "$1"), 
                    "," === opts.radixPoint && (maskedValue = maskedValue.replace(Inputmask.escapeRegex(opts.radixPoint), ".")), 
                    isFinite(maskedValue);
                },
                onBeforeMask: function onBeforeMask(initialValue, opts) {
                    var radixPoint = opts.radixPoint || ",";
                    "number" != typeof initialValue && "number" !== opts.inputType || "" === radixPoint || (initialValue = initialValue.toString().replace(".", radixPoint));
                    var valueParts = initialValue.split(radixPoint), integerPart = valueParts[0].replace(/[^\-0-9]/g, ""), decimalPart = 1 < valueParts.length ? valueParts[1].replace(/[^0-9]/g, "") : "", forceDigits = 1 < valueParts.length;
                    initialValue = integerPart + ("" !== decimalPart ? radixPoint + decimalPart : decimalPart);
                    var digits = 0;
                    if ("" !== radixPoint && (digits = decimalPart.length, "" !== decimalPart)) {
                        var digitsFactor = Math.pow(10, digits || 1);
                        isFinite(opts.digits) && (digits = parseInt(opts.digits), digitsFactor = Math.pow(10, digits)), 
                        initialValue = initialValue.replace(Inputmask.escapeRegex(radixPoint), "."), isFinite(initialValue) && (initialValue = (opts.roundingFN(parseFloat(initialValue) * digitsFactor) / digitsFactor).toFixed(digits)), 
                        initialValue = initialValue.toString().replace(".", radixPoint);
                    }
                    if (0 === opts.digits && -1 !== initialValue.indexOf(Inputmask.escapeRegex(radixPoint)) && (initialValue = initialValue.substring(0, initialValue.indexOf(Inputmask.escapeRegex(radixPoint)))), 
                    null !== opts.min || null !== opts.max) {
                        var numberValue = initialValue.toString().replace(radixPoint, ".");
                        null !== opts.min && numberValue < opts.min ? initialValue = opts.min.toString().replace(".", radixPoint) : null !== opts.max && numberValue > opts.max && (initialValue = opts.max.toString().replace(".", radixPoint));
                    }
                    return alignDigits(initialValue.toString().split(""), digits, opts, forceDigits).join("");
                },
                onBeforeWrite: function onBeforeWrite(e, buffer, caretPos, opts) {
                    function stripBuffer(buffer, stripRadix) {
                        if (!1 !== opts.__financeInput || stripRadix) {
                            var position = $.inArray(opts.radixPoint, buffer);
                            -1 !== position && buffer.splice(position, 1);
                        }
                        if ("" !== opts.groupSeparator) for (;-1 !== (position = buffer.indexOf(opts.groupSeparator)); ) buffer.splice(position, 1);
                        return buffer;
                    }
                    var result, leadingzeroes = checkForLeadingZeroes(buffer, opts);
                    if (leadingzeroes) {
                        var buf = buffer.slice().reverse(), caretNdx = buf.join("").indexOf(leadingzeroes[0]);
                        buf.splice(caretNdx, leadingzeroes[0].length);
                        var newCaretPos = buf.length - caretNdx;
                        stripBuffer(buf), result = {
                            refreshFromBuffer: !0,
                            buffer: buf.reverse(),
                            caret: caretPos < newCaretPos ? caretPos : newCaretPos
                        };
                    }
                    if (e) switch (e.type) {
                      case "blur":
                      case "checkval":
                        if (null !== opts.min) {
                            var unmasked = opts.onUnMask(buffer.slice().reverse().join(""), void 0, $.extend({}, opts, {
                                unmaskAsNumber: !0
                            }));
                            if (null !== opts.min && unmasked < opts.min) return {
                                refreshFromBuffer: !0,
                                buffer: alignDigits(opts.min.toString().replace(".", opts.radixPoint).split(""), opts.digits, opts).reverse()
                            };
                        }
                        if (buffer[buffer.length - 1] === opts.negationSymbol.front) {
                            var nmbrMtchs = new RegExp("(^" + ("" != opts.negationSymbol.front ? Inputmask.escapeRegex(opts.negationSymbol.front) + "?" : "") + Inputmask.escapeRegex(opts.prefix) + ")(.*)(" + Inputmask.escapeRegex(opts.suffix) + ("" != opts.negationSymbol.back ? Inputmask.escapeRegex(opts.negationSymbol.back) + "?" : "") + "$)").exec(stripBuffer(buffer.slice(), !0).reverse().join("")), number = nmbrMtchs ? nmbrMtchs[2] : "";
                            0 == number && (result = {
                                refreshFromBuffer: !0,
                                buffer: [ 0 ]
                            });
                        } else "" !== opts.radixPoint && buffer[0] === opts.radixPoint && (result && result.buffer ? result.buffer.shift() : (buffer.shift(), 
                        result = {
                            refreshFromBuffer: !0,
                            buffer: stripBuffer(buffer)
                        }));
                        if (opts.enforceDigitsOnBlur) {
                            result = result || {};
                            var bffr = result && result.buffer || buffer.slice().reverse();
                            result.refreshFromBuffer = !0, result.buffer = alignDigits(bffr, opts.digits, opts, !0).reverse();
                        }
                    }
                    return result;
                },
                onKeyDown: function onKeyDown(e, buffer, caretPos, opts) {
                    var $input = $(this), bffr;
                    if (e.ctrlKey) switch (e.keyCode) {
                      case keyCode.UP:
                        return this.inputmask.__valueSet.call(this, parseFloat(this.inputmask.unmaskedvalue()) + parseInt(opts.step)), 
                        $input.trigger("setvalue"), !1;

                      case keyCode.DOWN:
                        return this.inputmask.__valueSet.call(this, parseFloat(this.inputmask.unmaskedvalue()) - parseInt(opts.step)), 
                        $input.trigger("setvalue"), !1;
                    }
                    if (!e.shiftKey && (e.keyCode === keyCode.DELETE || e.keyCode === keyCode.BACKSPACE || e.keyCode === keyCode.BACKSPACE_SAFARI)) {
                        if (buffer[e.keyCode === keyCode.DELETE ? caretPos.begin - 1 : caretPos.end] === opts.negationSymbol.front) return bffr = buffer.slice().reverse(), 
                        "" !== opts.negationSymbol.front && bffr.shift(), "" !== opts.negationSymbol.back && bffr.pop(), 
                        $input.trigger("setvalue", [ bffr.join(""), caretPos.begin ]), !1;
                        if (!0 === opts._radixDance) {
                            var radixPos = $.inArray(opts.radixPoint, buffer);
                            if (opts.digitsOptional) {
                                if (0 === radixPos) return bffr = buffer.slice().reverse(), bffr.pop(), $input.trigger("setvalue", [ bffr.join(""), caretPos.begin >= bffr.length ? bffr.length : caretPos.begin ]), 
                                !1;
                            } else if (-1 !== radixPos && (caretPos.begin < radixPos || caretPos.end < radixPos || e.keyCode === keyCode.DELETE && caretPos.begin === radixPos)) return caretPos.begin !== caretPos.end || e.keyCode !== keyCode.BACKSPACE && e.keyCode !== keyCode.BACKSPACE_SAFARI || caretPos.begin++, 
                            bffr = buffer.slice().reverse(), bffr.splice(bffr.length - caretPos.begin, caretPos.begin - caretPos.end + 1), 
                            bffr = alignDigits(bffr, opts.digits, opts).join(""), $input.trigger("setvalue", [ bffr, caretPos.begin >= bffr.length ? radixPos + 1 : caretPos.begin ]), 
                            !1;
                        }
                    }
                }
            },
            currency: {
                prefix: "",
                groupSeparator: ",",
                alias: "numeric",
                digits: 2,
                digitsOptional: !1
            },
            decimal: {
                alias: "numeric"
            },
            integer: {
                alias: "numeric",
                digits: 0
            },
            percentage: {
                alias: "numeric",
                min: 0,
                max: 100,
                suffix: " %",
                digits: 0,
                allowMinus: !1
            },
            indianns: {
                alias: "numeric",
                _mask: function _mask(opts) {
                    return "(" + opts.groupSeparator + "99){*|1}(" + opts.groupSeparator + "999){1|1}";
                },
                groupSeparator: ",",
                radixPoint: ".",
                placeholder: "0",
                digits: 2,
                digitsOptional: !1
            }
        }), module.exports = Inputmask;
    }, function(module, exports, __webpack_require__) {
        "use strict";
        function _typeof(obj) {
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function _typeof(obj) {
                return typeof obj;
            } : function _typeof(obj) {
                return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            }, _typeof(obj);
        }
        var $ = __webpack_require__(3), Inputmask = __webpack_require__(1);
        void 0 === $.fn.inputmask && ($.fn.inputmask = function(fn, options) {
            var nptmask, input = this[0];
            if (void 0 === options && (options = {}), "string" == typeof fn) switch (fn) {
              case "unmaskedvalue":
                return input && input.inputmask ? input.inputmask.unmaskedvalue() : $(input).val();

              case "remove":
                return this.each(function() {
                    this.inputmask && this.inputmask.remove();
                });

              case "getemptymask":
                return input && input.inputmask ? input.inputmask.getemptymask() : "";

              case "hasMaskedValue":
                return !(!input || !input.inputmask) && input.inputmask.hasMaskedValue();

              case "isComplete":
                return !input || !input.inputmask || input.inputmask.isComplete();

              case "getmetadata":
                return input && input.inputmask ? input.inputmask.getmetadata() : void 0;

              case "setvalue":
                Inputmask.setValue(input, options);
                break;

              case "option":
                if ("string" != typeof options) return this.each(function() {
                    if (void 0 !== this.inputmask) return this.inputmask.option(options);
                });
                if (input && void 0 !== input.inputmask) return input.inputmask.option(options);
                break;

              default:
                return options.alias = fn, nptmask = new Inputmask(options), this.each(function() {
                    nptmask.mask(this);
                });
            } else {
                if (Array.isArray(fn)) return options.alias = fn, nptmask = new Inputmask(options), 
                this.each(function() {
                    nptmask.mask(this);
                });
                if ("object" == _typeof(fn)) return nptmask = new Inputmask(fn), void 0 === fn.mask && void 0 === fn.alias ? this.each(function() {
                    if (void 0 !== this.inputmask) return this.inputmask.option(fn);
                    nptmask.mask(this);
                }) : this.each(function() {
                    nptmask.mask(this);
                });
                if (void 0 === fn) return this.each(function() {
                    nptmask = new Inputmask(options), nptmask.mask(this);
                });
            }
        });
    }, function(module, exports, __webpack_require__) {
        "use strict";
        var im = __webpack_require__(6), jQuery = __webpack_require__(3);
        im.dependencyLib === jQuery && __webpack_require__(11), module.exports = im;
    } ], installedModules = {}, __webpack_require__.m = modules, __webpack_require__.c = installedModules, 
    __webpack_require__.d = function(exports, name, getter) {
        __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {
            enumerable: !0,
            get: getter
        });
    }, __webpack_require__.r = function(exports) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(exports, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(exports, "__esModule", {
            value: !0
        });
    }, __webpack_require__.t = function(value, mode) {
        if (1 & mode && (value = __webpack_require__(value)), 8 & mode) return value;
        if (4 & mode && "object" == typeof value && value && value.__esModule) return value;
        var ns = Object.create(null);
        if (__webpack_require__.r(ns), Object.defineProperty(ns, "default", {
            enumerable: !0,
            value: value
        }), 2 & mode && "string" != typeof value) for (var key in value) __webpack_require__.d(ns, key, function(key) {
            return value[key];
        }.bind(null, key));
        return ns;
    }, __webpack_require__.n = function(module) {
        var getter = module && module.__esModule ? function getDefault() {
            return module.default;
        } : function getModuleExports() {
            return module;
        };
        return __webpack_require__.d(getter, "a", getter), getter;
    }, __webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
    }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 12);
    function __webpack_require__(moduleId) {
        if (installedModules[moduleId]) return installedModules[moduleId].exports;
        var module = installedModules[moduleId] = {
            i: moduleId,
            l: !1,
            exports: {}
        };
        return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), 
        module.l = !0, module.exports;
    }
    var modules, installedModules;
});